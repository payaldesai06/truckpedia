{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/core-js/object/values.js","webpack:///resources/js/src/views/pages/menu/MenuView.vue","webpack:///./resources/js/src/views/pages/menu/MenuView.vue","webpack:///./node_modules/core-js/library/fn/object/values.js","webpack:///./node_modules/core-js/library/modules/es7.object.values.js","webpack:///./resources/js/src/views/pages/menu/MenuView.vue?3b07","webpack:///./resources/js/src/views/pages/menu/MenuView.vue?347f","webpack:///./resources/js/src/views/pages/menu/MenuView.vue?4dea","webpack:///./resources/js/src/views/pages/menu/MenuView.vue?53f0","webpack:///./resources/js/src/views/pages/menu/MenuView.vue?d587","webpack:///./resources/js/src/views/pages/menu/MenuView.vue?4eb6","webpack:///./resources/js/src/views/pages/menu/helpers/helper.js","webpack:///./resources/js/src/views/pages/menu/mixins/GroupBy.js"],"names":["render","_vm","_c","_self","staticClass","class","_v","_s","subMenuName","_l","viewOptions","id","title","icon","isActive","name","key","attrs","color","nativeOn","click","$event","changeTab","size","on","stopPropagation","showViewPrompt","apply","arguments","currentComponent","ref","tag","viewMetaData","customFields","recordData","fetchingData","toggleDetailsView","updateView","updateRecord","_e","viewPromptVisible","close","submit","addView","fieldTypes","submitRecord","deleteRecord","addField","updateField","uploadFiles","deleteFile","deleteField","searchLinkedRecords","staticRenderFns","_withStripped","menuViews","list","board","gantt","table","label","value","computed","mapGetters","allUsersMap","getAllUsersList","reduce","acc","item","customFieldsToRender","customFieldsMap","show","columns","length","columnsToRender","map","customFieldId","sort","a","b","order","customFieldsToRenderMap","idOfFieldsToRender","x","formattedRecordData","res","formatData","sortData","records","tableSortSchema","field","sortOrder","fieldA","customFieldsData","find","f","fieldId","fieldB","type","textValue","localeCompare","aField","parseFloat","numberValue","bField","currencyValue","viewData","selectedGroupBy","groupById","groupBy","temp","singleSelectTypeSortedData","textTypeSortedData","userTypeSortedData","dateTypeSortedData","numberTypeSortedData","currencyTypeSortedData","dateNoTzTypeSortedData","multiSelectTypeSortedData","recordLinkTypeSortedData","selectedField","sortedKeys","sortedObj","forEach","isNaN","includes","groupByOptions","isDisabled","filter","unshift","firstLevel","selectedGrouping","singleSelect","methods","groupByValues","Boolean","record","noDatLabel","usersList","userValue","userId","join","userNameMap","fullName","assigneeNameMap","split","userMap","dateValue","utcDateOnly","utcTimeOnly","convertToLocalDateTime","compareString","dateNoTzValue","localDateOnly","localTimeOnly","singleSelectOptions","optionId","optionName","singleSelectValue","push","timeZoneAbbreviated","dateTimeString","Date","toString","match","tz","first","timeValue","dayjs","format","getFileExtensions","files","limit","fileExtensionLimit","extensions","slice","file","originalFileName","pop","isRender","optionLabel","userText","userData","toFixed","multiSelectValues","multiSelectOptions","options","option","currentOption","recordLinkValues","recordText","formatAmount"],"mappings":"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","file":"js/chunks/108.js","sourcesContent":["module.exports = require(\"core-js/library/fn/object/values\");","<template>\r\n  <div class=\"menu-view\">\r\n    <!-- Header Section -->\r\n    <div\r\n      :class=\"[\r\n        'menu-header pl-0',\r\n      ]\"\r\n    >\r\n      <div class=\"flex\">\r\n        <h3>{{ subMenuName }}</h3>\r\n\r\n        <div class=\"menu-header-list flex items-center overflow-x-auto\">\r\n          <vs-chip\r\n            class=\"cursor-pointer mx-2 text-sm min-w-75\"\r\n            v-for=\"{ id, title, icon, isActive, name } in viewOptions\"\r\n            :key=\"id\"\r\n            :color=\"isActive ? 'primary' : ''\"\r\n            @click.native=\"changeTab(id)\"\r\n          >\r\n            <vs-icon class=\"mr-1\" size=\"18px\" :icon=\"icon\" />\r\n            {{ title }}\r\n          </vs-chip>\r\n          <label\r\n            class=\"text-sm font-semibold ml-4 cursor-pointer text-primary\"\r\n            @click.stop=\"showViewPrompt\"\r\n          >\r\n            Add\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Content -->\r\n    <div class=\"menu-view-container\" v-if=\"currentComponent\">\r\n      <component\r\n        :ref=\"currentComponent\"\r\n        :is=\"currentComponent\"\r\n        :title=\"subMenuName\"\r\n        :viewMetaData=\"viewMetaData\"\r\n        :customFields=\"customFields\"\r\n        :recordData=\"recordData\"\r\n        :fetchingData=\"fetchingData\"\r\n        @toggleDetailsView=\"toggleDetailsView\"\r\n        @updateView=\"updateView\"\r\n        @update:Details=\"updateRecord\"\r\n      />\r\n    </div>\r\n\r\n    <!-- View Prompt -->\r\n    <ViewPrompt\r\n      v-if=\"viewPromptVisible\"\r\n      @close=\"viewPromptVisible = false\"\r\n      @submit=\"addView\"\r\n    />\r\n\r\n    <!-- View/Edit Records and Fields -->\r\n    <ViewEditRecord\r\n      ref=\"viewEditRecord\"\r\n      :customFields=\"customFields\"\r\n      :fieldTypes=\"fieldTypes\"\r\n      @updateRecord=\"updateRecord\"\r\n      @submitRecord=\"submitRecord\"\r\n      @deleteRecord=\"deleteRecord\"\r\n      @addField=\"addField\"\r\n      @updateField=\"updateField\"\r\n      @updateView=\"updateView\"\r\n      @uploadFiles=\"uploadFiles\"\r\n      @deleteFile=\"deleteFile\"\r\n      @deleteField=\"deleteField\"\r\n      @searchLinkedRecords=\"searchLinkedRecords\"\r\n    />\r\n  </div>\r\n</template>\r\n<!-- eslint-disable multiline-ternary nonblock-statement-body-position implicit-arrow-linebreak -->\r\n<script>\r\n// Libraries\r\nimport { mapGetters } from \"vuex\";\r\nimport { isEmpty, isNil } from \"lodash\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// Helpers\r\nimport { menuViews, fieldTypes } from \"./helpers/helper\";\r\n\r\nimport GroupBy from \"./mixins/GroupBy\";\r\n\r\nexport default {\r\n  name: \"MenuView\",\r\n  mixins: [GroupBy],\r\n  components: {\r\n    ListView: () => import(\"./components/ListView\"),\r\n    BoardView: () => import(\"./components/BoardView\"),\r\n    GanttView: () => import(\"./components/GanttView\"),\r\n    TableView: () => import(\"./components/TableView\"),\r\n    ViewPrompt: () => import(\"./components/ViewPrompt\"),\r\n    ViewEditRecord: () => import(\"./components/ViewEditRecord\"),\r\n  },\r\n  props: {\r\n    isCollapsed: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"menuV2\", [\"getAllSubMenu\", \"getAllView\"]),\r\n    subMenuName() {\r\n      const { submenuId } = this.$route.params;\r\n      if (!submenuId) return \"\";\r\n\r\n      const submenu = this.getAllSubMenu.find(\r\n        (item) => item.id === parseInt(submenuId)\r\n      );\r\n      return submenu ? submenu.name : \"\";\r\n    },\r\n    currentComponent() {\r\n      if (this.viewOptions.length === 0) return \"\";\r\n\r\n      const { name } = this.viewOptions.find((item) => item.isActive);\r\n      if (!name) return \"\";\r\n\r\n      return this.componentList[name];\r\n    },\r\n    viewId() {\r\n      const { id } = this.viewOptions.find((item) => item.isActive);\r\n      return id;\r\n    },\r\n    viewMetaData() {\r\n      const { name } = this.viewOptions.find((item) => item.isActive);\r\n      if (!name) return {};\r\n      return {\r\n        ...this[`${name}MetaData`],\r\n        type: name,\r\n      };\r\n    },\r\n    recordLinkFields () {\r\n      return this.customFields.filter((item) => item.type === 'recordLink')\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      viewOptions: [],\r\n      componentList: {\r\n        list: \"ListView\",\r\n        board: \"BoardView\",\r\n        gantt: \"GanttView\",\r\n        table: \"TableView\",\r\n      },\r\n      viewPromptVisible: false,\r\n      fieldTypes,\r\n      listMetaData: {},\r\n      boardMetaData: {},\r\n      tableMetaData: {},\r\n      ganttMetaData: {},\r\n      customFields: [],\r\n      recordData: [],\r\n      fetchingData: true,\r\n    };\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    hideTableGanttForNow(name) {\r\n      //  if(name === \"table\" || name === \"gantt\"){\r\n      //   return false\r\n      //  }\r\n      return true;\r\n    },\r\n    getErrorMsg(error) {\r\n      return error &&\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.message\r\n        ? error.response.data.message\r\n        : \"Something went wrong\";\r\n    },\r\n    async initViews(viewID = null) {\r\n      try {\r\n        await this.$store.dispatch(\"companyUserV2/fetchAllUsers\");\r\n        if (this.getAllView.length === 0) return [];\r\n\r\n        this.viewOptions = this.getAllView.map((item) => {\r\n          const view = menuViews[item.type];\r\n          if (!view) return {};\r\n\r\n          return {\r\n            ...view,\r\n            id: item.id,\r\n            isActive: viewID ? viewID === item.id : false,\r\n          };\r\n        });\r\n\r\n        if (!viewID) {\r\n          const tableViewIndex = this.viewOptions.findIndex(\r\n            (item) => item.name === \"table\"\r\n          );\r\n\r\n          tableViewIndex !== -1\r\n            ? (this.viewOptions[tableViewIndex].isActive = true)\r\n            : (this.viewOptions[0].isActive = true);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n    redirectToErrorPage() {\r\n      this.$router.push({ name: \"page-error-404\" });\r\n    },\r\n    async fetchData(viewID = null) {\r\n      try {\r\n        const { menuId, submenuId } = this.$route.params;\r\n\r\n        if (!menuId || !submenuId) {\r\n          this.redirectToErrorPage();\r\n          return;\r\n        }\r\n\r\n        this.$vs.loading();\r\n        this.fetchingData = true;\r\n        await this.$store.dispatch(\"menuV2/fetchSubMenuList\", menuId);\r\n        await this.$store.dispatch(\"menuV2/fetchViewList\", {\r\n          id: submenuId\r\n        });\r\n        await this.initViews(viewID);\r\n        await this.fetchViewData();\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      } finally {\r\n        this.$vs.loading.close();\r\n        this.fetchingData = false;\r\n      }\r\n    },\r\n    async fetchViewData(viewId) {\r\n      try {\r\n        const {\r\n          data: {\r\n            payload: {\r\n              listMetaData,\r\n              boardMetaData,\r\n              tableMetaData,\r\n              ganttMetaData,\r\n              recordCustomFields,\r\n              recordData,\r\n            },\r\n          },\r\n        } = await this.$store.dispatch(\"menuV2/getView\", viewId || this.viewId);\r\n\r\n        this.listMetaData = listMetaData || {};\r\n        this.boardMetaData = boardMetaData || {};\r\n        this.tableMetaData = tableMetaData || {};\r\n        this.ganttMetaData = ganttMetaData || {};\r\n        this.customFields = recordCustomFields || [];\r\n        this.recordData = recordData || [];\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async init() {\r\n      try {\r\n        await this.fetchData();\r\n\r\n        this.$nextTick(() => {\r\n          this.$watch(\r\n            () => this.$route.params,\r\n            (toParams, previousParams) => {\r\n              if (toParams.submenuId !== previousParams.submenuId) {\r\n                this.resetTableViewSortSchema();\r\n                this.fetchData();\r\n              }\r\n            }\r\n          );\r\n        });\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async changeTab (id) {\r\n      try {\r\n        const { title } = this.viewOptions.find((item) => item.id === id)\r\n        if (!title) return\r\n\r\n        this.$vs.loading()\r\n\r\n        this.viewOptions.forEach((item) => {\r\n          item.isActive = item.id === id\r\n        })\r\n\r\n        this.resetTableViewSortSchema();\r\n        await this.fetchViewData()\r\n      } catch (error) {\r\n      } finally {\r\n        this.$vs.loading.close()\r\n      }\r\n    },\r\n    showViewPrompt() {\r\n      this.viewPromptVisible = true;\r\n    },\r\n    async addView({ name: type, title: name }) {\r\n      try {\r\n        this.viewPromptVisible = false;\r\n        const { submenuId } = this.$route.params;\r\n        if (!submenuId) return;\r\n\r\n        const {\r\n          data: {\r\n            payload: { id },\r\n          },\r\n        } = await this.$store.dispatch(\"menuV2/createView\", {\r\n          name,\r\n          type,\r\n          submenuId,\r\n        });\r\n\r\n        await this.fetchData(id);\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async updateRecord(record) {\r\n      try {\r\n        if (!record) return;\r\n\r\n        const { submenuId } = this.$route.params;\r\n        const payload = {\r\n          submenuId,\r\n          recordId: record.recordId,\r\n          newValues: record.values,\r\n        };\r\n\r\n        await this.$store.dispatch(\"menuV2/updateFieldValues\", payload);\r\n        this.fetchViewData();\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async submitRecord(record) {\r\n      try {\r\n        if (!record) return;\r\n\r\n        const { submenuId } = this.$route.params;\r\n        const payload = {\r\n          submenuId,\r\n          newValues: record.values,\r\n        };\r\n\r\n        await this.$store.dispatch(\"menuV2/createNewRecord\", payload);\r\n        this.fetchViewData();\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async deleteRecord(id) {\r\n      try {\r\n        if (!id) return;\r\n\r\n        const payload = {\r\n          submenuId: this.$route.params.submenuId,\r\n          recordId: id,\r\n        };\r\n\r\n        await this.$store.dispatch(\"menuV2/deleteRecord\", payload);\r\n        this.fetchViewData();\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async getCustomFields() {\r\n      try {\r\n        const { submenuId } = this.$route.params;\r\n        const {\r\n          data: {\r\n            payload: { fields },\r\n          },\r\n        } = await this.$store.dispatch(\"menuV2/fetchCustomFields\", submenuId);\r\n\r\n        this.customFields = fields || [];\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async addField(data, recordId) {\r\n      try {\r\n        if (isEmpty(data)) return;\r\n\r\n        const { submenuId } = this.$route.params;\r\n        const payload = {\r\n          submenuId,\r\n          fields: [data],\r\n        };\r\n\r\n        await this.$store.dispatch(\"menuV2/createCustomFields\", payload);\r\n        await this.getCustomFields();\r\n        await this.fetchViewData();\r\n\r\n        if (recordId) {\r\n          const {\r\n            status,\r\n            data: {\r\n              result,\r\n              payload: { recordData }\r\n            }\r\n          } = await this.fetchRecord(submenuId, recordId)\r\n\r\n          if (status === 200 && result) {\r\n            const result = this.formatData([{ ...recordData }])\r\n            const selectedRecord = result && result.length ? result[0].customFieldsData : []\r\n            this.$refs.viewEditRecord.selectedRecord = selectedRecord\r\n          }\r\n        }\r\n\r\n        if (data.type === 'recordLink') {\r\n          const record =\r\n            this.customFields[this.customFields.length - 1].type ===\r\n            'recordLink'\r\n              ? {\r\n                fieldId: this.customFields[this.customFields.length - 1].id,\r\n                submenuId: submenuId\r\n                    // Original BE API code implemented the wrong payload.\r\n                    // this.customFields[this.customFields.length - 1]\r\n                    //  .recordLinkMetaData.submenuId\r\n              }\r\n              : null\r\n          if (record) {\r\n            let recordLinkData = await this.fetchTargetRecords(\r\n              record.submenuId,\r\n              record.fieldId\r\n            )\r\n\r\n            if (!isEmpty(recordLinkData)) {\r\n              recordLinkData = this.formatTargetRecords(recordLinkData)\r\n              this.$refs.viewEditRecord.initRecordLinkFields(recordLinkData)\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async updateField(data) {\r\n      try {\r\n        if (isEmpty(data)) return;\r\n\r\n        const payload = {\r\n          id: data.id,\r\n          name: data.name,\r\n          level: data.level\r\n        };\r\n\r\n        if (data.type === 'singleSelect')\r\n          payload.singleSelectOptions = data.singleSelectOptions || []\r\n        else if (data.type === 'multiSelect')\r\n          payload.multiSelectOptions = data.multiSelectOptions || []\r\n        else if (data.type === 'formula' && data.formulaMetaData) {\r\n          payload.formulaMetaData = data.formulaMetaData\r\n        }\r\n\r\n        await this.$store.dispatch(\"menuV2/updateCustomField\", payload);\r\n        this.getCustomFields();\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async updateView(data) {\r\n      try {\r\n        if (isEmpty(data)) return;\r\n        const payload = {\r\n          ...data,\r\n          id: this.viewId,\r\n        };\r\n        await this.$store.dispatch(\"menuV2/updateView\", payload);\r\n        this.fetchViewData(this.viewId);\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: \"danger\",\r\n          title: \"Error\",\r\n          text: this.getErrorMsg(error),\r\n        });\r\n      }\r\n    },\r\n    async toggleDetailsView (recordId) {\r\n      const isValidRecordId = !isNil(recordId) && !isNaN(Number(recordId))\r\n      let payload = []\r\n      let recordLinkData = {}\r\n      const { submenuId } = this.$route.params\r\n\r\n      if (isValidRecordId) {\r\n        const {\r\n          status,\r\n          data: {\r\n            result,\r\n            payload: { recordData }\r\n          }\r\n        } = await this.fetchRecord(submenuId, recordId)\r\n\r\n        if (status === 200 && result) {\r\n          const result = this.formatData([{ ...recordData }])\r\n          payload = result && result.length ? result[0].customFieldsData : []\r\n        }\r\n      }\r\n\r\n      if (this.recordLinkFields && this.recordLinkFields.length) {\r\n        for (const record of this.recordLinkFields) {\r\n          const {\r\n            id,\r\n            // Original BE API code implemented the wrong payload.\r\n            //recordLinkMetaData: { submenuId }\r\n          } = record\r\n\r\n          recordLinkData = await this.fetchTargetRecords(submenuId, id)\r\n\r\n          if (!isEmpty(recordLinkData)) {\r\n            recordLinkData = this.formatTargetRecords(recordLinkData)\r\n            this.$refs.viewEditRecord.initRecordLinkFields(recordLinkData)\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.$refs.viewEditRecord) {\r\n        this.$refs.viewEditRecord.toggleDetailsView(payload)\r\n      }\r\n    },\r\n    getFileExtension (files) {\r\n      const fileExtension = files.map((file) => {\r\n        const extension = file.name.split('.').pop()\r\n        return { extension }\r\n      })\r\n      return fileExtension\r\n    },\r\n    async generateS3NameAndURL (files, recordId, fieldId) {\r\n      try {\r\n        if (files.length === 0) return\r\n        const allFiles = await this.getFileExtension(files)\r\n        const { submenuId } = this.$route.params\r\n        const {\r\n          data: { result, payload }\r\n        } = await this.$store.dispatch('menuV2/uploadAttachment', {\r\n          submenuId,\r\n          recordId,\r\n          fieldId,\r\n          files: allFiles\r\n        })\r\n        return result && payload ? payload : []\r\n      } catch (error) {}\r\n    },\r\n    async uploadAttachmentsToS3 (s3FileNameAndURL, files) {\r\n      // this.$vs.loading()\r\n      try {\r\n        if (s3FileNameAndURL) {\r\n          const attachments = []\r\n          for (let i = 0; i < s3FileNameAndURL.length; i++) {\r\n            const { storageFileName, url } = s3FileNameAndURL[i]\r\n            const file = files[i]\r\n            const { status } = await this.$store.dispatch('uploadFileToS3ViaPresignedUrl', {\r\n              url,\r\n              file,\r\n              extension: storageFileName.split(\".\").pop() \r\n            })\r\n            if (status === 200)\r\n              attachments.push({\r\n                storageFileName,\r\n                originalFileName: file.name\r\n              })\r\n          }\r\n          return attachments\r\n        }\r\n      } catch (error) {\r\n      } finally {\r\n        // this.$vs.loading.close()\r\n      }\r\n    },\r\n    async fetchRecord (submenuId, recordId) {\r\n      try {\r\n        const res = await this.$store.dispatch('menuV2/fetchRecord', {\r\n          submenuId: parseInt(submenuId),\r\n          recordId\r\n        })\r\n        return res\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: 'danger',\r\n          title: 'Error',\r\n          text: this.getErrorMsg(error)\r\n        })\r\n      }\r\n    },\r\n    updateSelectedRecordFileValues (recordId, fieldId, recordData) {\r\n      this.recordData = this.recordData.map((record) => {\r\n        if (record.id === recordId) {\r\n          record.customFieldsData = record.customFieldsData.map((field) => {\r\n            if (field.fieldId === fieldId) {\r\n              return {\r\n                ...field,\r\n                filesValue: recordData.customFieldsData.find(\r\n                  (f) => f.fieldId === fieldId\r\n                ).filesValue\r\n              }\r\n            }\r\n            return field\r\n          })\r\n        }\r\n        return record\r\n      })\r\n      if (this.$refs.viewEditRecord)\r\n        this.$refs.viewEditRecord.updateSelectedRecord(fieldId, recordData)\r\n    },\r\n    async uploadFiles ({ files, recordId, fieldId }) {\r\n      try {\r\n        // Process attachments\r\n        const s3FileNameAndURL = await this.generateS3NameAndURL(\r\n          files,\r\n          recordId,\r\n          fieldId\r\n        )\r\n        const attachments =\r\n          (await this.uploadAttachmentsToS3(s3FileNameAndURL, files)) || []\r\n\r\n        const filesArray = files.map((file) => {\r\n          const fileDetails = attachments.find(\r\n            (attachment) => attachment.originalFileName === file.name\r\n          )\r\n\r\n          return {\r\n            id: `temp-${uuidv4()}`,\r\n            file,\r\n            ...fileDetails\r\n          }\r\n        })\r\n\r\n        if (this.$refs.viewEditRecord) {\r\n          if (recordId)\r\n            await this.$refs.viewEditRecord.addAttachments(fieldId, filesArray)\r\n          else\r\n            await this.$refs.viewEditRecord.addNewRecordAttachments(\r\n              fieldId,\r\n              filesArray\r\n            )\r\n        }\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: 'danger',\r\n          title: 'Error',\r\n          text: this.getErrorMsg(error)\r\n        })\r\n      }\r\n    },\r\n    async deleteFile (payload) {\r\n      try {\r\n        const { submenuId } = this.$route.params\r\n        const { recordId, fieldId, files } = payload\r\n        await this.$store.dispatch('menuV2/deleteFiles', {\r\n          submenuId: parseInt(submenuId),\r\n          recordId,\r\n          fieldId,\r\n          files\r\n        })\r\n        const {\r\n          status,\r\n          data: {\r\n            result,\r\n            payload: { recordData }\r\n          }\r\n        } = await this.fetchRecord(submenuId, recordId)\r\n        if (status === 200 && result)\r\n          this.updateSelectedRecordFileValues(recordId, fieldId, recordData)\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: 'danger',\r\n          title: 'Error',\r\n          text: this.getErrorMsg(error)\r\n        })\r\n      }\r\n    },\r\n    async deleteField ({ fieldId }) {\r\n      try {\r\n        const { submenuId } = this.$route.params\r\n\r\n        await this.$store.dispatch('menuV2/deleteCustomField', {\r\n          submenuId: parseInt(submenuId),\r\n          fieldId\r\n        })\r\n        await this.fetchViewData()\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: 'danger',\r\n          title: 'Error',\r\n          text: this.getErrorMsg(error)\r\n        })\r\n      }\r\n    },\r\n\r\n    async searchLinkedRecords(searchObj){\r\n      const { submenuId } = this.$route.params;\r\n      let recordLinkData = await this.fetchTargetRecords(submenuId, searchObj.fieldId, searchObj.text)\r\n\r\n      if (!isEmpty(recordLinkData)) {\r\n        recordLinkData = this.formatTargetRecords(recordLinkData)\r\n        this.$refs.viewEditRecord.initRecordLinkFields(recordLinkData)\r\n      }\r\n    },\r\n    async fetchTargetRecords (submenuId, fieldId, searchKeyWords = null) {\r\n      try {\r\n        const {\r\n          status,\r\n          data: {\r\n            result,\r\n            payload: { recordCustomFields, recordData }\r\n          }\r\n        } = await this.$store.dispatch('menuV2/getTargetRecords', {\r\n          submenuId,\r\n          fieldId,\r\n          searchKeyWords\r\n        })\r\n\r\n        if (status === 200 && result) {\r\n          return {\r\n            fieldId,\r\n            recordCustomFields,\r\n            recordData\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: 'danger',\r\n          title: 'Error',\r\n          text: this.getErrorMsg(error)\r\n        })\r\n      }\r\n    },\r\n    formatTargetRecords (records) {\r\n      const customFields = records.recordCustomFields//.slice(0, 4)\r\n      const customFieldsData = records.recordData.map((record) => {\r\n        record.customFieldsData = record.customFieldsData.filter((field) =>\r\n          customFields.find((customField) => customField.id === field.fieldId)\r\n        )\r\n\r\n        return record\r\n      })\r\n\r\n      const fieldValueTypes = [\r\n        \"textValue\",\r\n        \"userValue\",\r\n        \"singleSelectValue\",\r\n        \"numberValue\",\r\n        \"currencyValue\",\r\n        \"multiSelectValue\"\r\n      ]\r\n      const formattedRecords = customFieldsData.map((record) => {\r\n        const data = record.customFieldsData.map((field) => {\r\n          const customField = customFields.find(\r\n            (customField) => customField.id === field.fieldId &&\r\n              fieldValueTypes.some((type) => field[type])\r\n          )\r\n\r\n          if (customField) {\r\n            let fieldValue = ''\r\n            let fieldColor = ''\r\n\r\n            if (field.textValue) fieldValue = field.textValue\r\n            if (field.userValue)\r\n              fieldValue = field.userValue\r\n                .map((user) => this.allUsersMap[user.userId].fullName)\r\n                .join(', ')\r\n            if (field.singleSelectValue) {\r\n              fieldValue = customField.singleSelectOptions.find(\r\n                (option) => option.optionId === field.singleSelectValue\r\n              ).optionName\r\n\r\n              fieldColor = customField.singleSelectOptions.find(\r\n                (option) => option.optionId === field.singleSelectValue\r\n              ).color\r\n            }\r\n            if (field.dateValue)\r\n              fieldValue = this.convertToLocalDateTime(\r\n                field.dateValue.utcDateOnly,\r\n                field.dateValue.utcTimeOnly\r\n              )\r\n            if (field.dateNoTzValue)\r\n              fieldValue = `${field.dateNoTzValue.localDateOnly || ''} ${\r\n                field.dateNoTzValue.localTimeOnly || ''\r\n              }`\r\n            if (field.hasOwnProperty('numberValue')) fieldValue = field.numberValue\r\n            if (field.currencyValue)\r\n              fieldValue = field.currencyValue\r\n                ? `$${parseFloat(field.currencyValue).toFixed(2)}`\r\n                : ''\r\n            if (field.multiSelectValue) {\r\n              fieldValue = customField.multiSelectOptions\r\n                .filter((option) =>\r\n                  field.multiSelectValue.includes(option.optionId)\r\n                )\r\n                .map((option) => option.optionName)\r\n                .join(', ')\r\n            }\r\n\r\n            const values = {\r\n              name: customField.name,\r\n              value: fieldValue,\r\n              color: fieldColor,\r\n              type: customField.type\r\n            }\r\n\r\n            return values\r\n          }\r\n        }).filter((field) => field)\r\n        return {\r\n          recordId: record.id,\r\n          data\r\n        }\r\n      })\r\n      return { [records.fieldId]: formattedRecords }\r\n    },\r\n    resetTableViewSortSchema() {\r\n      if (this.$refs['TableView']) {\r\n        this.$refs['TableView'].handleSortSchema([]);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.menu-header {\r\n  width: 100%;\r\n  height: 60px;\r\n  padding: 1.2rem;\r\n  background: rgb(255, 255, 255);\r\n  position: fixed;\r\n  transition: all 0.4s ease;\r\n  top: 0;\r\n  border-bottom: 1px solid #0002;\r\n  z-index: 5;\r\n  /* box-shadow: 0 4px 20px 0 rgb(0 0 0 / 5%); */\r\n  .menu-header-list {\r\n    &::-webkit-scrollbar-thumb:horizontal {\r\n      /*The style of the horizontal scrollbar*/\r\n      width: 4px;\r\n      background-color: #cccccc;\r\n      -webkit-border-radius: 6px;\r\n    }\r\n    &::-webkit-scrollbar-track-piece {\r\n      background-color: #fff; /*The background color of the scrollbar*/\r\n      -webkit-border-radius: 0; /*Fillet width of the scrollbar*/\r\n    }\r\n    &::-webkit-scrollbar {\r\n      width: 10px; /*the width of the scrollbar*/\r\n      height: 8px; /*the height of the scroll bar*/\r\n    }\r\n    &::-webkit-scrollbar-thumb:vertical {\r\n      /*The style of the vertical scrollbar*/\r\n      height: 50px;\r\n      background-color: #999;\r\n      -webkit-border-radius: 4px;\r\n      outline: 2px solid #fff;\r\n      outline-offset: -2px;\r\n      border: 2px solid #fff;\r\n    }\r\n    &::-webkit-scrollbar-thumb:hover {\r\n      /*The hover style of the scroll bar*/\r\n      height: 50px;\r\n      background-color: #9f9f9f;\r\n      -webkit-border-radius: 4px;\r\n    }\r\n  }\r\n}\r\n\r\n// Utility Classes\r\n.min-w-75 {\r\n  min-width: 75px;\r\n}\r\n\r\n.menu-view-container {\r\n  margin-top: 56px;\r\n}\r\n</style>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    { staticClass: \"menu-view\" },\n    [\n      _c(\"div\", { class: [\"menu-header pl-0\"] }, [\n        _c(\"div\", { staticClass: \"flex\" }, [\n          _c(\"h3\", [_vm._v(_vm._s(_vm.subMenuName))]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"menu-header-list flex items-center overflow-x-auto\",\n            },\n            [\n              _vm._l(\n                _vm.viewOptions,\n                function ({ id, title, icon, isActive, name }) {\n                  return _c(\n                    \"vs-chip\",\n                    {\n                      key: id,\n                      staticClass: \"cursor-pointer mx-2 text-sm min-w-75\",\n                      attrs: { color: isActive ? \"primary\" : \"\" },\n                      nativeOn: {\n                        click: function ($event) {\n                          return _vm.changeTab(id)\n                        },\n                      },\n                    },\n                    [\n                      _c(\"vs-icon\", {\n                        staticClass: \"mr-1\",\n                        attrs: { size: \"18px\", icon: icon },\n                      }),\n                      _vm._v(\"\\n          \" + _vm._s(title) + \"\\n        \"),\n                    ],\n                    1\n                  )\n                }\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"label\",\n                {\n                  staticClass:\n                    \"text-sm font-semibold ml-4 cursor-pointer text-primary\",\n                  on: {\n                    click: function ($event) {\n                      $event.stopPropagation()\n                      return _vm.showViewPrompt.apply(null, arguments)\n                    },\n                  },\n                },\n                [_vm._v(\"\\n          Add\\n        \")]\n              ),\n            ],\n            2\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _vm.currentComponent\n        ? _c(\n            \"div\",\n            { staticClass: \"menu-view-container\" },\n            [\n              _c(_vm.currentComponent, {\n                ref: _vm.currentComponent,\n                tag: \"component\",\n                attrs: {\n                  title: _vm.subMenuName,\n                  viewMetaData: _vm.viewMetaData,\n                  customFields: _vm.customFields,\n                  recordData: _vm.recordData,\n                  fetchingData: _vm.fetchingData,\n                },\n                on: {\n                  toggleDetailsView: _vm.toggleDetailsView,\n                  updateView: _vm.updateView,\n                  \"update:Details\": _vm.updateRecord,\n                },\n              }),\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.viewPromptVisible\n        ? _c(\"ViewPrompt\", {\n            on: {\n              close: function ($event) {\n                _vm.viewPromptVisible = false\n              },\n              submit: _vm.addView,\n            },\n          })\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"ViewEditRecord\", {\n        ref: \"viewEditRecord\",\n        attrs: { customFields: _vm.customFields, fieldTypes: _vm.fieldTypes },\n        on: {\n          updateRecord: _vm.updateRecord,\n          submitRecord: _vm.submitRecord,\n          deleteRecord: _vm.deleteRecord,\n          addField: _vm.addField,\n          updateField: _vm.updateField,\n          updateView: _vm.updateView,\n          uploadFiles: _vm.uploadFiles,\n          deleteFile: _vm.deleteFile,\n          deleteField: _vm.deleteField,\n          searchLinkedRecords: _vm.searchLinkedRecords,\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".menu-header[data-v-a77c1a62] {\\n  width: 100%;\\n  height: 60px;\\n  position: fixed;\\n  transition: all 0.4s ease;\\n  top: 0;\\n  z-index: 5;\\n  /* box-shadow: 0 4px 20px 0 rgb(0 0 0 / 5%); */\\n}[dir] .menu-header[data-v-a77c1a62] {\\n  padding: 1.2rem;\\n  background: rgb(255, 255, 255);\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1333333333);\\n}\\n.menu-header .menu-header-list[data-v-a77c1a62]::-webkit-scrollbar-thumb:horizontal {\\n  /*The style of the horizontal scrollbar*/\\n  width: 4px;\\n  -webkit-border-radius: 6px;\\n}\\n[dir] .menu-header .menu-header-list[data-v-a77c1a62]::-webkit-scrollbar-thumb:horizontal {\\n  background-color: #cccccc;\\n}\\n.menu-header .menu-header-list[data-v-a77c1a62]::-webkit-scrollbar-track-piece { /*The background color of the scrollbar*/\\n  -webkit-border-radius: 0; /*Fillet width of the scrollbar*/\\n}\\n[dir] .menu-header .menu-header-list[data-v-a77c1a62]::-webkit-scrollbar-track-piece {\\n  background-color: #fff;\\n}\\n.menu-header .menu-header-list[data-v-a77c1a62]::-webkit-scrollbar {\\n  width: 10px; /*the width of the scrollbar*/\\n  height: 8px; /*the height of the scroll bar*/\\n}\\n.menu-header .menu-header-list[data-v-a77c1a62]::-webkit-scrollbar-thumb:vertical {\\n  /*The style of the vertical scrollbar*/\\n  height: 50px;\\n  -webkit-border-radius: 4px;\\n  outline: 2px solid #fff;\\n  outline-offset: -2px;\\n}\\n[dir] .menu-header .menu-header-list[data-v-a77c1a62]::-webkit-scrollbar-thumb:vertical {\\n  background-color: #999;\\n  border: 2px solid #fff;\\n}\\n.menu-header .menu-header-list[data-v-a77c1a62]::-webkit-scrollbar-thumb:hover {\\n  /*The hover style of the scroll bar*/\\n  height: 50px;\\n  -webkit-border-radius: 4px;\\n}\\n[dir] .menu-header .menu-header-list[data-v-a77c1a62]::-webkit-scrollbar-thumb:hover {\\n  background-color: #9f9f9f;\\n}\\n.min-w-75[data-v-a77c1a62] {\\n  min-width: 75px;\\n}\\n[dir] .menu-view-container[data-v-a77c1a62] {\\n  margin-top: 56px;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--8-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuView.vue?vue&type=style&index=0&id=a77c1a62&lang=scss&scoped=true&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--8-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuView.vue?vue&type=style&index=0&id=a77c1a62&lang=scss&scoped=true&\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--8-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuView.vue?vue&type=style&index=0&id=a77c1a62&lang=scss&scoped=true&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import { render, staticRenderFns } from \"./MenuView.vue?vue&type=template&id=a77c1a62&scoped=true&\"\nimport script from \"./MenuView.vue?vue&type=script&lang=js&\"\nexport * from \"./MenuView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MenuView.vue?vue&type=style&index=0&id=a77c1a62&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a77c1a62\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"D:\\\\laragon\\\\www\\\\ezpapel\\\\panel\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('a77c1a62')) {\n      api.createRecord('a77c1a62', component.options)\n    } else {\n      api.reload('a77c1a62', component.options)\n    }\n    module.hot.accept(\"./MenuView.vue?vue&type=template&id=a77c1a62&scoped=true&\", function () {\n      api.rerender('a77c1a62', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/views/pages/menu/MenuView.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuView.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/style-loader/index.js!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--8-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuView.vue?vue&type=style&index=0&id=a77c1a62&lang=scss&scoped=true&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenuView.vue?vue&type=template&id=a77c1a62&scoped=true&\"","export const menuViews = {\r\n  list: {\r\n    id: 1,\r\n    title: 'List',\r\n    name: 'list',\r\n    icon: 'format_list_bulleted',\r\n    isActive: false\r\n  },\r\n  board: {\r\n    id: 2,\r\n    title: 'Board',\r\n    name: 'board',\r\n    icon: 'dashboard',\r\n    isActive: false\r\n  },\r\n  gantt: {\r\n    id: 3,\r\n    title: 'Gantt',\r\n    name: 'gantt',\r\n    icon: 'assessment',\r\n    isActive: false\r\n  },\r\n  table: {\r\n    id: 4,\r\n    title: 'Table',\r\n    name: 'table',\r\n    icon: 'view_stream',\r\n    isActive: false\r\n  }\r\n}\r\n\r\nexport const fieldTypes = [\r\n  {\r\n    id: 1,\r\n    label: 'Text',\r\n    value: 'text',\r\n    icon: 'title'\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'User',\r\n    value: 'user',\r\n    icon: 'person'\r\n  },\r\n  {\r\n    id: 3,\r\n    label: 'Single Select',\r\n    value: 'singleSelect',\r\n    icon: 'done'\r\n  },\r\n  {\r\n    id: 4,\r\n    label: 'Date',\r\n    value: 'date',\r\n    icon: 'date_range'\r\n  },\r\n  {\r\n    id: 5,\r\n    label: 'Date Without Timezone',\r\n    value: 'dateNoTz',\r\n    icon: 'calendar_today'\r\n  },\r\n  {\r\n    id: 6,\r\n    label: 'Files',\r\n    value: 'files',\r\n    icon: 'attach_file'\r\n  },\r\n  {\r\n    id: 7,\r\n    label: 'Number',\r\n    value: 'number',\r\n    icon: 'looks_one'\r\n  },\r\n  {\r\n    id: 8,\r\n    label: 'Currency',\r\n    value: 'currency',\r\n    icon: 'attach_money'\r\n  },\r\n  {\r\n    id: 9,\r\n    label: 'Multi Select',\r\n    value: 'multiSelect',\r\n    icon: 'done_all'\r\n  },\r\n  {\r\n    id: 10,\r\n    label: 'Link to record',\r\n    value: 'recordLink',\r\n    icon: 'link'\r\n  },\r\n  {\r\n    id: 11,\r\n    label: 'Rollup',\r\n    value: 'rollup',\r\n    icon: 'track_changes'\r\n  },\r\n  {\r\n    id: 12,\r\n    label: 'Formula',\r\n    value: 'formula',\r\n    icon: 'functions'\r\n  }\r\n]","/* eslint-disable multiline-ternary */\r\nimport { mapGetters } from \"vuex\";\r\nimport dayjs from 'dayjs'\r\nimport { formatAmount } from \"@/helpers/helper\";\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapGetters(\"companyUserV2\", [\"getAllUsersList\"]),\r\n    allUsersMap() {\r\n      return this.getAllUsersList.reduce((acc, item) => {\r\n        acc[item.id] = item;\r\n        return acc;\r\n      }, {});\r\n    },\r\n    customFieldsToRender() {\r\n      const customFieldsMap = this.customFields.reduce((acc, item) => {\r\n        acc[item.id] = item;\r\n        return acc;\r\n      }, {});\r\n      const { columns } = (this.viewMetaData || {}).show || {};\r\n      if (columns && columns.length > 0) {\r\n        const columnsToRender = columns\r\n          .map((item) => ({\r\n            ...customFieldsMap[item.customFieldId],\r\n            ...item,\r\n          }))\r\n          .sort((a, b) => a.order - b.order);\r\n        return columnsToRender;\r\n      }\r\n      return [];\r\n    },\r\n    customFieldsToRenderMap() {\r\n      return this.customFieldsToRender.reduce((acc, item) => {\r\n        acc[item.id] = item;\r\n        return acc;\r\n      }, {});\r\n    },\r\n    idOfFieldsToRender() {\r\n      return this.customFieldsToRender.map((x) => x.id);\r\n    },\r\n    formattedRecordData() {\r\n      const res = this.formatData(this.recordData);\r\n      return res || [];\r\n    },\r\n    sortData() {\r\n      return (records) => {\r\n        if (\r\n          records &&\r\n          this.tableSortSchema &&\r\n          this.tableSortSchema.length > 0\r\n        ) {\r\n          records = [...records].sort((a, b) => {\r\n            const { field, sortOrder } = this.tableSortSchema[0];\r\n            const fieldA = a.customFieldsData.find((f) => f.fieldId === field);\r\n            const fieldB = b.customFieldsData.find((f) => f.fieldId === field);\r\n            const { type } = this.customFields.find((f) => f.id === field);\r\n\r\n            if (type === 'text') {\r\n              if (sortOrder === 'a') {\r\n                return (fieldA.textValue || '').localeCompare(\r\n                  fieldB.textValue || ''\r\n                ); // fieldA.textValue > fieldB.textValue ? 1 : -1;\r\n              } else if (sortOrder === 'd') {\r\n                return (fieldB.textValue || '').localeCompare(\r\n                  fieldA.textValue || ''\r\n                ); // fieldA.textValue > fieldB.textValue ? -1 : 1;\r\n              }\r\n            } else if (type === 'number') {\r\n              const aField = parseFloat(fieldA.numberValue) || 0;\r\n              const bField = parseFloat(fieldB.numberValue) || 0;\r\n\r\n              if (sortOrder === 'a') {\r\n                return aField > bField ? 1 : -1;\r\n              } else if (sortOrder === 'd') {\r\n                return aField > bField ? -1 : 1;\r\n              }\r\n            } else if (type === 'currency') {\r\n              const aField = parseFloat(fieldA.currencyValue) || 0;\r\n              const bField = parseFloat(fieldB.currencyValue) || 0;\r\n\r\n              if (sortOrder === 'a') {\r\n                return aField > bField ? 1 : -1;\r\n              } else if (sortOrder === 'd') {\r\n                return aField > bField ? -1 : 1;\r\n              }\r\n            }\r\n          });\r\n\r\n          return records;\r\n        }\r\n\r\n        return records;\r\n      };\r\n    },\r\n    viewData() {\r\n      const { id: groupById } = this.selectedGroupBy || {};\r\n      if (groupById) {\r\n        const groupBy = this.customFields.find((f) => f.id === groupById);\r\n        if (groupBy) {\r\n          let temp = {};\r\n          if (groupBy.type === \"singleSelect\") {\r\n            temp = this.singleSelectTypeSortedData(\r\n              groupBy,\r\n              this.formattedRecordData\r\n            );\r\n          } else if (groupBy.type === \"text\") {\r\n            temp = this.textTypeSortedData(groupBy, this.formattedRecordData);\r\n          } else if (groupBy.type === \"user\") {\r\n            temp = this.userTypeSortedData(\r\n              groupBy,\r\n              this.formattedRecordData,\r\n              this.getAllUsersList\r\n            );\r\n          } else if (groupBy.type === \"date\") {\r\n            temp = this.dateTypeSortedData(groupBy, this.formattedRecordData);\r\n          } else if (groupBy.type === \"number\") {\r\n            temp = this.numberTypeSortedData(groupBy, this.formattedRecordData);\r\n          } else if (groupBy.type === 'currency') {\r\n            temp = this.currencyTypeSortedData(\r\n              groupBy,\r\n              this.formattedRecordData\r\n            )\r\n          } else if (groupBy.type === 'dateNoTz') {\r\n            temp = this.dateNoTzTypeSortedData(\r\n              groupBy,\r\n              this.formattedRecordData\r\n            )\r\n          } else if (groupBy.type === 'multiSelect') {\r\n            temp = this.multiSelectTypeSortedData(\r\n              groupBy,\r\n              this.formattedRecordData\r\n            )\r\n          } else if (groupBy.type === 'recordLink') {\r\n            temp = this.recordLinkTypeSortedData(\r\n              groupBy,\r\n              this.formattedRecordData\r\n            )\r\n          }\r\n\r\n          if (this.tableSortSchema && this.tableSortSchema.length > 0) {\r\n            const { field } = this.tableSortSchema[0];\r\n            const selectedField = this.customFields.find((f) => f.id === field);\r\n\r\n            if (\r\n              selectedField &&\r\n              selectedField.id === groupBy.id &&\r\n              selectedField.type === groupBy.type\r\n            ) {\r\n              const { sortOrder } = this.tableSortSchema[0];\r\n              const sortedKeys = Object.keys(temp).sort((a, b) => {\r\n                if (a === 'No ' + groupBy.name) return 1;\r\n                if (b === 'No ' + groupBy.name) return -1;\r\n\r\n                if (groupBy.type === 'text') {\r\n                  if (sortOrder === 'a') {\r\n                    return a.localeCompare(b);\r\n                  } else if (sortOrder === 'd') {\r\n                    return b.localeCompare(a);\r\n                  }\r\n                } else if (groupBy.type === 'number') {\r\n                  const aField = parseFloat(a);\r\n                  const bField = parseFloat(b);\r\n\r\n                  if (sortOrder === 'a') {\r\n                    return aField > bField ? 1 : -1;\r\n                  } else if (sortOrder === 'd') {\r\n                    return aField > bField ? -1 : 1;\r\n                  }\r\n                } else if (groupBy.type === 'currency') {\r\n                  const aField = parseFloat(a);\r\n                  const bField = parseFloat(b);\r\n\r\n                  if (sortOrder === 'a') {\r\n                    return aField > bField ? 1 : -1;\r\n                  } else if (sortOrder === 'd') {\r\n                    return aField > bField ? -1 : 1;\r\n                  }\r\n                }\r\n              });\r\n              const sortedObj = {};\r\n              sortedKeys.forEach((key) => {\r\n                // Assign decimal values to the key if it is a number without decimal to maintain the order\r\n                if (\r\n                  !isNaN(key) &&\r\n                  !isNaN(parseFloat(key)) &&\r\n                  !key.includes('.')\r\n                ) {\r\n                  sortedObj[key + '.00'] = temp[key];\r\n                } else {\r\n                  sortedObj[key] = temp[key];\r\n                }\r\n              });\r\n              temp = sortedObj;\r\n            }\r\n\r\n            temp = Object.values(temp).map((item) => {\r\n              return {\r\n                ...item,\r\n                records: this.sortData(item.records),\r\n              };\r\n            });\r\n          }\r\n\r\n          return temp;\r\n        }\r\n      }\r\n      return [\r\n        {\r\n          id: \"none\",\r\n          label: this.title,\r\n          records: this.sortData(this.formattedRecordData),\r\n        },\r\n      ];\r\n    },\r\n    groupByOptions() {\r\n      const { type } = this.viewMetaData || {};\r\n      // const res = [...(this.customFields || [])];\r\n      const res = (this.customFields || []).map((item) => {\r\n        return {\r\n          ...item,\r\n          isDisabled: item.type === \"files\",\r\n        }\r\n      });\r\n\r\n      if (type === \"board\") {\r\n        return res;\r\n      } else if (type === \"gantt\") {\r\n        return res.filter((f) => f.type === \"date\");\r\n      }\r\n      res.unshift({\r\n        id: 0,\r\n        name: \"None\",\r\n        type: \"null\",\r\n        isDisabled: false\r\n      });\r\n      return res;\r\n    },\r\n    // Expects the corresponding view page to have a prop called viewMetaData, which has the metaData for that view only\r\n    selectedGroupBy() {\r\n      const { type } = this.viewMetaData || {};\r\n      const { customFieldId: groupById } =\r\n        ((this.viewMetaData || {}).groupBy || {}).firstLevel || {};\r\n      const selectedGrouping = this.groupByOptions.find(\r\n        (f) => f.id === groupById\r\n      );\r\n      const singleSelect = this.groupByOptions.find(\r\n        (f) => f.type === \"singleSelect\"\r\n      );\r\n      if (type === \"board\") {\r\n        return selectedGrouping || singleSelect || this.groupByOptions[0] || {};\r\n      } else if (type === \"gantt\") {\r\n        // Gantt View doesn't need grouping\r\n        return {\r\n          id: 0,\r\n          name: \"None\",\r\n          type: \"null\",\r\n        };\r\n      }\r\n      return selectedGrouping || this.groupByOptions[0] || {};\r\n    },\r\n  },\r\n  methods: {\r\n    textTypeSortedData(groupBy, recordData) {\r\n      const { id: groupById } = groupBy;\r\n      if (!groupById || !recordData.length) return {};\r\n      let temp = {};\r\n      const groupByValues = [\r\n        ...new Set(\r\n          recordData.map((item) => {\r\n            const field = (item.customFieldsData || []).find(\r\n              (f) => f.fieldId === groupById\r\n            );\r\n            if (field.textValue) {\r\n              return field.textValue;\r\n            }\r\n            return;\r\n          })\r\n        ),\r\n      ].filter(Boolean);\r\n      groupByValues.forEach((label) => {\r\n        temp[label] = {\r\n          label,\r\n          records: this.formattedRecordData.filter((record) => {\r\n            const field = record.customFieldsData.find(\r\n              (f) => f.fieldId === groupBy.id\r\n            );\r\n            if (field && field.textValue === label) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }),\r\n        };\r\n      });\r\n      const noDatLabel = `No ${groupBy.name || \"\"}`;\r\n      temp[noDatLabel] = {\r\n        id: 0,\r\n        label: noDatLabel,\r\n        records: this.formattedRecordData.filter((record) => {\r\n          const field = record.customFieldsData.find(\r\n            (f) => f.fieldId === groupBy.id\r\n          );\r\n          if (!field) {\r\n            return true;\r\n          }\r\n          if (field && !groupByValues.includes(field.textValue)) {\r\n            return true;\r\n          }\r\n        }),\r\n      };\r\n      return temp;\r\n    },\r\n    userTypeSortedData(groupBy, recordData, usersList) {\r\n      const { id: groupById } = groupBy;\r\n      if (!groupById || !recordData.length) return {};\r\n      let temp = {};\r\n      const groupByValues = [\r\n        ...new Set(\r\n          recordData.map((item) => {\r\n            const field = (item.customFieldsData || []).find(\r\n              (f) => f.fieldId === groupById\r\n            );\r\n            if ((field.userValue || []).length > 0) {\r\n              return field.userValue.map((x) => x.userId).join(\",\");\r\n            }\r\n            return;\r\n          })\r\n        ),\r\n      ].filter(Boolean);\r\n      const userNameMap = (usersList || []).reduce((acc, item) => {\r\n        acc[item.id] = item.fullName;\r\n        return acc;\r\n      }, {});\r\n      const assigneeNameMap = groupByValues.reduce((acc, item) => {\r\n        acc[item] = item\r\n          .split(\",\")\r\n          .map((x) => userNameMap[x])\r\n          .join(\", \");\r\n        return acc;\r\n      }, {});\r\n      groupByValues.forEach((label) => {\r\n        temp[label] = {\r\n          label: assigneeNameMap[label],\r\n          records: this.formattedRecordData.filter((record) => {\r\n            const field = record.customFieldsData.find(\r\n              (f) => f.fieldId === groupBy.id\r\n            );\r\n            const userMap = ((field || {}).userValue || [])\r\n              .map((x) => x.userId)\r\n              .join(\",\");\r\n            if (userMap === label) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }),\r\n        };\r\n      });\r\n      const noDatLabel = `No ${groupBy.name || \"\"}`;\r\n      temp[noDatLabel] = {\r\n        id: 0,\r\n        label: noDatLabel,\r\n        records: this.formattedRecordData.filter((record) => {\r\n          const field = record.customFieldsData.find(\r\n            (f) => f.fieldId === groupBy.id\r\n          );\r\n          if (!field) {\r\n            return true;\r\n          }\r\n          const userMap = ((field || {}).userValue || [])\r\n            .map((x) => x.userId)\r\n            .join(\",\");\r\n          if (!userMap || !groupByValues.includes(userMap)) {\r\n            return true;\r\n          }\r\n        }),\r\n      };\r\n      return temp;\r\n    },\r\n    dateTypeSortedData(groupBy, recordData) {\r\n      const { id: groupById } = groupBy;\r\n      if (!groupById || !recordData.length) return {};\r\n      let temp = {};\r\n      const groupByValues = [\r\n        ...new Set(\r\n          recordData.map((item) => {\r\n            const field = (item.customFieldsData || []).find(\r\n              (f) => f.fieldId === groupById\r\n            );\r\n            if (field.dateValue) {\r\n              const { utcDateOnly, utcTimeOnly } = field.dateValue;\r\n              return this.convertToLocalDateTime(utcDateOnly, utcTimeOnly);\r\n            }\r\n            return;\r\n          })\r\n        ),\r\n      ].filter(Boolean);\r\n      groupByValues.forEach((label) => {\r\n        temp[label] = {\r\n          label,\r\n          records: this.formattedRecordData.filter((record) => {\r\n            const field = record.customFieldsData.find(\r\n              (f) => f.fieldId === groupBy.id\r\n            );\r\n            let compareString = \"\";\r\n            if ((field || {}).dateValue) {\r\n              const { utcDateOnly, utcTimeOnly } = field.dateValue;\r\n              compareString = this.convertToLocalDateTime(\r\n                utcDateOnly,\r\n                utcTimeOnly\r\n              );\r\n            }\r\n            if (compareString === label) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }),\r\n        };\r\n      });\r\n      const noDatLabel = `No ${groupBy.name || \"\"}`;\r\n      temp[noDatLabel] = {\r\n        id: 0,\r\n        label: noDatLabel,\r\n        records: this.formattedRecordData.filter((record) => {\r\n          const field = record.customFieldsData.find(\r\n            (f) => f.fieldId === groupBy.id\r\n          );\r\n          if (!field) {\r\n            return true;\r\n          }\r\n          let compareString = \"\";\r\n          if ((field || {}).dateValue) {\r\n            const { utcDateOnly, utcTimeOnly } = field.dateValue;\r\n            compareString = this.convertToLocalDateTime(\r\n              utcDateOnly,\r\n              utcTimeOnly\r\n            );\r\n          }\r\n          if (!groupByValues.includes(compareString)) {\r\n            return true;\r\n          }\r\n        }),\r\n      };\r\n      return temp;\r\n    },\r\n    dateNoTzTypeSortedData(groupBy, recordData) {\r\n      const { id: groupById } = groupBy;\r\n      if (!groupById || !recordData.length) return {};\r\n      let temp = {};\r\n      const groupByValues = [\r\n        ...new Set(\r\n          recordData.map((item) => {\r\n            const field = (item.customFieldsData || []).find(\r\n              (f) => f.fieldId === groupById\r\n            );\r\n            if (field.dateNoTzValue) {\r\n              const { localDateOnly, localTimeOnly } = field.dateNoTzValue;\r\n              return localDateOnly && localTimeOnly\r\n                ? `${localDateOnly} ${localTimeOnly}`\r\n                : localDateOnly || \"\";\r\n            }\r\n            return;\r\n          })\r\n        ),\r\n      ].filter(Boolean);\r\n      groupByValues.forEach((label) => {\r\n        temp[label] = {\r\n          label,\r\n          records: this.formattedRecordData.filter((record) => {\r\n            const field = record.customFieldsData.find(\r\n              (f) => f.fieldId === groupBy.id\r\n            );\r\n            let compareString = \"\";\r\n            if ((field || {}).dateNoTzValue) {\r\n              const { localDateOnly, localTimeOnly } = field.dateNoTzValue;\r\n              compareString =\r\n                localDateOnly && localTimeOnly\r\n                  ? `${localDateOnly} ${localTimeOnly}`\r\n                  : localDateOnly || \"\";\r\n            }\r\n            if (compareString === label) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }),\r\n        };\r\n      });\r\n      const noDatLabel = `No ${groupBy.name || \"\"}`;\r\n      temp[noDatLabel] = {\r\n        id: 0,\r\n        label: noDatLabel,\r\n        records: this.formattedRecordData.filter((record) => {\r\n          const field = record.customFieldsData.find(\r\n            (f) => f.fieldId === groupBy.id\r\n          );\r\n          if (!field) {\r\n            return true;\r\n          }\r\n          let compareString = \"\";\r\n          if ((field || {}).dateNoTzValue) {\r\n            const { localDateOnly, localTimeOnly } = field.dateNoTzValue;\r\n            compareString =\r\n              localDateOnly && localTimeOnly\r\n                ? `${localDateOnly} ${localTimeOnly}`\r\n                : localDateOnly || \"\";\r\n          }\r\n          if (!groupByValues.includes(compareString)) {\r\n            return true;\r\n          }\r\n        }),\r\n      };\r\n      return temp;\r\n    },\r\n    singleSelectTypeSortedData(groupBy, recordData) {\r\n      const { id: groupById } = groupBy;\r\n      if (!groupById || !recordData.length) return {};\r\n      let temp = [];\r\n      temp = groupBy.singleSelectOptions.map((item) => {\r\n        return {\r\n          id: item.optionId,\r\n          label: item.optionName,\r\n          records: this.formattedRecordData.filter((record) => {\r\n            const field = record.customFieldsData.find(\r\n              (f) => f.fieldId === groupBy.id\r\n            );\r\n            if (field && field.singleSelectValue === item.optionId) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }),\r\n        };\r\n      });\r\n      temp.push({\r\n        id: 0,\r\n        label: \"No \" + (groupBy.name || \"\"),\r\n        records: recordData.filter((record) => {\r\n          const field = record.customFieldsData.find(\r\n            (f) => f.fieldId === groupById\r\n          );\r\n          if (!field) {\r\n            return true;\r\n          }\r\n          if (field && !field.singleSelectValue) {\r\n            return true;\r\n          }\r\n        }),\r\n      });\r\n      return temp;\r\n    },\r\n    timeZoneAbbreviated (dateTimeString) {\r\n      // Reference: https://stackoverflow.com/a/63282162\r\n      const { 1: tz } = new Date(dateTimeString).toString().match(/\\((.+)\\)/)\r\n\r\n      if (tz.includes(' ')) {\r\n        return tz\r\n          .split(' ')\r\n          .map(([first]) => first)\r\n          .join('')\r\n      } else {\r\n        return tz\r\n      }\r\n    },\r\n    convertToLocalDateTime (dateValue, timeValue) {\r\n      if (dateValue && timeValue) {\r\n        return `${dayjs(new Date(`${dateValue}T${timeValue}:00.000Z`)).format(\r\n          'YYYY-MM-DD'\r\n        )} ${dayjs(new Date(`${dateValue}T${timeValue}:00.000Z`)).format(\r\n          'HH:mm'\r\n        )} ${this.timeZoneAbbreviated(`${dateValue}T${timeValue}:00.000Z`)}`\r\n      } else return dateValue || ''\r\n    },\r\n    getFileExtensions (files) {\r\n      const limit = this.fileExtensionLimit || 3\r\n      const extensions = files.slice(0, limit).map((file) => {\r\n        const res = file.originalFileName.split('.').pop()\r\n        return res\r\n      })\r\n      if (files.length > limit) extensions.push(`+${files.length - limit} more`)\r\n      return extensions\r\n    },\r\n    formatData (record) {\r\n      const res = record.map((item) => {\r\n        if (item.customFieldsData.length > 0) {\r\n          const customFieldsData = item.customFieldsData.map((field) => {\r\n            const isRender = this.idOfFieldsToRender.length\r\n              ? this.idOfFieldsToRender.includes(field.fieldId)\r\n              : true;\r\n            const order =\r\n              (this.customFieldsToRenderMap[field.fieldId] || {}).order || null;\r\n            if (field.singleSelectValue) {\r\n              const [singleSelectOptions] = this.customFields\r\n                .map((f) => {\r\n                  if (f.type === \"singleSelect\" && f.id === field.fieldId) {\r\n                    return f.singleSelectOptions;\r\n                  }\r\n                })\r\n                .filter(Boolean);\r\n              const optionLabel = singleSelectOptions.find(\r\n                (item) => item.optionId === field.singleSelectValue\r\n              );\r\n              return {\r\n                ...field,\r\n                singleSelectValue: optionLabel ? field.singleSelectValue : null,\r\n                id: item.id,\r\n                fieldId: field.fieldId,\r\n                textValue: (optionLabel || {}).optionName || \"\",\r\n                isRender,\r\n                order,\r\n                color: (optionLabel || {}).color || \"\",\r\n              };\r\n            }\r\n            if (field.userValue) {\r\n              const userNameMap = field.userValue.reduce((acc, item) => {\r\n                acc[item.userId] =\r\n                  (this.allUsersMap[item.userId] || {}).fullName || \"\";\r\n                return acc;\r\n              }, {});\r\n              const userText = Object.values(userNameMap).join(\", \");\r\n              return {\r\n                ...field,\r\n                id: item.id,\r\n                fieldId: field.fieldId,\r\n                textValue: userText,\r\n                isRender,\r\n                order,\r\n                userData:\r\n                  Object.values(userNameMap).map((fullName) => {\r\n                    let tag = (fullName || \"\")\r\n                      .split(\" \")\r\n                      .map((item) => item[0])\r\n                      .join(\"\");\r\n                    return {\r\n                      fullName,\r\n                      tag,\r\n                    };\r\n                  }) || [],\r\n              };\r\n            }\r\n            if (field.dateValue) {\r\n              return {\r\n                ...field,\r\n                id: item.id,\r\n                fieldId: field.fieldId,\r\n                textValue: this.convertToLocalDateTime(\r\n                  field.dateValue.utcDateOnly,\r\n                  field.dateValue.utcTimeOnly\r\n                ),\r\n                isRender,\r\n                order,\r\n              };\r\n            }\r\n            if (field.dateNoTzValue) {\r\n              return {\r\n                ...field,\r\n                id: item.id,\r\n                fieldId: field.fieldId,\r\n                textValue: `${field.dateNoTzValue.localDateOnly || \"\"} ${\r\n                  field.dateNoTzValue.localTimeOnly || \"\"\r\n                }`,\r\n\r\n                isRender,\r\n                order,\r\n              };\r\n            }\r\n            if (field.numberValue) {\r\n              return {\r\n                ...field,\r\n                id: item.id,\r\n                fieldId: field.fieldId,\r\n                textValue: field.numberValue,\r\n                isRender,\r\n                order,\r\n              }\r\n            }\r\n            if (field.currencyValue) {\r\n              return {\r\n                ...field,\r\n                id: item.id,\r\n                fieldId: field.fieldId,\r\n                textValue: field.currencyValue\r\n                  ? `$${parseFloat(field.currencyValue).toFixed(2)}`\r\n                  : '',\r\n                isRender,\r\n                order,\r\n              }\r\n            }\r\n            if (field.multiSelectValues) {\r\n              const [multiSelectOptions] = this.customFields\r\n                .map((f) => {\r\n                  if (f.type === \"multiSelect\" && f.id === field.fieldId) {\r\n                    return f.multiSelectOptions;\r\n                  }\r\n                })\r\n                .filter(Boolean);\r\n\r\n              const options = (field.multiSelectValues || [])\r\n                .filter((item) => multiSelectOptions.find(\r\n                  (option) => option.optionId === item.optionId\r\n                ))\r\n                .map((item) => {\r\n                  const currentOption = multiSelectOptions.find(\r\n                    (option) => option.optionId === item.optionId\r\n                  )\r\n                  return {\r\n                    optionId: item.optionId,\r\n                    optionName: currentOption.optionName,\r\n                    color: currentOption.color\r\n                  }\r\n                })\r\n\r\n              return {\r\n                ...field,\r\n                id: item.id,\r\n                fieldId: field.fieldId,\r\n                textValue: \"\",\r\n                isRender,\r\n                order,\r\n                color: \"\",\r\n                multiSelectValues: options || [],\r\n              };\r\n            }\r\n            if (field.recordLinkValues) {\r\n              return {\r\n                ...field,\r\n                id: item.id,\r\n                fieldId: field.fieldId,\r\n                textValue: field.recordLinkValues\r\n                  .map((item) => item.recordText)\r\n                  .join(', '),\r\n                recordLinkValues: field.recordLinkValues,\r\n                isRender,\r\n                order,\r\n              }\r\n            }\r\n            return {\r\n              ...field,\r\n              id: item.id,\r\n              fieldId: field.fieldId,\r\n              textValue: field.textValue || \"\",\r\n              isRender,\r\n              order,\r\n            };\r\n          });\r\n          return {\r\n            id: item.id,\r\n            customFieldsData: customFieldsData.sort(\r\n              (a, b) => a.order - b.order\r\n            ),\r\n          };\r\n        } else {\r\n          const customFieldsData = this.customFieldsToRender.map((field) => {\r\n            return {\r\n              id: item.id,\r\n              fieldId: field.id,\r\n              textValue: \"\",\r\n              isRender: true,\r\n              order: 0,\r\n            };\r\n          });\r\n          return {\r\n            id: item.id,\r\n            customFieldsData,\r\n          };\r\n        }\r\n      });\r\n\r\n      return res\r\n    },\r\n    numberTypeSortedData(groupBy, recordData) {\r\n      const { id: groupById } = groupBy;\r\n      if (!groupById || !recordData.length) return {};\r\n      let temp = {};\r\n      const groupByValues = [\r\n        ...new Set(\r\n          recordData.map((item) => {\r\n            const field = (item.customFieldsData || []).find(\r\n              (f) => f.fieldId === groupById\r\n            );\r\n            if (field.numberValue) {\r\n              return field.numberValue;\r\n            }\r\n            return;\r\n          })\r\n        ),\r\n      ].filter(Boolean);\r\n      groupByValues.forEach((label) => {\r\n        temp[label] = {\r\n          label,\r\n          records: this.formattedRecordData.filter((record) => {\r\n            const field = record.customFieldsData.find(\r\n              (f) => f.fieldId === groupBy.id\r\n            );\r\n            if (field && field.numberValue === label) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }),\r\n        };\r\n      });\r\n      const noDatLabel = `No ${groupBy.name || \"\"}`;\r\n      temp[noDatLabel] = {\r\n        id: 0,\r\n        label: noDatLabel,\r\n        records: this.formattedRecordData.filter((record) => {\r\n          const field = record.customFieldsData.find(\r\n            (f) => f.fieldId === groupBy.id\r\n          );\r\n          if (!field) {\r\n            return true;\r\n          }\r\n          if (field && !groupByValues.includes(field.numberValue)) {\r\n            return true;\r\n          }\r\n        }),\r\n      };\r\n      return temp;\r\n    },\r\n    currencyTypeSortedData(groupBy, recordData) {\r\n      const { id: groupById } = groupBy;\r\n      if (!groupById || !recordData.length) return {};\r\n      let temp = {};\r\n      const groupByValues = [\r\n        ...new Set(\r\n          recordData.map((item) => {\r\n            const field = (item.customFieldsData || []).find(\r\n              (f) => f.fieldId === groupById\r\n            );\r\n            if (field.currencyValue) {\r\n              return field.currencyValue;\r\n            }\r\n            return;\r\n          })\r\n        ),\r\n      ].filter(Boolean);\r\n      groupByValues.forEach((label) => {\r\n        temp[label] = {\r\n          label: formatAmount(label),\r\n          records: this.formattedRecordData.filter((record) => {\r\n            const field = record.customFieldsData.find(\r\n              (f) => f.fieldId === groupBy.id\r\n            );\r\n            if (field && field.currencyValue === label) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }),\r\n        };\r\n      });\r\n      const noDatLabel = `No ${groupBy.name || \"\"}`;\r\n      temp[noDatLabel] = {\r\n        id: 0,\r\n        label: noDatLabel,\r\n        records: this.formattedRecordData.filter((record) => {\r\n          const field = record.customFieldsData.find(\r\n            (f) => f.fieldId === groupBy.id\r\n          );\r\n          if (!field) {\r\n            return true;\r\n          }\r\n          if (field && !groupByValues.includes(field.currencyValue)) {\r\n            return true;\r\n          }\r\n        }),\r\n      };\r\n      return temp;\r\n    },\r\n    multiSelectTypeSortedData (groupBy, recordData) {\r\n      const { id: groupById } = groupBy\r\n      if (!groupById || !recordData.length) return {}\r\n      const temp = {}\r\n      const groupByValues = [\r\n        ...new Set(\r\n          recordData.map((item) => {\r\n            const field = (item.customFieldsData || []).find(\r\n              (f) => f.fieldId === groupById\r\n            )\r\n            if ((field.multiSelectValues || []).length) {\r\n              return field.multiSelectValues\r\n                .map((item) => item.optionName)\r\n                .join(',')\r\n            }\r\n            \r\n          })\r\n        )\r\n      ].filter(Boolean)\r\n\r\n      groupByValues.forEach((label) => {\r\n        temp[label] = {\r\n          label,\r\n          records: this.formattedRecordData.filter((record) => {\r\n            const field = record.customFieldsData.find(\r\n              (f) => f.fieldId === groupBy.id\r\n            )\r\n            if (field && (field.multiSelectValues || []).length) {\r\n              const optionLabel = field.multiSelectValues\r\n                .map((item) => item.optionName)\r\n                .join(',')\r\n\r\n              if (optionLabel === label) return true\r\n            }\r\n            return false\r\n          })\r\n        }\r\n      })\r\n\r\n      const noDatLabel = `No ${groupBy.name || ''}`\r\n      temp[noDatLabel] = {\r\n        id: 0,\r\n        label: noDatLabel,\r\n        records: this.formattedRecordData.filter((record) => {\r\n          const field = record.customFieldsData.find(\r\n            (f) => f.fieldId === groupBy.id\r\n          )\r\n          if (!field) {\r\n            return true\r\n          }\r\n\r\n          const optionLabel = field.multiSelectValues\r\n            .map((item) => item.optionName)\r\n            .join(',')\r\n\r\n          if (!optionLabel && !groupByValues.includes(optionLabel)) {\r\n            return true\r\n          }\r\n        })\r\n      }\r\n      return temp\r\n    },\r\n    recordLinkTypeSortedData (groupBy, recordData) {\r\n      const { id: groupById } = groupBy\r\n      if (!groupById || !recordData.length) return {}\r\n      const temp = {}\r\n      const groupByValues = [\r\n        ...new Set(\r\n          recordData.map((item) => {\r\n            const field = (item.customFieldsData || []).find(\r\n              (f) => f.fieldId === groupById\r\n            )\r\n            if ((field.recordLinkValues || []).length) {\r\n              return field.recordLinkValues\r\n                .map((item) => item.recordText)\r\n                .join(',')\r\n            }\r\n            \r\n          })\r\n        )\r\n      ].filter(Boolean)\r\n\r\n      groupByValues.forEach((label) => {\r\n        temp[label] = {\r\n          label,\r\n          records: this.formattedRecordData.filter((record) => {\r\n            const field = record.customFieldsData.find(\r\n              (f) => f.fieldId === groupBy.id\r\n            )\r\n            if (field && (field.recordLinkValues || []).length) {\r\n              const optionLabel = field.recordLinkValues\r\n                .map((item) => item.recordText)\r\n                .join(',')\r\n\r\n              if (optionLabel === label) return true\r\n            }\r\n            return false\r\n          })\r\n        }\r\n      })\r\n\r\n      const noDatLabel = `No ${groupBy.name || ''}`\r\n      temp[noDatLabel] = {\r\n        id: 0,\r\n        label: noDatLabel,\r\n        records: this.formattedRecordData.filter((record) => {\r\n          const field = record.customFieldsData.find(\r\n            (f) => f.fieldId === groupBy.id\r\n          )\r\n          if (!field) {\r\n            return true\r\n          }\r\n\r\n          const optionLabel = field.recordLinkValues\r\n            .map((item) => item.recordText)\r\n            .join(',')\r\n\r\n          if (!optionLabel && !groupByValues.includes(optionLabel)) {\r\n            return true\r\n          }\r\n        })\r\n      }\r\n      return temp\r\n    }\r\n  }\r\n};\r\n"],"sourceRoot":""}
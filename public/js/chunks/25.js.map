{"version":3,"sources":["webpack:///./node_modules/@kenjiuno/decompressrtf/lib/index.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/AppointmentRecurParser.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/Burner.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/DataStream.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/EntryStreamParser.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/MsgReader.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/Reader.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/TZDEFINITIONParser.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/TZREGParser.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/VerbStreamParser.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/const.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/index.js","webpack:///./node_modules/@kenjiuno/msgreader/lib/utils.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-data.js","webpack:///./node_modules/iconv-lite/encodings/index.js","webpack:///./node_modules/iconv-lite/encodings/internal.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data.js","webpack:///./node_modules/iconv-lite/encodings/utf16.js","webpack:///./node_modules/iconv-lite/encodings/utf32.js","webpack:///./node_modules/iconv-lite/encodings/utf7.js","webpack:///./node_modules/iconv-lite/lib/bom-handling.js","webpack:///./node_modules/iconv-lite/lib/index.js","webpack:///./node_modules/iconv-lite/lib/streams.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/node-libs-browser/node_modules/events/events.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///./node_modules/rtf-stream-parser/dist/src/ProcessTokens.js","webpack:///./node_modules/rtf-stream-parser/dist/src/de-encapsulate.js","webpack:///./node_modules/rtf-stream-parser/dist/src/decode.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/checkVersion.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/countTokens.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/handleCharacterSet.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/handleControlsAndDestinations.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/handleDeEncapsulation.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/handleFonts.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/handleGroupState.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/handleOutput.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/handleUnicodeSkip.js","webpack:///./node_modules/rtf-stream-parser/dist/src/features/textEscapes.js","webpack:///./node_modules/rtf-stream-parser/dist/src/index.js","webpack:///./node_modules/rtf-stream-parser/dist/src/stream-flow.js","webpack:///./node_modules/rtf-stream-parser/dist/src/tokenize.js","webpack:///./node_modules/rtf-stream-parser/dist/src/utils.js","webpack:///./node_modules/rtf-stream-parser/dist/src/words.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/safer-buffer/safer.js","webpack:///./node_modules/stream-browserify/index.js","webpack:///./node_modules/stream-browserify/node_modules/isarray/index.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/duplex-browser.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/passthrough.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/transform.js","webpack:///./node_modules/stream-browserify/node_modules/readable-stream/writable-browser.js","webpack:///./node_modules/stream-browserify/node_modules/safe-buffer/index.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/util-deprecate/browser.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oCAAoC,YAAY;AAClF;AACA,0BAA0B;AAC1B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ga;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAG;AAClB,aAAa,MAAK;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qBAAqB,mCAAmC,KAAK,sBAAsB,qCAAqC,KAAK,yBAAyB,2CAA2C,KAAK;AAC3M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,mBAAmB,KAAK,iBAAiB,2BAA2B,KAAK,mBAAmB,+BAA+B,KAAK,iBAAiB,2BAA2B,KAAK,gBAAgB,uBAAuB,KAAK,gBAAgB,yBAAyB,KAAK,gBAAgB,yBAAyB,KAAK,aAAa,mBAAmB,KAAK,sBAAsB,qCAAqC,KAAK;AACpb;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpYa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kEAAU;AACjC,mCAAmC,mBAAO,CAAC,0EAAc;AACzD,8BAA8B,mBAAO,CAAC,gEAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE,EAAE;AACb;AACA;AACA;AACA,mCAAmC,QAAQ,KAAI;AAC/C;AACA,mCAAmC,EAAE,EAAE,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,KAAI;AAC/C;AACA,kCAAkC,EAAE,EAAE,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAA8B;AAChD;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iCAAiC;AACjC,mCAAmC;AACnC,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA,yCAAyC;AACzC,8CAA8C;AAC9C;AACA,gCAAgC;AAChC,8CAA8C;AAC9C,6CAA6C;AAC7C,4CAA4C;AAC5C,2CAA2C;AAC3C;AACA,kBAAkB,mBAAmB;AACrC,yCAAyC;AACzC;AACA,kBAAkB,SAAS;AAC3B,kCAAkC;AAClC;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,KAAI;AAC/C;AACA,mCAAmC,EAAE,EAAE,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,KAAI;AAC/C;AACA,kCAAkC,EAAE,EAAE,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA,uCAAuC,gEAAgE,EAAE,EAAE,gBAAgB;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnRa;AACb,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,0DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,4BAA4B,KAAK,+BAA+B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,gEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC,OAAO,oCAAoC;AAC3C;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sCAAsC;AAC7D;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzmDAAmD,YAAY;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpmCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,mDAAmD,qBAAqB,sCAAsC,EAAE;AAChH,kDAAkD,qBAAqB,qCAAqC,EAAE;AAC9G,0DAA0D,qBAAqB,6CAA6C,EAAE;AAC9H,oDAAoD,qBAAqB,uCAAuC,EAAE;AAClH,mDAAmD,qBAAqB,sCAAsC,EAAE;AAChH,oDAAoD,qBAAqB,uCAAuC,EAAE;AAClH,mDAAmD,qBAAqB,sCAAsC,EAAE;AAChH,qDAAqD,qBAAqB,wCAAwC,EAAE;AACpH;;;;;;;;;;;;;ACtjDa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,mCAAmC,mBAAO,CAAC,0EAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;AC1Ba;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,8BAA8B,mBAAO,CAAC,gEAAS;AAC/C,mCAAmC,mBAAO,CAAC,0EAAc;AACzD,eAAe,mBAAO,CAAC,kEAAU;AACjC,eAAe,mBAAO,CAAC,kEAAU;AACjC,cAAc,mBAAO,CAAC,gEAAS;AAC/B,0BAA0B,mBAAO,CAAC,wFAAqB;AACvD,yBAAyB,mBAAO,CAAC,sFAAoB;AACrD,2BAA2B,mBAAO,CAAC,0FAAsB;AACzD,oBAAoB,mBAAO,CAAC,4EAAe;AAC3C,+BAA+B,mBAAO,CAAC,kGAA0B;AACjE,+BAA+B,mBAAO,CAAC,kGAA0B;AACjE,kDAAkD,qCAAqC,gDAAgD,EAAE,EAAE;AAC3I,+CAA+C,qCAAqC,6CAA6C,EAAE,EAAE;AACrI,gDAAgD,qCAAqC,8CAA8C,EAAE,EAAE;AACvI,2CAA2C,qCAAqC,yCAAyC,EAAE,EAAE;AAC7H,iDAAiD,qCAAqC,+CAA+C,EAAE,EAAE;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,+CAA+C;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAA4D,EAAE;AACrG,iDAAiD,uBAAuB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kHAAkH,YAAY,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA,mBAAmB,EAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE;AACA,mBAAmB,EAAG;AACtB;AACA;AACA;AACA;AACA,uBAAuB,EAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,uBAAuB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uIAAuI,EAAE;AACzI;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnea;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,mCAAmC,mBAAO,CAAC,0EAAc;AACzD,cAAc,mBAAO,CAAC,gEAAS;AAC/B,8BAA8B,mBAAO,CAAC,gEAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uDAAuD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oFAAoF;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAA+C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,+BAA+B,EAAE;AACnF,+CAA+C,sCAAsC,EAAE;AACvF,4CAA4C,gBAAgB,EAAE;AAC9D;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,qBAAqB,EAAE,EAAE;AACzB,+CAA+C,4CAA4C,EAAE;AAC7F,4CAA4C;AAC5C;AACA;AACA;AACA,+CAA+C,qCAAqC,EAAE;AACtF,qBAAqB,EAAE,EAAE;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qDAAqD,0DAA0D,EAAE;AACjH,kDAAkD,iCAAiC,EAAE;AACrF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2DAA2D,wBAAwB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kEAAkE,YAAY;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACjYa;AACb,8CAA8C,cAAc;AAC5D;AACA,cAAc,mBAAO,CAAC,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvEa;AACb,8CAA8C,cAAc;AAC5D;AACA,cAAc,mBAAO,CAAC,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAA+C;AAC3E;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B,EAAE;AAC3D,4BAA4B,uBAAuB,EAAE;AACrD,gBAAgB;AAChB;AACA;;;;;;;;;;;;;ACpDa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D,iCAAiC,sDAAsD;AACvF,iCAAiC,2DAA2D;AAC5F,iBAAiB;AACjB;AACA;AACA,iCAAiC,+DAA+D;AAChG,iCAAiC,2DAA2D;AAC5F,iCAAiC,8CAA8C;AAC/E,iCAAiC,0CAA0C;AAC3E,iCAAiC,uDAAuD;AACxF,iCAAiC,0DAA0D;AAC3F,iCAAiC,yFAAyF;AAC1H,iCAAiC,qFAAqF;AACtH,iCAAiC,2EAA2E;AAC5G,iCAAiC,oDAAoD;AACrF,iBAAiB;AACjB;AACA;AACA,iCAAiC,sDAAsD;AACvF,iCAAiC,gEAAgE;AACjG,iCAAiC,0DAA0D;AAC3F,iCAAiC,uDAAuD;AACxF,iCAAiC,8DAA8D;AAC/F,iCAAiC,8EAA8E;AAC/G,iCAAiC,8CAA8C;AAC/E,iCAAiC,oDAAoD;AACrF,iCAAiC,uDAAuD;AACxF,iCAAiC,4DAA4D;AAC7F,iCAAiC,0DAA0D;AAC3F,iCAAiC,gEAAgE;AACjG,iCAAiC,uDAAuD;AACxF,iCAAiC,0EAA0E;AAC3G,iCAAiC,sEAAsE;AACvG,iCAAiC,8DAA8D;AAC/F,iCAAiC,4DAA4D;AAC7F,iCAAiC,wEAAwE;AACzG,iCAAiC,gEAAgE;AACjG,iCAAiC,2CAA2C;AAC5E,iCAAiC,kDAAkD;AACnF,iCAAiC,0EAA0E;AAC3G,iCAAiC,0DAA0D;AAC3F,iCAAiC,gDAAgD;AACjF,iCAAiC,4DAA4D;AAC7F,iCAAiC,0EAA0E;AAC3G,iCAAiC,4DAA4D;AAC7F,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpLa;AACb;AACA;AACA;AACA;AACA,cAAc,oCAAoC,aAAa,EAAE;AACjE;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,kCAAkC,mBAAO,CAAC,wEAAa;AACvD,aAAa,mBAAO,CAAC,wEAAa;AAClC;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,6EAAQ;;AAEnC;AACA;AACA;;;;;;;;;;;;;AC1Ga;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,WAAW;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;;AAEA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA,8BAA8B,WAAW;AACzC;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,UAAU;AACpB;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO,OAAO;AAC9C;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA,uCAAuC;AACvC,2BAA2B,iBAAiB;AAC5C;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,mCAAmC,SAAS;AAC5C,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,S;AACA,4CAA4C;AAC5C;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA,0DAA0D;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,4CAA4C;AAC5C,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;AACA;;AAEA;AACA,gDAAgD;AAChD,iCAAiC;AACjC;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;;AAEA;AACA;AACA,0DAA0D;AAC1D;AACA,8CAA8C;AAC9C;AACA;;AAEA,aAAa,uCAAuC;AACpD;;AAEA,aAAa,iCAAiC;;AAE9C;AACA;AACA;AACA,uCAAuC;AACvC,qCAAqC;;AAErC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,qEAAqE;AACrE,mEAAmE;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;;AAEf;;AAEA,sBAAsB;AACtB;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,8CAA8C;AAC9C;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,gBAAgB;AAC1C;;AAEA;AACA;;AAEA,yB;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,sCAAsC;AACtC;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnlBa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,wFAAwB,GAAG;AACtE,oBAAoB,+BAA+B;AACnD,0BAA0B,yBAAyB;AACnD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,GAAG;AACnE,oBAAoB,+BAA+B;AACnD,KAAK;;AAEL;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,GAAG;AACnE,KAAK;;AAEL;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,SAAS,mBAAO,CAAC,0FAAyB,IAAI;AAC9G,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,SAAS,mBAAO,CAAC,0FAAyB,IAAI;AAC9G,6BAA6B,QAAQ,mBAAO,CAAC,oGAA8B,GAAG;AAC9E;AACA,oBAAoB,YAAY;AAChC,KAAK;;AAEL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,GAAG;AACnE,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,GAAG;AACnE,KAAK;;AAEL;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,mBAAO,CAAC,kFAAqB,SAAS,mBAAO,CAAC,4FAA0B,IAAI;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;;;;;;AC3La;;AAEb;AACA;AACA;AACA,IAAI,mBAAO,CAAC,mEAAY;AACxB,IAAI,mBAAO,CAAC,6DAAS;AACrB,IAAI,mBAAO,CAAC,6DAAS;AACrB,IAAI,mBAAO,CAAC,2DAAQ;AACpB,IAAI,mBAAO,CAAC,uEAAc;AAC1B,IAAI,mBAAO,CAAC,qEAAa;AACzB,IAAI,mBAAO,CAAC,yFAAuB;AACnC,IAAI,mBAAO,CAAC,uEAAc;AAC1B,IAAI,mBAAO,CAAC,qEAAa;AACzB;;AAEA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBa;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;;AAEA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,mCAAmC;AAChD;;AAEA,aAAa,mCAAmC;AAChD;;AAEA,aAAa,oBAAoB;AACjC,aAAa,oBAAoB;AACjC,aAAa,oBAAoB;;AAEjC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,oBAAoB,mBAAO,CAAC,2EAAgB;;AAE5C;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,wCAAwC;AACxC,gCAAgC;AAChC;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA,aAAa,2BAA2B;AACxC;AACA,8BAA8B;AAC9B,aAAa,2BAA2B;AACxC;AACA,8BAA8B;AAC9B,aAAa,OAAO;AACpB;AACA;AACA,SAAS,OAAO;AAChB,gCAAgC;AAChC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrMa;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,+BAA+B;AAClD;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvEa;;AAEbuNAAuN,iEAAiE,EAAE;AAC1R,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,2JAA2J,iEAAiE,EAAE;AAC9N,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yLAAyL,iEAAiE,EAAE;AAC5P,GAAG;AACH;AACA;AACA,uNAAuN,iEAAiE,EAAE;AAC1R,GAAG;AACH;AACA;AACA,uNAAuN,gEAAgE,EAAE;AACzR,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AClca;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjLa;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC,yBAAyB,mBAAmB;AAC5C;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;;AAEA,UAAU,kBAAkB;AAC5B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,+DAA+D,4BAA4B;;AAE3F;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,6BAA6B;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,6BAA6B;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA,mBAAmB,iBAAiB;AACpC;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;AClMa;;AAEb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,uCAAuC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,oBAAoB;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,UAAU,gBAAgB;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,K;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAuE,4BAA4B;;AAEnG,qEAAqE;;AAErE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,6BAA6B;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,6BAA6B;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC,uCAAuC;;AAEvC;AACA,mBAAmB,iBAAiB;AACpC;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9Ta;AACb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,gBAAgB;AACnC,wBAAwB;AACxB;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,SAAS,OAAO;AAChB,uCAAuC;AACvC,wDAAwD;AACxD;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D,KAAK;AACL;;AAEA,+DAA+D;AAC/D,iDAAiD;AACjD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;;AAEA,SAAS,OAAO;AAChB;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC,wBAAwB;AACxB;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,SAAS,OAAO;AAChB,2CAA2C;AAC3C,wDAAwD;AACxD;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D,KAAK;AACL;;AAEA,+DAA+D;AAC/D,iDAAiD;AACjD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/Ra;;AAEb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AClDa;;AAEb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC,kBAAkB,mBAAO,CAAC,qEAAgB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;;AAE3B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,mBAAO,CAAC,kEAAc,EAAE;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yEAAyE;AACzE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,EAAE;AACtD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAO,CAAC,2DAAW;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,eAAQ;AACpC,CAAC;;AAED;AACA;;AAEA,CAAC;AACD;AACA;AACA,kHAAkH;AAClH;AACA;;AAEA,IAAI,KAAe,EAAE,EAEpB;;;;;;;;;;;;;ACnLY;;AAEb,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;;AAEA;AACA,sBAAsB;AACtB,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,oBAAoB,EAAE;AAC/D;AACA;AACA,SAAS;AACT;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;;AAEA;AACA,sBAAsB;AACtB,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,cAAc,EAAE;AACzD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,aAAa;AAC1E;AACA,6DAA6D,aAAa;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;AChfA,+CAAa;;AAEb;AACA;AACA;AACA;AACA,oBAAoB;AACpB,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;AC3CA,8CAAa;AACb,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,yDAAQ;AACjC,iBAAiB,mBAAO,CAAC,qEAAU;AACnC,gBAAgB,mBAAO,CAAC,mEAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qDAAqD;AACpE,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACttNa;AACb,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,mGAAyB;AACxD,sBAAsB,mBAAO,CAAC,iGAAwB;AACtD,6BAA6B,mBAAO,CAAC,+GAA+B;AACpE,wCAAwC,mBAAO,CAAC,qIAA0C;AAC1F,gCAAgC,mBAAO,CAAC,qHAAkC;AAC1E,sBAAsB,mBAAO,CAAC,iGAAwB;AACtD,2BAA2B,mBAAO,CAAC,2GAA6B;AAChE,uBAAuB,mBAAO,CAAC,mGAAyB;AACxD,4BAA4B,mBAAO,CAAC,6GAA8B;AAClE,sBAAsB,mBAAO,CAAC,iGAAwB;AACtD,wBAAwB,mBAAO,CAAC,mFAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrHa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,mEAAS;AACjrMa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,sDAAsD;AACtD;AACA,KAAK;AACL;AACA;AACA,sDAAsD;AACtD;AACA;AACA,sDAAsD;AACtD;AACA;AACA;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,oEAAU;AAClC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,oEAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,OAAO;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Da;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,oEAAU;AACla;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA,8CAAa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,oEAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjDa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,oCAAoC;AAC9C,UAAU,oCAAoC;AAC9C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA,8CAAa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,yBAAyB,mBAAO,CAAC,qFAAkB;AACnD,iDAAiD,qCAAqC,uCAAuC,EAAE,EAAE;AACjI,sBAAsB,mBAAO,CAAC,+EAAe;AAC7C,mBAAmB,mBAAO,CAAC,yEAAY;AACvC,4CAA4C,qCAAqC,4BAA4B,EAAE,EAAE;AACjH,gBAAgB,mBAAO,CAAC,mEAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;AC7Da;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AC/CA,8CAAa;AACb,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,yDAAQ;AACjC,gBAAgB,mBAAO,CAAC,mEAAS;AACjC;AACA;AACA;AACA;AACA,eAAemCAAmC,UAAU;AAC7C;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/La;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxxDA;AACA;AACA,aAAa,mBAAO,CAAC,6EAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChEA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,6EAAQ;AAC7B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,mBAAO,CAAC,8EAAQ;AACzB,eAAe,mBAAO,CAAC,6DAAU;;AAEjC;AACA,kBAAkB,mBAAO,CAAC,sHAA6B;AACvD,kBAAkB,mBAAO,CAAC,sHAA6B;AACvD,gBAAgB,mBAAO,CAAC,kHAA2B;AACnD,mBAAmB,mBAAO,CAAC,gHAA8B;AACzD,qBAAqB,mBAAO,CAAC,oHAAgC;;AAE7D;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;AC9HA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;ACJA,iBAAiB,mBAAO,CAAC,oHAAyB;;;;;;;;;;;;;ACAlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,yBAAyB,mBAAO,CAAC,6DAAc;AAC/C,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA,eAAe,mBAAO,CAAC,iHAAoB;AAC3C,eAAe,mBAAO,CAAC,iHAAoB;;AAE3C;;AAEA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEa;;AAEb;;AAEA,gBAAgB,mBAAO,CAAC,mHAAqB;;AAE7C;AACA,yBAAyB,mBAAO,CAAC,6DAAc;AAC/C,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;;AAEA;AACA,cAAc,mBAAO,CAAC,+EAAS;AAC/B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,mBAAO,CAAC,8EAAQ;;AAEzB;AACA;AACA;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,uIAA2B;AAChD;;AAEA;;AAEA,aAAa,mBAAO,CAAC,uFAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,mBAAO,CAAC,6DAAc;AAC/C,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA;AACA,gBAAgB,mBAAO,CAAC,aAAM;AAC9B;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,uIAA+B;AACxD,kBAAkB,mBAAO,CAAC,iIAA4B;AACtD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,6EAA6E;AACtJ;;AAEA;AACA,qBAAqB,mBAAO,CAAC,6GAAkB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,mBAAO,CAAC,4EAAiB;AACjE;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,6GAAkB;;AAE/C;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,kGAAkG;AAClG,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,4FAA4F;AAC5F,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,mBAAO,CAAC,4EAAiB;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,4EAA4E;;AAE5E;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,mDAAmD,iEAAiE;AACpH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,C;;;;;;;;;;;;;AC1/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,6GAAkB;;AAEvC;AACA,yBAAyB,mBAAO,CAAC,6DAAc;AAC/C,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,C;;;;;;;;;;;;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB,mBAAO,CAAC,6DAAc;AAC/C,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA;AACA;AACA,aAAa,mBAAO,CAAC,gEAAgB;AACrC;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,uIAA2B;AAChD;;AAEA;;AAEA,aAAa,mBAAO,CAAC,uFAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,mBAAO,CAAC,iIAA4B;;AAEtD;;AAEA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,6GAAkB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,6GAAkB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;;AAEA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;AC9qBa;;AAEb,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,aAAa,mBAAO,CAAC,uFAAa;AAClC,WAAW,mBAAO,CAAC,aAAM;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,C;;;;;;;;;;;;AC9Ea;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;ACzEA,iBAAiB,mBAAO,CAAC,8EAAQ;;;;;;;;;;;;ACAjC,iBAAiB,mBAAO,CAAC,qGAAY;;;;;;;;;;;;ACArC,2BAA2B,mBAAO,CAAC,wHAA2B;AAC9D;AACA;AACA,mBAAmB,mBAAO,CAAC,wHAA2B;AACtD,iBAAiB,mBAAO,CAAC,oHAAyB;AAClD,oBAAoB,mBAAO,CAAC,0HAA4B;AACxD,sBAAsB,mBAAO,CAAC,8HAA8B;;;;;;;;;;;;ACN5D,iBAAiB,mBAAO,CAAC,qGAAY;;;;;;;;;;;;ACArC,iBAAiB,mBAAO,CAAC,wHAA2B;;;;;;;;;;;;ACApD;AACA,aAAa,mBAAO,CAAC,6EAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,wDAAa;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,sCAAsC,sCAAsC;AACzG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACtSA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA","file":"js/chunks/25.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.decompressRTF = void 0;\r\nvar Stream = /** @class */ (function () {\r\n    function Stream(buf) {\r\n        this.buf = buf;\r\n    }\r\n    Stream.prototype.readInt32LE = function (offset) {\r\n        var value = (this.buf[offset] & 255)\r\n            | ((this.buf[offset + 1] & 255) << 8)\r\n            | ((this.buf[offset + 2] & 255) << 16)\r\n            | ((this.buf[offset + 3] & 255) << 24);\r\n        return value;\r\n    };\r\n    Stream.prototype.readUInt16BE = function (offset) {\r\n        var value = ((this.buf[offset] & 255) << 8)\r\n            | (this.buf[offset + 1] & 255);\r\n        return value;\r\n    };\r\n    Stream.prototype.readUInt8 = function (offset) {\r\n        var value = this.buf[offset] & 255;\r\n        return value;\r\n    };\r\n    Stream.prototype.writeUInt8 = function (value, offset) {\r\n        this.buf[offset] = value & 255;\r\n    };\r\n    return Stream;\r\n}());\r\n/**\r\n * Decompress PR_RTF_COMPRESSED (PidTagRtfCompressed) data\r\n *\r\n * Check these:\r\n *\r\n * - The Compressed RTF Format\r\n *   https://www.freeutils.net/source/jtnef/rtfcompressed\r\n *\r\n * - 2.1.3.1 RTF Compression Format\r\n *   https://msdn.microsoft.com/en-us/library/ee159164(v=exchg.80).aspx\r\n *\r\n */\r\nfunction decompressRTF(inputArray) {\r\n    if (inputArray.length < 16) {\r\n        throw new Error(\"At least 16 bytes\");\r\n    }\r\n    var input = new Stream(inputArray);\r\n    var fileSize = input.readInt32LE(0);\r\n    var rawSize = input.readInt32LE(4);\r\n    var compType = input.readInt32LE(8);\r\n    var crc = input.readInt32LE(12);\r\n    var COMPRESSED = 0x75465A4C;\r\n    var UNCOMPRESSED = 0x414C454D;\r\n    if (compType == COMPRESSED) {\r\n        var initialDictionary = \"{\\\\rtf1\\\\ansi\\\\mac\\\\deff0\\\\deftab720{\\\\fonttbl;}{\\\\f0\\\\fnil \\\\froman \\\\fswi\"\r\n            + \"ss \\\\fmodern \\\\fscript \\\\fdecor MS Sans SerifSymbolArialTimes New Ro\"\r\n            + \"manCourier{\\\\colortbl\\\\red0\\\\green0\\\\blue0\\r\\n\\\\par \\\\pard\\\\plain\\\\f0\\\\fs20\\\\\"\r\n            + \"b\\\\i\\\\u\\\\tab\\\\tx\";\r\n        //if (initialDictionary.length != 207) throw new Error(\"Fix initialDictionary!\");\r\n        var outputArray = []; // automatically expanded\r\n        var output = new Stream(outputArray);\r\n        var outPos = 0;\r\n        var inPos = 16;\r\n        var control = void 0;\r\n        for (var x = 0; x < initialDictionary.length; x += 1) {\r\n            output.writeUInt8(initialDictionary.charCodeAt(x), outPos);\r\n            outPos += 1;\r\n        }\r\n        var inEnd = fileSize + 4;\r\n        for (var run_1 = 0; inPos < inEnd; run_1 = (run_1 + 1) & 7) {\r\n            if (0 == run_1) {\r\n                control = input.readUInt8(inPos);\r\n                inPos += 1;\r\n            }\r\n            if (0 != ((1 << run_1) & control)) {\r\n                // dictionary\r\n                var token = input.readUInt16BE(inPos);\r\n                inPos += 2;\r\n                var offset = token >> 4;\r\n                var length_1 = (token & 15) + 2;\r\n                var readPos = (outPos & (~4095)) + offset;\r\n                if (readPos == outPos) {\r\n                    break;\r\n                }\r\n                if (readPos > outPos) {\r\n                    readPos -= 4096;\r\n                }\r\n                for (var x = 0; x < length_1; x += 1) {\r\n                    var octet = output.readUInt8(readPos);\r\n                    output.writeUInt8(octet, outPos);\r\n                    readPos += 1;\r\n                    outPos += 1;\r\n                }\r\n            }\r\n            else {\r\n                // literal\r\n                var octet = input.readUInt8(inPos);\r\n                output.writeUInt8(octet, outPos);\r\n                inPos += 1;\r\n                outPos += 1;\r\n            }\r\n        }\r\n        return outputArray.slice(initialDictionary.length);\r\n    }\r\n    else if (compType == UNCOMPRESSED) {\r\n        return inputArray.slice(16, 16 + rawSize);\r\n    }\r\n    else {\r\n        throw new Error(\"Either COMPRESSED or UNCOMPRESSED\");\r\n    }\r\n}\r\nexports.decompressRTF = decompressRTF;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parse = exports.OverrideFlags = exports.EndType = exports.CalendarType = exports.PatternType = exports.RecurFrequency = void 0;\r\n/**\r\n * RecurFrequency\r\n *\r\n * @see [[MS-OXOCAL]: RecurrencePattern Structure | Microsoft Learn](https://learn.microsoft.com/en-us/openspecs/exchange_server_protocols/ms-oxocal/cf7153b4-f8b5-4cb6-bf14-e78d21f94814)\r\n */\r\nvar RecurFrequency;\r\n(function (RecurFrequency) {\r\n    RecurFrequency[RecurFrequency[\"Daily\"] = 8202] = \"Daily\";\r\n    RecurFrequency[RecurFrequency[\"Weekly\"] = 8203] = \"Weekly\";\r\n    RecurFrequency[RecurFrequency[\"Monthly\"] = 8204] = \"Monthly\";\r\n    RecurFrequency[RecurFrequency[\"Yearly\"] = 8205] = \"Yearly\";\r\n})(RecurFrequency = exports.RecurFrequency || (exports.RecurFrequency = {}));\r\n/**\r\n * PatternType\r\n *\r\n * @see [[MS-OXOCAL]: RecurrencePattern Structure | Microsoft Learn](https://learn.microsoft.com/en-us/openspecs/exchange_server_protocols/ms-oxocal/cf7153b4-f8b5-4cb6-bf14-e78d21f94814)\r\n */\r\nvar PatternType;\r\n(function (PatternType) {\r\n    /**\r\n     * The event has a daily recurrence.\r\n     */\r\n    PatternType[PatternType[\"Day\"] = 0] = \"Day\";\r\n    /**\r\n     * The event has a weekly recurrence.\r\n     */\r\n    PatternType[PatternType[\"Week\"] = 1] = \"Week\";\r\n    /**\r\n     * The event has a monthly recurrence.\r\n     */\r\n    PatternType[PatternType[\"Month\"] = 2] = \"Month\";\r\n    /**\r\n     * The event has a month-end recurrence.\r\n     */\r\n    PatternType[PatternType[\"MonthEnd\"] = 4] = \"MonthEnd\";\r\n    /**\r\n     * The event has an every nth month pattern.\r\n     */\r\n    PatternType[PatternType[\"MonthNth\"] = 3] = \"MonthNth\";\r\n    /**\r\n     * The event has a monthly recurrence in the Hijri calendar.\r\n     * For this value in the PatternType field, the value of the CalendarType field SHOULD be set to 0x0000.\r\n     */\r\n    PatternType[PatternType[\"HjMonth\"] = 10] = \"HjMonth\";\r\n    /**\r\n     * The event has an every nth month pattern in the Hijri calendar.\r\n     * For this value in the PatternType field, the value of the CalendarType field MUST be set to 0x0000.\r\n     */\r\n    PatternType[PatternType[\"HjMonthNth\"] = 11] = \"HjMonthNth\";\r\n    /**\r\n     * The event has a month end recurrence in the Hijri calendar.\r\n     * For this value in the PatternType field, the value of the CalendarType field MUST be set to 0x0000.\r\n     */\r\n    PatternType[PatternType[\"HjMonthEnd\"] = 12] = \"HjMonthEnd\";\r\n})(PatternType = exports.PatternType || (exports.PatternType = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    /**\r\n     * The default value for the calendar type is Gregorian.\r\n     */\r\n    CalendarType[CalendarType[\"Default\"] = 0] = \"Default\";\r\n    /**\r\n     * Gregorian (localized) calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_GREGORIAN\"] = 1] = \"CAL_GREGORIAN\";\r\n    /**\r\n     * Gregorian (U.S.) calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_GREGORIAN_US\"] = 2] = \"CAL_GREGORIAN_US\";\r\n    /**\r\n     * Japanese Emperor era calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_JAPAN\"] = 3] = \"CAL_JAPAN\";\r\n    /**\r\n     * Taiwan calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_TAIWAN\"] = 4] = \"CAL_TAIWAN\";\r\n    /**\r\n     * Korean Tangun era calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_KOREA\"] = 5] = \"CAL_KOREA\";\r\n    /**\r\n     * Hijri (Arabic Lunar) calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_HIJRI\"] = 6] = \"CAL_HIJRI\";\r\n    /**\r\n     * Thai calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_THAI\"] = 7] = \"CAL_THAI\";\r\n    /**\r\n     * Hebrew lunar calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_HEBREW\"] = 8] = \"CAL_HEBREW\";\r\n    /**\r\n     * Gregorian Middle East French calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_GREGORIAN_ME_FRENCH\"] = 9] = \"CAL_GREGORIAN_ME_FRENCH\";\r\n    /**\r\n     * Gregorian Arabic calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_GREGORIAN_ARABIC\"] = 10] = \"CAL_GREGORIAN_ARABIC\";\r\n    /**\r\n     * Gregorian transliterated English calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_GREGORIAN_XLIT_ENGLISH\"] = 11] = \"CAL_GREGORIAN_XLIT_ENGLISH\";\r\n    /**\r\n     * Gregorian transliterated French calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_GREGORIAN_XLIT_FRENCH\"] = 12] = \"CAL_GREGORIAN_XLIT_FRENCH\";\r\n    /**\r\n     * Japanese lunar calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_LUNAR_JAPANESE\"] = 14] = \"CAL_LUNAR_JAPANESE\";\r\n    /**\r\n     * Chinese lunar calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_CHINESE_LUNAR\"] = 15] = \"CAL_CHINESE_LUNAR\";\r\n    /**\r\n     * Saka era calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_SAKA\"] = 16] = \"CAL_SAKA\";\r\n    /**\r\n     * Lunar ETO Chinese calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_LUNAR_ETO_CHN\"] = 17] = \"CAL_LUNAR_ETO_CHN\";\r\n    /**\r\n     * Lunar ETO Korean calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_LUNAR_ETO_KOR\"] = 18] = \"CAL_LUNAR_ETO_KOR\";\r\n    /**\r\n     * Lunar Rokuyou calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_LUNAR_ROKUYOU\"] = 19] = \"CAL_LUNAR_ROKUYOU\";\r\n    /**\r\n     * Korean lunar calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_LUNAR_KOREAN\"] = 20] = \"CAL_LUNAR_KOREAN\";\r\n    /**\r\n     * Um Al Qura calendar\r\n     */\r\n    CalendarType[CalendarType[\"CAL_UMALQURA\"] = 23] = \"CAL_UMALQURA\";\r\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\r\nvar EndType;\r\n(function (EndType) {\r\n    EndType[EndType[\"EndAfterDate\"] = 8225] = \"EndAfterDate\";\r\n    EndType[EndType[\"EndAfterNOccurrences\"] = 8226] = \"EndAfterNOccurrences\";\r\n    EndType[EndType[\"NeverEnd\"] = 8227] = \"NeverEnd\";\r\n    EndType[EndType[\"NeverEnd2\"] = 4294967295] = \"NeverEnd2\";\r\n})(EndType = exports.EndType || (exports.EndType = {}));\r\n/**\r\n * OverrideFlags\r\n *\r\n * @see [[MS-OXOCAL]: ExceptionInfo Structure | Microsoft Learn](https://learn.microsoft.com/en-us/openspecs/exchange_server_protocols/ms-oxocal/0980d033-3bf1-43e9-a1e6-af51c564e24a)\r\n */\r\nvar OverrideFlags;\r\n(function (OverrideFlags) {\r\n    /**\r\n     * Indicates that the Subject, SubjectLength, and SubjectLength2 fields are present.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_SUBJECT\"] = 1] = \"ARO_SUBJECT\";\r\n    /**\r\n     * Indicates that the MeetingType field is present.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_MEETINGTYPE\"] = 2] = \"ARO_MEETINGTYPE\";\r\n    /**\r\n     * Indicates that the ReminderDelta field is present.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_REMINDERDELTA\"] = 4] = \"ARO_REMINDERDELTA\";\r\n    /**\r\n     * Indicates that the ReminderSet field is present.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_REMINDER\"] = 8] = \"ARO_REMINDER\";\r\n    /**\r\n     * Indicates that the Location, LocationLength, and LocationLength2 fields are present.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_LOCATION\"] = 16] = \"ARO_LOCATION\";\r\n    /**\r\n     * Indicates that the BusyStatus field is present.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_BUSYSTATUS\"] = 32] = \"ARO_BUSYSTATUS\";\r\n    /**\r\n     * Indicates that the attachment field is present.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_ATTACHMENT\"] = 64] = \"ARO_ATTACHMENT\";\r\n    /**\r\n     * Indicates that the SubType field is present.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_SUBTYPE\"] = 128] = \"ARO_SUBTYPE\";\r\n    /**\r\n     * Indicates that the AppointmentColor field is present.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_APPTCOLOR\"] = 256] = \"ARO_APPTCOLOR\";\r\n    /**\r\n     * Indicates that the Exception Embedded Message object has the PidTagRtfCompressed property\r\n     * ([MS-OXCMSG] section 2.2.1.56.4) set on it.\r\n     */\r\n    OverrideFlags[OverrideFlags[\"ARO_EXCEPTIONAL_BODY\"] = 512] = \"ARO_EXCEPTIONAL_BODY\";\r\n})(OverrideFlags = exports.OverrideFlags || (exports.OverrideFlags = {}));\r\n;\r\nfunction parseRecurrencePattern(ds) {\r\n    var ReaderVersion = ds.readUint16();\r\n    if (ReaderVersion !== 0x3004) {\r\n        throw new Error(\"ReaderVersion not supported\");\r\n    }\r\n    var WriterVersion = ds.readUint16();\r\n    if (WriterVersion !== 0x3004) {\r\n        throw new Error(\"WriterVersion not supported\");\r\n    }\r\n    var recurFrequency = ds.readUint16();\r\n    var patternType = ds.readUint16();\r\n    var calendarType = ds.readUint16();\r\n    var firstDateTime = ds.readUint32();\r\n    var period = ds.readUint32();\r\n    var slidingFlag = ds.readUint32();\r\n    var patternTypeWeek = undefined;\r\n    var patternTypeMonth = undefined;\r\n    var patternTypeMonthNth = undefined;\r\n    if (false) { }\r\n    else if (false\r\n        || patternType === PatternType.Week) {\r\n        patternTypeWeek = {\r\n            dayOfWeekBits: ds.readUint32(),\r\n        };\r\n    }\r\n    else if (false\r\n        || patternType === PatternType.Month\r\n        || patternType === PatternType.MonthEnd\r\n        || patternType === PatternType.HjMonth\r\n        || patternType === PatternType.HjMonthEnd) {\r\n        patternTypeMonth = {\r\n            day: ds.readUint32(),\r\n        };\r\n    }\r\n    else if (false\r\n        || patternType === PatternType.MonthNth\r\n        || patternType === PatternType.HjMonthNth) {\r\n        patternTypeMonthNth = {\r\n            dayOfWeekBits: ds.readUint32(),\r\n            n: ds.readUint32(),\r\n        };\r\n    }\r\n    var endType = ds.readUint32();\r\n    var occurrenceCount = ds.readUint32();\r\n    var firstDOW = ds.readUint32();\r\n    var deletedInstanceCount = ds.readUint32();\r\n    var deletedInstanceDates = Array.from(ds.readUint32Array(deletedInstanceCount));\r\n    var modifiedInstanceCount = ds.readUint32();\r\n    var modifiedInstanceDates = Array.from(ds.readUint32Array(modifiedInstanceCount));\r\n    var startDate = ds.readUint32();\r\n    var endDate = ds.readUint32();\r\n    return Object.assign({\r\n        recurFrequency: recurFrequency,\r\n        patternType: patternType,\r\n        calendarType: calendarType,\r\n        firstDateTime: firstDateTime,\r\n        period: period,\r\n        slidingFlag: slidingFlag,\r\n        endType: endType,\r\n        occurrenceCount: occurrenceCount,\r\n        firstDOW: firstDOW,\r\n        deletedInstanceDates: deletedInstanceDates,\r\n        modifiedInstanceDates: modifiedInstanceDates,\r\n        startDate: startDate,\r\n        endDate: endDate,\r\n    }, patternTypeWeek ? { patternTypeWeek: patternTypeWeek } : {}, patternTypeMonth ? { patternTypeMonth: patternTypeMonth } : {}, patternTypeMonthNth ? { patternTypeMonthNth: patternTypeMonthNth } : {});\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction parse(ds, ansiEncoding) {\r\n    var recurrencePattern = parseRecurrencePattern(ds);\r\n    var readerVersion2 = ds.readUint32();\r\n    if (readerVersion2 !== 0x3006) {\r\n        throw new Error(\"ReaderVersion2 not supported\");\r\n    }\r\n    var writerVersion2 = ds.readUint32();\r\n    if (writerVersion2 < 0x3006) {\r\n        throw new Error(\"WriterVersion2 not supported\");\r\n    }\r\n    var startTimeOffset = ds.readUint32();\r\n    var endTimeOffset = ds.readUint32();\r\n    var exceptionCount = ds.readUint16();\r\n    var exceptionInfo = [];\r\n    for (var x = 0; x < exceptionCount; x++) {\r\n        var startDateTime = ds.readUint32();\r\n        var endDateTime = ds.readUint32();\r\n        var originalStartTime = ds.readUint32();\r\n        var overrideFlags = ds.readUint16();\r\n        var subject = undefined;\r\n        if (overrideFlags & OverrideFlags.ARO_SUBJECT) {\r\n            var subjectLength = ds.readUint16();\r\n            var subjectLength2 = ds.readUint16();\r\n            if (subjectLength - 1 !== subjectLength2) {\r\n                throw new Error(\"subjectLength \".concat(subjectLength, \" and subjectLength2 \").concat(subjectLength2, \" are not close!\"));\r\n            }\r\n            subject = ds.readString(subjectLength2, ansiEncoding);\r\n        }\r\n        var meetingType = undefined;\r\n        if (overrideFlags & OverrideFlags.ARO_MEETINGTYPE) {\r\n            meetingType = ds.readUint32();\r\n        }\r\n        var reminderDelta = undefined;\r\n        if (overrideFlags & OverrideFlags.ARO_REMINDERDELTA) {\r\n            reminderDelta = ds.readUint32();\r\n        }\r\n        var reminderSet = undefined;\r\n        if (overrideFlags & OverrideFlags.ARO_REMINDER) {\r\n            reminderSet = ds.readUint32();\r\n        }\r\n        var location_1 = undefined;\r\n        if (overrideFlags & OverrideFlags.ARO_LOCATION) {\r\n            var locationLength = ds.readUint16();\r\n            var locationLength2 = ds.readUint16();\r\n            if (locationLength - 1 !== locationLength2) {\r\n                throw new Error(\"locationLength \".concat(locationLength, \" and locationLength2 \").concat(locationLength2, \" are not close!\"));\r\n            }\r\n            location_1 = ds.readString(locationLength2, ansiEncoding);\r\n        }\r\n        var busyStatus = undefined;\r\n        if (overrideFlags & OverrideFlags.ARO_BUSYSTATUS) {\r\n            busyStatus = ds.readUint32();\r\n        }\r\n        var attachment = undefined;\r\n        if (overrideFlags & OverrideFlags.ARO_ATTACHMENT) {\r\n            attachment = ds.readUint32();\r\n        }\r\n        var subType = undefined;\r\n        if (overrideFlags & OverrideFlags.ARO_SUBTYPE) {\r\n            subType = ds.readUint32();\r\n        }\r\n        var appointmentColor = undefined;\r\n        if (overrideFlags & OverrideFlags.ARO_APPTCOLOR) {\r\n            appointmentColor = ds.readUint32();\r\n        }\r\n        exceptionInfo.push(Object.assign({\r\n            startDateTime: startDateTime,\r\n            endDateTime: endDateTime,\r\n            originalStartTime: originalStartTime,\r\n            overrideFlags: overrideFlags,\r\n        }, subject ? { subject: subject } : {}, meetingType ? { meetingType: meetingType } : {}, reminderDelta ? { reminderDelta: reminderDelta } : {}, reminderSet ? { reminderSet: reminderSet } : {}, location_1 ? { location: location_1 } : {}, busyStatus ? { busyStatus: busyStatus } : {}, attachment ? { attachment: attachment } : {}, subType ? { subType: subType } : {}, appointmentColor ? { appointmentColor: appointmentColor } : {}));\r\n    }\r\n    var reservedBlock1Size = ds.readUint32();\r\n    if (reservedBlock1Size !== 0) {\r\n        throw new Error(\"reservedBlock1Size \".concat(reservedBlock1Size, \" is not zero, AppointmentRecur is broken\"));\r\n    }\r\n    for (var x = 0; x < exceptionCount; x++) {\r\n        var one = exceptionInfo[x];\r\n        if (0x00003009 <= writerVersion2) {\r\n            var changeHighlightSize = ds.readUint32();\r\n            one.changeHighlight = ds.readUint32();\r\n            ds.position += changeHighlightSize - 4;\r\n        }\r\n        var reservedBlockEE1Size = ds.readUint32();\r\n        if (reservedBlockEE1Size !== 0) {\r\n            throw new Error(\"reservedBlockEE1Size \".concat(reservedBlockEE1Size, \" is not zero, AppointmentRecur is broken\"));\r\n        }\r\n        if (one.overrideFlags & (OverrideFlags.ARO_SUBJECT | OverrideFlags.ARO_LOCATION)) {\r\n            var startDateTime = ds.readUint32();\r\n            var endDateTime = ds.readUint32();\r\n            var originalStartDate = ds.readUint32();\r\n            if (one.overrideFlags & (OverrideFlags.ARO_SUBJECT)) {\r\n                var wideCharSubjectLength = ds.readUint16();\r\n                one.subject = ds.readUCS2String(wideCharSubjectLength);\r\n            }\r\n            if (one.overrideFlags & (OverrideFlags.ARO_LOCATION)) {\r\n                var wideCharLocationLength = ds.readUint16();\r\n                one.location = ds.readUCS2String(wideCharLocationLength);\r\n            }\r\n            var reservedBlockEE2Size = ds.readUint32();\r\n            if (reservedBlockEE2Size !== 0) {\r\n                throw new Error(\"reservedBlockEE2Size \".concat(reservedBlockEE2Size, \" is not zero, AppointmentRecur is broken\"));\r\n            }\r\n        }\r\n    }\r\n    var reservedBlock2Size = ds.readUint32();\r\n    if (reservedBlock2Size !== 0) {\r\n        throw new Error(\"reservedBlock2Size \".concat(reservedBlock2Size, \" is not zero, AppointmentRecur is broken\"));\r\n    }\r\n    return {\r\n        recurrencePattern: recurrencePattern,\r\n        startTimeOffset: startTimeOffset,\r\n        endTimeOffset: endTimeOffset,\r\n        exceptionInfo: exceptionInfo,\r\n    };\r\n}\r\nexports.parse = parse;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.burn = void 0;\r\nvar Reader_1 = require(\"./Reader\");\r\nvar DataStream_1 = __importDefault(require(\"./DataStream\"));\r\nvar const_1 = __importDefault(require(\"./const\"));\r\nfunction RoundUpto4096(num) {\r\n    return (num + 4095) & (~4095);\r\n}\r\nfunction RoundUpto512(bytes) {\r\n    return (bytes + 511) & (~511);\r\n}\r\nfunction RoundUpto64(bytes) {\r\n    return (bytes + 63) & (~63);\r\n}\r\nfunction repeatValue(value, count) {\r\n    var array = [];\r\n    for (var x = 0; x < count; x++) {\r\n        array.push(value);\r\n    }\r\n    return array;\r\n}\r\nvar LiteFat = /** @class */ (function () {\r\n    function LiteFat(source) {\r\n        this.sectors = source;\r\n    }\r\n    LiteFat.prototype.allocate = function (count) {\r\n        var first = this.sectors.length;\r\n        for (var x = 0; x < count; x++) {\r\n            var next = (x + 1 === count) ? -2 : first + x + 1;\r\n            this.sectors.push(next);\r\n        }\r\n        return first;\r\n    };\r\n    LiteFat.prototype.allocateAs = function (count, value) {\r\n        var first = this.sectors.length;\r\n        for (var x = 0; x < count; x++) {\r\n            this.sectors.push(value);\r\n        }\r\n        return first;\r\n    };\r\n    LiteFat.prototype.finalize = function (boundary, value) {\r\n        var num = (boundary - (this.sectors.length % boundary)) % boundary;\r\n        for (; num >= 1; num -= 1) {\r\n            this.sectors.push(value);\r\n        }\r\n        return this;\r\n    };\r\n    LiteFat.prototype.count = function () {\r\n        return this.sectors.length;\r\n    };\r\n    return LiteFat;\r\n}());\r\nvar LiteBurner = /** @class */ (function () {\r\n    function LiteBurner(entries) {\r\n        this.fat = new LiteFat([]);\r\n        this.miniFat = new LiteFat([]);\r\n        this.liteEnts = entries\r\n            .map(function (it) { return ({\r\n            entry: it,\r\n            left: -1,\r\n            right: -1,\r\n            child: -1,\r\n            firstSector: 0,\r\n            isMini: it.length < 4096,\r\n        }); });\r\n        this.buildTree(0);\r\n        var entriesFirstSector = this.fat.allocate(RoundUpto512(128 * this.liteEnts.length) / 512);\r\n        for (var _i = 0, _a = this.liteEnts\r\n            .filter(function (it) { return true\r\n            && it.entry.type == Reader_1.TypeEnum.DOCUMENT\r\n            && it.isMini === false; }); _i < _a.length; _i++) {\r\n            var liteEnt = _a[_i];\r\n            liteEnt.firstSector = (liteEnt.entry.length === 0)\r\n                ? -2\r\n                : this.fat.allocate(RoundUpto512(liteEnt.entry.length) / 512);\r\n        }\r\n        for (var _b = 0, _c = this.liteEnts\r\n            .filter(function (it) { return true\r\n            && it.entry.type == Reader_1.TypeEnum.DOCUMENT\r\n            && it.isMini === true; }); _b < _c.length; _b++) {\r\n            var liteEnt = _c[_b];\r\n            liteEnt.firstSector = (liteEnt.entry.length === 0)\r\n                ? -2\r\n                : this.miniFat.allocate(RoundUpto64(liteEnt.entry.length) / 64);\r\n        }\r\n        var numMiniFatSectors = RoundUpto512(4 * this.miniFat.count()) / 512;\r\n        var firstMiniFatSector = (numMiniFatSectors !== 0)\r\n            ? this.fat.allocate(numMiniFatSectors)\r\n            : -2;\r\n        var bytesMiniFat = 64 * this.miniFat.count();\r\n        var firstMiniDataSector = this.fat.allocate(RoundUpto512(bytesMiniFat) / 512);\r\n        this.liteEnts[0].firstSector = firstMiniDataSector;\r\n        var firstFatSector = this.fat.allocateAs(RoundUpto512(4 * (this.fat.count() + this.fat.count() / 128 + this.fat.count() / (128 * 109))) / 512, -3);\r\n        var numFatSectors = this.fat.count() - firstFatSector;\r\n        var numDifatSectors = (numFatSectors > 109)\r\n            ? RoundUpto512(4 * Math.floor((numFatSectors - 109) / 127 * 128)) / 512\r\n            : 0;\r\n        var firstDifatSector = (numDifatSectors !== 0)\r\n            ? this.fat.allocateAs(numDifatSectors, -4)\r\n            : -2;\r\n        var array = new ArrayBuffer(512 * (1 + this.fat.count()));\r\n        var ds = new DataStream_1.default(array, 0, DataStream_1.default.LITTLE_ENDIAN);\r\n        ds.dynamicSize = false;\r\n        this.miniFat.finalize(512 / 4, -1);\r\n        var difat1 = [];\r\n        var difat2 = [];\r\n        {\r\n            var x = 0;\r\n            for (; x < 109 && x < numFatSectors; x++) {\r\n                difat1.push(firstFatSector + x);\r\n            }\r\n            var nextDifatSector = firstDifatSector + 1;\r\n            for (; x < numFatSectors; x++) {\r\n                difat2.push(firstFatSector + x);\r\n                var remain = (difat2.length & 127);\r\n                if (remain === 127) {\r\n                    difat2.push(nextDifatSector);\r\n                    nextDifatSector++;\r\n                }\r\n            }\r\n            while (true) {\r\n                var remain = (difat2.length & 127);\r\n                if (remain === 0) {\r\n                    break;\r\n                }\r\n                difat2.push((remain === 127) ? -2 : -1);\r\n            }\r\n        }\r\n        // header\r\n        {\r\n            ds.seek(0);\r\n            ds.writeUint8Array(const_1.default.FILE_HEADER);\r\n            ds.seek(0x18);\r\n            ds.writeUint16(0x3E); //ushort MinorVersion\r\n            ds.writeUint16(0x03); //ushort MajorVersion\r\n            ds.writeUint16(0xFFFE); //ushort ByteOrder\r\n            ds.writeUint16(9); //ushort SectorShift\r\n            ds.writeUint16(6); //ushort MiniSectorShift\r\n            ds.seek(0x2C);\r\n            ds.writeInt32(numFatSectors); //int32 NumberOfFATSectors\r\n            ds.writeInt32(entriesFirstSector); //int32 FirstDirectorySectorLocation\r\n            ds.seek(0x38);\r\n            ds.writeInt32(4096); //int32 MiniStreamCutoffSize\r\n            ds.writeInt32(firstMiniFatSector); //int32 FirstMiniFATSectorLocation\r\n            ds.writeInt32(numMiniFatSectors); //int32 NumberOfMiniFATSectors\r\n            ds.writeInt32(firstDifatSector); //int32 FirstDIFATSectorLocation\r\n            ds.writeInt32(numDifatSectors); //int32 NumberOfDIFATSectors\r\n            var x = 0;\r\n            for (; x < difat1.length; x++) {\r\n                ds.writeInt32(difat1[x]); //int32 DIFAT[x]\r\n            }\r\n            for (; x < 109; x++) {\r\n                ds.writeInt32(-1); //int32 DIFAT[x]\r\n            }\r\n        }\r\n        // entries\r\n        for (var x = 0; x < this.liteEnts.length; x++) {\r\n            var liteEnt = this.liteEnts[x];\r\n            var pos = 512 * (1 + entriesFirstSector) + 128 * x;\r\n            ds.seek(pos);\r\n            ds.writeUCS2String(liteEnt.entry.name, null, null);\r\n            var numBytesName = ds.position - pos;\r\n            ds.seek(pos + 0x40);\r\n            ds.writeUint16(Math.min(64, numBytesName + 2));\r\n            ds.writeUint8(liteEnt.entry.type);\r\n            ds.writeUint8((x === 0) ? 0 : 1);\r\n            ds.writeInt32(liteEnt.left);\r\n            ds.writeInt32(liteEnt.right);\r\n            ds.writeInt32(liteEnt.child);\r\n            if (x === 0) {\r\n                ds.seek(pos + 0x50);\r\n                ds.writeUint8Array([0x0B, 0x0D, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46]);\r\n            }\r\n            var length_1 = (x === 0)\r\n                ? bytesMiniFat\r\n                : liteEnt.entry.length;\r\n            var firstSector = (length_1 !== 0)\r\n                ? liteEnt.firstSector\r\n                : (liteEnt.entry.type === Reader_1.TypeEnum.DIRECTORY ? 0 : -2);\r\n            ds.seek(pos + 0x74);\r\n            ds.writeInt32(firstSector);\r\n            ds.writeInt32(length_1);\r\n        }\r\n        for (var _d = 0, _e = this.liteEnts\r\n            .filter(function (it) { return true\r\n            && it.entry.type == Reader_1.TypeEnum.DOCUMENT\r\n            && it.isMini === false; }); _d < _e.length; _d++) {\r\n            var liteEnt = _e[_d];\r\n            var bytes = liteEnt.entry.binaryProvider();\r\n            ds.seek(512 * (1 + liteEnt.firstSector));\r\n            ds.writeUint8Array(bytes);\r\n        }\r\n        for (var _f = 0, _g = this.liteEnts\r\n            .filter(function (it) { return true\r\n            && it.entry.type == Reader_1.TypeEnum.DOCUMENT\r\n            && it.isMini === true; }); _f < _g.length; _f++) {\r\n            var liteEnt = _g[_f];\r\n            var bytes = liteEnt.entry.binaryProvider();\r\n            ds.seek(512 * (1 + firstMiniDataSector) + 64 * liteEnt.firstSector);\r\n            ds.writeUint8Array(bytes);\r\n        }\r\n        // minifat\r\n        ds.seek(512 * (1 + firstMiniFatSector));\r\n        ds.writeInt32Array(this.miniFat.sectors);\r\n        // fat\r\n        this.fat.finalize(512 / 4, -1);\r\n        ds.seek(512 * (1 + firstFatSector));\r\n        ds.writeInt32Array(this.fat.sectors);\r\n        // difat\r\n        if (numDifatSectors >= 1) {\r\n            ds.seek(512 * (1 + firstDifatSector));\r\n            ds.writeInt32Array(difat2);\r\n        }\r\n        this.array = array;\r\n    }\r\n    /**\r\n     * CFBF dedicated name comparer\r\n     *\r\n     * - At first compare UTF-16 length.\r\n     * - Then compare upper cased UTF-16 string.\r\n     */\r\n    LiteBurner.prototype.compareName = function (a, b) {\r\n        var t = a.length - b.length;\r\n        if (t === 0) {\r\n            var x = a.toUpperCase();\r\n            var y = b.toUpperCase();\r\n            if (x > y) {\r\n                t = 1;\r\n            }\r\n            else if (x < y) {\r\n                t = -1;\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    LiteBurner.prototype.buildTree = function (dirIndex) {\r\n        var _this = this;\r\n        var liteEnts = this.liteEnts;\r\n        var liteEntry = liteEnts[dirIndex];\r\n        if (liteEntry.entry.type === Reader_1.TypeEnum.DOCUMENT) {\r\n            throw new Error(\"It must be a storage!\");\r\n        }\r\n        var children = liteEntry.entry.children.concat();\r\n        if (children.length >= 1) {\r\n            children.sort(function (a, b) {\r\n                return _this.compareName(liteEnts[a].entry.name, liteEnts[b].entry.name);\r\n            });\r\n            liteEntry.child = children[0];\r\n            for (var x = 0; x < children.length - 1; x++) {\r\n                liteEnts[children[x]].right = children[x + 1];\r\n            }\r\n            for (var _i = 0, _a = children\r\n                .filter(function (it) { return liteEnts[it].entry.type === Reader_1.TypeEnum.DIRECTORY; }); _i < _a.length; _i++) {\r\n                var subIndex = _a[_i];\r\n                this.buildTree(subIndex);\r\n            }\r\n        }\r\n    };\r\n    return LiteBurner;\r\n}());\r\n/**\r\n * Burn CFBF file on the fly.\r\n *\r\n * CFBF = Compound File Binary Format\r\n *\r\n * @param entries The flattened (not tree) entries starting with `Root Entry`.\r\n * @returns The binary.\r\n */\r\nfunction burn(entries) {\r\n    return new Uint8Array(new LiteBurner(entries).array);\r\n}\r\nexports.burn = burn;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar iconv = require('iconv-lite');\r\n/**\r\n * This DataStream is for internal use.\r\n */\r\nvar DataStream = /** @class */ (function () {\r\n    /**\r\n      DataStream reads scalars, arrays and structs of data from an ArrayBuffer.\r\n      It's like a file-like DataView on steroids.\r\n    \r\n      @param arrayBuffer ArrayBuffer to read from.\r\n      @param byteOffset Offset from arrayBuffer beginning for the DataStream.\r\n      @param endianness {@link DataStream.BIG_ENDIAN} or {@link DataStream.LITTLE_ENDIAN} (the default).\r\n      */\r\n    function DataStream(arrayBuffer, byteOffset, endianness) {\r\n        /**\r\n          @internal\r\n          */\r\n        this._dynamicSize = true;\r\n        /**\r\n          Virtual byte length of the DataStream backing buffer.\r\n          Updated to be max of original buffer size and last written size.\r\n          If dynamicSize is false is set to buffer size.\r\n      \r\n          @internal\r\n          */\r\n        this._byteLength = 0;\r\n        /**\r\n          Seek position where {@link readStruct} ran into a problem.\r\n          Useful for debugging struct parsing.\r\n        \r\n         */\r\n        this.failurePosition = 0;\r\n        this._byteOffset = byteOffset || 0;\r\n        if (arrayBuffer instanceof ArrayBuffer) {\r\n            this.buffer = arrayBuffer;\r\n        }\r\n        else if (arrayBuffer instanceof DataView) {\r\n            this.dataView = arrayBuffer;\r\n        }\r\n        else if (arrayBuffer && arrayBuffer.buffer instanceof ArrayBuffer) {\r\n            this._byteOffset += arrayBuffer.byteOffset;\r\n            this._buffer = arrayBuffer.buffer;\r\n            this._dataView = new DataView(this._buffer, this._byteOffset);\r\n            this._byteLength = this._dataView.byteLength + this._byteOffset;\r\n        }\r\n        else {\r\n            throw new Error(\"Unknown arrayBuffer\");\r\n        }\r\n        this.position = 0;\r\n        this.endianness = endianness == null ? DataStream.LITTLE_ENDIAN : endianness;\r\n    }\r\n    ;\r\n    /**\r\n      Saves the DataStream contents to the given filename.\r\n      Uses Chrome's anchor download property to initiate download.\r\n    \r\n      @param filename Filename to save as.\r\n      */\r\n    DataStream.prototype.save = function (filename) {\r\n        var blob = new Blob([this.buffer]);\r\n        var URL = (window[\"webkitURL\"] || window.URL);\r\n        if (URL && URL.createObjectURL) {\r\n            var url = URL.createObjectURL(blob);\r\n            var a = document.createElement('a');\r\n            a.setAttribute('href', url);\r\n            a.setAttribute('download', filename);\r\n            a.click();\r\n            URL.revokeObjectURL(url);\r\n        }\r\n        else {\r\n            throw (\"DataStream.save: Can't create object URL.\");\r\n        }\r\n    };\r\n    ;\r\n    Object.defineProperty(DataStream.prototype, \"dynamicSize\", {\r\n        /**\r\n         * Whether to extend DataStream buffer when trying to write beyond its size.\r\n         * If set, the buffer is reallocated to twice its current size until the\r\n         * requested write fits the buffer.\r\n         */\r\n        get: function () {\r\n            return this._dynamicSize;\r\n        },\r\n        set: function (v) {\r\n            if (!v) {\r\n                this._trimAlloc();\r\n            }\r\n            this._dynamicSize = v;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataStream.prototype, \"byteLength\", {\r\n        /**\r\n          Returns the byte length of the DataStream object.\r\n          */\r\n        get: function () {\r\n            return this._byteLength - this._byteOffset;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataStream.prototype, \"buffer\", {\r\n        /**\r\n          Set/get the backing ArrayBuffer of the DataStream object.\r\n          The setter updates the DataView to point to the new buffer.\r\n          */\r\n        get: function () {\r\n            this._trimAlloc();\r\n            return this._buffer;\r\n        },\r\n        set: function (v) {\r\n            this._buffer = v;\r\n            this._dataView = new DataView(this._buffer, this._byteOffset);\r\n            this._byteLength = this._buffer.byteLength;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataStream.prototype, \"byteOffset\", {\r\n        /**\r\n          Set/get the byteOffset of the DataStream object.\r\n          The setter updates the DataView to point to the new byteOffset.\r\n          */\r\n        get: function () {\r\n            return this._byteOffset;\r\n        },\r\n        set: function (v) {\r\n            this._byteOffset = v;\r\n            this._dataView = new DataView(this._buffer, this._byteOffset);\r\n            this._byteLength = this._buffer.byteLength;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataStream.prototype, \"dataView\", {\r\n        /**\r\n          Set/get the backing DataView of the DataStream object.\r\n          The setter updates the buffer and byteOffset to point to the DataView values.\r\n          */\r\n        get: function () {\r\n            return this._dataView;\r\n        },\r\n        set: function (v) {\r\n            this._byteOffset = v.byteOffset;\r\n            this._buffer = v.buffer;\r\n            this._dataView = new DataView(this._buffer, this._byteOffset);\r\n            this._byteLength = this._byteOffset + v.byteLength;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n      Internal function to resize the DataStream buffer when required.\r\n      @param extra Number of bytes to add to the buffer allocation.\r\n      */\r\n    DataStream.prototype._realloc = function (extra) {\r\n        if (!this._dynamicSize) {\r\n            return;\r\n        }\r\n        var req = this._byteOffset + this.position + extra;\r\n        var blen = this._buffer.byteLength;\r\n        if (req <= blen) {\r\n            if (req > this._byteLength) {\r\n                this._byteLength = req;\r\n            }\r\n            return;\r\n        }\r\n        if (blen < 1) {\r\n            blen = 1;\r\n        }\r\n        while (req > blen) {\r\n            blen *= 2;\r\n        }\r\n        var buf = new ArrayBuffer(blen);\r\n        var src = new Uint8Array(this._buffer);\r\n        var dst = new Uint8Array(buf, 0, src.length);\r\n        dst.set(src);\r\n        this.buffer = buf;\r\n        this._byteLength = req;\r\n    };\r\n    ;\r\n    /**\r\n      Internal function to trim the DataStream buffer when required.\r\n      Used for stripping out the extra bytes from the backing buffer when\r\n      the virtual byteLength is smaller than the buffer byteLength (happens after\r\n      growing the buffer with writes and not filling the extra space completely).\r\n    \r\n      */\r\n    DataStream.prototype._trimAlloc = function () {\r\n        if (this._byteLength == this._buffer.byteLength) {\r\n            return;\r\n        }\r\n        var buf = new ArrayBuffer(this._byteLength);\r\n        var dst = new Uint8Array(buf);\r\n        var src = new Uint8Array(this._buffer, 0, dst.length);\r\n        dst.set(src);\r\n        this.buffer = buf;\r\n    };\r\n    ;\r\n    /**\r\n      Sets the DataStream read/write position to given position.\r\n      Clamps between 0 and DataStream length.\r\n    \r\n      @param pos Position to seek to.\r\n      */\r\n    DataStream.prototype.seek = function (pos) {\r\n        var npos = Math.max(0, Math.min(this.byteLength, pos));\r\n        this.position = (isNaN(npos) || !isFinite(npos)) ? 0 : npos;\r\n    };\r\n    ;\r\n    /**\r\n      Returns true if the DataStream seek pointer is at the end of buffer and\r\n      there's no more data to read.\r\n    \r\n      @return True if the seek pointer is at the end of the buffer.\r\n      */\r\n    DataStream.prototype.isEof = function () {\r\n        return (this.position >= this.byteLength);\r\n    };\r\n    ;\r\n    /**\r\n      Maps an Int32Array into the DataStream buffer, swizzling it to native\r\n      endianness in-place. The current offset from the start of the buffer needs to\r\n      be a multiple of element size, just like with typed array views.\r\n    \r\n      Nice for quickly reading in data. Warning: potentially modifies the buffer\r\n      contents.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return Int32Array to the DataStream backing buffer.\r\n      */\r\n    DataStream.prototype.mapInt32Array = function (length, e) {\r\n        this._realloc(length * 4);\r\n        var arr = new Int32Array(this._buffer, this.byteOffset + this.position, length);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += length * 4;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Maps an Int16Array into the DataStream buffer, swizzling it to native\r\n      endianness in-place. The current offset from the start of the buffer needs to\r\n      be a multiple of element size, just like with typed array views.\r\n    \r\n      Nice for quickly reading in data. Warning: potentially modifies the buffer\r\n      contents.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return Int16Array to the DataStream backing buffer.\r\n      */\r\n    DataStream.prototype.mapInt16Array = function (length, e) {\r\n        this._realloc(length * 2);\r\n        var arr = new Int16Array(this._buffer, this.byteOffset + this.position, length);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += length * 2;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Maps an Int8Array into the DataStream buffer.\r\n    \r\n      Nice for quickly reading in data.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return Int8Array to the DataStream backing buffer.\r\n      */\r\n    DataStream.prototype.mapInt8Array = function (length) {\r\n        this._realloc(length * 1);\r\n        var arr = new Int8Array(this._buffer, this.byteOffset + this.position, length);\r\n        this.position += length * 1;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Maps a Uint32Array into the DataStream buffer, swizzling it to native\r\n      endianness in-place. The current offset from the start of the buffer needs to\r\n      be a multiple of element size, just like with typed array views.\r\n    \r\n      Nice for quickly reading in data. Warning: potentially modifies the buffer\r\n      contents.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return Uint32Array to the DataStream backing buffer.\r\n      */\r\n    DataStream.prototype.mapUint32Array = function (length, e) {\r\n        this._realloc(length * 4);\r\n        var arr = new Uint32Array(this._buffer, this.byteOffset + this.position, length);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += length * 4;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Maps a Uint16Array into the DataStream buffer, swizzling it to native\r\n      endianness in-place. The current offset from the start of the buffer needs to\r\n      be a multiple of element size, just like with typed array views.\r\n    \r\n      Nice for quickly reading in data. Warning: potentially modifies the buffer\r\n      contents.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return Uint16Array to the DataStream backing buffer.\r\n      */\r\n    DataStream.prototype.mapUint16Array = function (length, e) {\r\n        this._realloc(length * 2);\r\n        var arr = new Uint16Array(this._buffer, this.byteOffset + this.position, length);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += length * 2;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Maps a Uint8Array into the DataStream buffer.\r\n    \r\n      Nice for quickly reading in data.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return Uint8Array to the DataStream backing buffer.\r\n      */\r\n    DataStream.prototype.mapUint8Array = function (length) {\r\n        this._realloc(length * 1);\r\n        var arr = new Uint8Array(this._buffer, this.byteOffset + this.position, length);\r\n        this.position += length * 1;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Maps a Float64Array into the DataStream buffer, swizzling it to native\r\n      endianness in-place. The current offset from the start of the buffer needs to\r\n      be a multiple of element size, just like with typed array views.\r\n    \r\n      Nice for quickly reading in data. Warning: potentially modifies the buffer\r\n      contents.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return Float64Array to the DataStream backing buffer.\r\n      */\r\n    DataStream.prototype.mapFloat64Array = function (length, e) {\r\n        this._realloc(length * 8);\r\n        var arr = new Float64Array(this._buffer, this.byteOffset + this.position, length);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += length * 8;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Maps a Float32Array into the DataStream buffer, swizzling it to native\r\n      endianness in-place. The current offset from the start of the buffer needs to\r\n      be a multiple of element size, just like with typed array views.\r\n    \r\n      Nice for quickly reading in data. Warning: potentially modifies the buffer\r\n      contents.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return Float32Array to the DataStream backing buffer.\r\n      */\r\n    DataStream.prototype.mapFloat32Array = function (length, e) {\r\n        this._realloc(length * 4);\r\n        var arr = new Float32Array(this._buffer, this.byteOffset + this.position, length);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += length * 4;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Reads an Int32Array of desired length and endianness from the DataStream.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return The read Int32Array.\r\n     */\r\n    DataStream.prototype.readInt32Array = function (length, e) {\r\n        length = length == null ? (this.byteLength - this.position) / 4 : length;\r\n        var arr = new Int32Array(length);\r\n        DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += arr.byteLength;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Reads an Int16Array of desired length and endianness from the DataStream.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return The read Int16Array.\r\n     */\r\n    DataStream.prototype.readInt16Array = function (length, e) {\r\n        length = length == null ? (this.byteLength - this.position) / 2 : length;\r\n        var arr = new Int16Array(length);\r\n        DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += arr.byteLength;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Reads an Int8Array of desired length from the DataStream.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return The read Int8Array.\r\n     */\r\n    DataStream.prototype.readInt8Array = function (length) {\r\n        length = length == null ? (this.byteLength - this.position) : length;\r\n        var arr = new Int8Array(length);\r\n        DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);\r\n        this.position += arr.byteLength;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Reads a Uint32Array of desired length and endianness from the DataStream.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return The read Uint32Array.\r\n     */\r\n    DataStream.prototype.readUint32Array = function (length, e) {\r\n        length = length == null ? (this.byteLength - this.position) / 4 : length;\r\n        var arr = new Uint32Array(length);\r\n        DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += arr.byteLength;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Reads a Uint16Array of desired length and endianness from the DataStream.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return The read Uint16Array.\r\n     */\r\n    DataStream.prototype.readUint16Array = function (length, e) {\r\n        length = length == null ? (this.byteLength - this.position) / 2 : length;\r\n        var arr = new Uint16Array(length);\r\n        DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += arr.byteLength;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Reads a Uint8Array of desired length from the DataStream.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return The read Uint8Array.\r\n     */\r\n    DataStream.prototype.readUint8Array = function (length) {\r\n        length = length == null ? (this.byteLength - this.position) : length;\r\n        var arr = new Uint8Array(length);\r\n        DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);\r\n        this.position += arr.byteLength;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n     * @internal\r\n     */\r\n    DataStream.prototype.readToUint8Array = function (length, arr, dstOffset) {\r\n        length = length == null ? (this.byteLength - this.position) : length;\r\n        DataStream.memcpy(arr.buffer, dstOffset, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);\r\n        this.position += arr.byteLength;\r\n    };\r\n    ;\r\n    /**\r\n      Reads a Float64Array of desired length and endianness from the DataStream.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return The read Float64Array.\r\n     */\r\n    DataStream.prototype.readFloat64Array = function (length, e) {\r\n        length = length == null ? (this.byteLength - this.position) / 8 : length;\r\n        var arr = new Float64Array(length);\r\n        DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += arr.byteLength;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Reads a Float32Array of desired length and endianness from the DataStream.\r\n    \r\n      @param length Number of elements to map.\r\n      @param e Endianness of the data to read.\r\n      @return The read Float32Array.\r\n     */\r\n    DataStream.prototype.readFloat32Array = function (length, e) {\r\n        length = length == null ? (this.byteLength - this.position) / 4 : length;\r\n        var arr = new Float32Array(length);\r\n        DataStream.memcpy(arr.buffer, 0, this.buffer, this.byteOffset + this.position, length * arr.BYTES_PER_ELEMENT);\r\n        DataStream.arrayToNative(arr, e == null ? this.endianness : e);\r\n        this.position += arr.byteLength;\r\n        return arr;\r\n    };\r\n    ;\r\n    /**\r\n      Writes an Int32Array of specified endianness to the DataStream.\r\n    \r\n      @param arr The array to write.\r\n      @param e Endianness of the data to write.\r\n     */\r\n    DataStream.prototype.writeInt32Array = function (arr, e) {\r\n        this._realloc(arr.length * 4);\r\n        if (arr instanceof Int32Array &&\r\n            this.byteOffset + this.position % arr.BYTES_PER_ELEMENT == 0) {\r\n            DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, 0, arr.byteLength);\r\n            this.mapInt32Array(arr.length, e);\r\n        }\r\n        else {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                this.writeInt32(arr[i], e);\r\n            }\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Writes an Int16Array of specified endianness to the DataStream.\r\n    \r\n      @param arr The array to write.\r\n      @param e Endianness of the data to write.\r\n     */\r\n    DataStream.prototype.writeInt16Array = function (arr, e) {\r\n        this._realloc(arr.length * 2);\r\n        if (arr instanceof Int16Array &&\r\n            this.byteOffset + this.position % arr.BYTES_PER_ELEMENT == 0) {\r\n            DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, 0, arr.byteLength);\r\n            this.mapInt16Array(arr.length, e);\r\n        }\r\n        else {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                this.writeInt16(arr[i], e);\r\n            }\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Writes an Int8Array to the DataStream.\r\n    \r\n      @param arr The array to write.\r\n     */\r\n    DataStream.prototype.writeInt8Array = function (arr) {\r\n        this._realloc(arr.length * 1);\r\n        if (arr instanceof Int8Array &&\r\n            this.byteOffset + this.position % arr.BYTES_PER_ELEMENT == 0) {\r\n            DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, 0, arr.byteLength);\r\n            this.mapInt8Array(arr.length);\r\n        }\r\n        else {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                this.writeInt8(arr[i]);\r\n            }\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Writes a Uint32Array of specified endianness to the DataStream.\r\n    \r\n      @param arr The array to write.\r\n      @param e Endianness of the data to write.\r\n     */\r\n    DataStream.prototype.writeUint32Array = function (arr, e) {\r\n        this._realloc(arr.length * 4);\r\n        if (arr instanceof Uint32Array &&\r\n            this.byteOffset + this.position % arr.BYTES_PER_ELEMENT == 0) {\r\n            DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, 0, arr.byteLength);\r\n            this.mapUint32Array(arr.length, e);\r\n        }\r\n        else {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                this.writeUint32(arr[i], e);\r\n            }\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Writes a Uint16Array of specified endianness to the DataStream.\r\n    \r\n      @param arr The array to write.\r\n      @param e Endianness of the data to write.\r\n     */\r\n    DataStream.prototype.writeUint16Array = function (arr, e) {\r\n        this._realloc(arr.length * 2);\r\n        if (arr instanceof Uint16Array &&\r\n            this.byteOffset + this.position % arr.BYTES_PER_ELEMENT == 0) {\r\n            DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, 0, arr.byteLength);\r\n            this.mapUint16Array(arr.length, e);\r\n        }\r\n        else {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                this.writeUint16(arr[i], e);\r\n            }\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Writes a Uint8Array to the DataStream.\r\n    \r\n      @param arr The array to write.\r\n     */\r\n    DataStream.prototype.writeUint8Array = function (arr) {\r\n        this._realloc(arr.length * 1);\r\n        if (arr instanceof Uint8Array &&\r\n            this.byteOffset + this.position % arr.BYTES_PER_ELEMENT == 0) {\r\n            DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, 0, arr.byteLength);\r\n            this.mapUint8Array(arr.length);\r\n        }\r\n        else {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                this.writeUint8(arr[i]);\r\n            }\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Writes a Float64Array of specified endianness to the DataStream.\r\n    \r\n      @param arr The array to write.\r\n      @param e Endianness of the data to write.\r\n     */\r\n    DataStream.prototype.writeFloat64Array = function (arr, e) {\r\n        this._realloc(arr.length * 8);\r\n        if (arr instanceof Float64Array &&\r\n            this.byteOffset + this.position % arr.BYTES_PER_ELEMENT == 0) {\r\n            DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, 0, arr.byteLength);\r\n            this.mapFloat64Array(arr.length, e);\r\n        }\r\n        else {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                this.writeFloat64(arr[i], e);\r\n            }\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Writes a Float32Array of specified endianness to the DataStream.\r\n    \r\n      @param arr The array to write.\r\n      @param e Endianness of the data to write.\r\n     */\r\n    DataStream.prototype.writeFloat32Array = function (arr, e) {\r\n        this._realloc(arr.length * 4);\r\n        if (arr instanceof Float32Array &&\r\n            this.byteOffset + this.position % arr.BYTES_PER_ELEMENT == 0) {\r\n            DataStream.memcpy(this._buffer, this.byteOffset + this.position, arr.buffer, 0, arr.byteLength);\r\n            this.mapFloat32Array(arr.length, e);\r\n        }\r\n        else {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                this.writeFloat32(arr[i], e);\r\n            }\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Reads a 32-bit int from the DataStream with the desired endianness.\r\n    \r\n      @param e Endianness of the number.\r\n      @return The read number.\r\n     */\r\n    DataStream.prototype.readInt32 = function (e) {\r\n        var v = this._dataView.getInt32(this.position, e == null ? this.endianness : e);\r\n        this.position += 4;\r\n        return v;\r\n    };\r\n    ;\r\n    /**\r\n     Reads a 32-bit int from the DataStream with the offset.\r\n    \r\n     @param offset The offset.\r\n     @return The read number.\r\n     */\r\n    DataStream.prototype.readInt = function (offset) {\r\n        this.seek(offset);\r\n        return this.readInt32();\r\n    };\r\n    ;\r\n    /**\r\n      Reads a 16-bit int from the DataStream with the desired endianness.\r\n    \r\n      @param e Endianness of the number.\r\n      @return The read number.\r\n     */\r\n    DataStream.prototype.readInt16 = function (e) {\r\n        var v = this._dataView.getInt16(this.position, e == null ? this.endianness : e);\r\n        this.position += 2;\r\n        return v;\r\n    };\r\n    ;\r\n    /**\r\n     Reads a 16-bit int from the DataStream with the offset\r\n    \r\n     @param offset The offset.\r\n     @return The read number.\r\n     */\r\n    DataStream.prototype.readShort = function (offset) {\r\n        this.seek(offset);\r\n        return this.readInt16();\r\n    };\r\n    ;\r\n    /**\r\n      Reads an 8-bit int from the DataStream.\r\n    \r\n      @return The read number.\r\n     */\r\n    DataStream.prototype.readInt8 = function () {\r\n        var v = this._dataView.getInt8(this.position);\r\n        this.position += 1;\r\n        return v;\r\n    };\r\n    ;\r\n    /**\r\n     Reads an 8-bit int from the DataStream with the offset.\r\n    \r\n     @param offset The offset.\r\n     @return The read number.\r\n     */\r\n    DataStream.prototype.readByte = function (offset) {\r\n        this.seek(offset);\r\n        return this.readInt8();\r\n    };\r\n    ;\r\n    /**\r\n      Reads a 32-bit unsigned int from the DataStream with the desired endianness.\r\n    \r\n      @param e Endianness of the number.\r\n      @return The read number.\r\n     */\r\n    DataStream.prototype.readUint32 = function (e) {\r\n        var v = this._dataView.getUint32(this.position, e == null ? this.endianness : e);\r\n        this.position += 4;\r\n        return v;\r\n    };\r\n    ;\r\n    /**\r\n      Reads a 16-bit unsigned int from the DataStream with the desired endianness.\r\n    \r\n      @param e Endianness of the number.\r\n      @return The read number.\r\n     */\r\n    DataStream.prototype.readUint16 = function (e) {\r\n        var v = this._dataView.getUint16(this.position, e == null ? this.endianness : e);\r\n        this.position += 2;\r\n        return v;\r\n    };\r\n    ;\r\n    /**\r\n      Reads an 8-bit unsigned int from the DataStream.\r\n    \r\n      @return The read number.\r\n     */\r\n    DataStream.prototype.readUint8 = function () {\r\n        var v = this._dataView.getUint8(this.position);\r\n        this.position += 1;\r\n        return v;\r\n    };\r\n    ;\r\n    /**\r\n      Reads a 32-bit float from the DataStream with the desired endianness.\r\n    \r\n      @param e Endianness of the number.\r\n      @return The read number.\r\n     */\r\n    DataStream.prototype.readFloat32 = function (e) {\r\n        var v = this._dataView.getFloat32(this.position, e == null ? this.endianness : e);\r\n        this.position += 4;\r\n        return v;\r\n    };\r\n    ;\r\n    /**\r\n      Reads a 64-bit float from the DataStream with the desired endianness.\r\n    \r\n      @param e Endianness of the number.\r\n      @return The read number.\r\n     */\r\n    DataStream.prototype.readFloat64 = function (e) {\r\n        var v = this._dataView.getFloat64(this.position, e == null ? this.endianness : e);\r\n        this.position += 8;\r\n        return v;\r\n    };\r\n    ;\r\n    /**\r\n      Writes a 32-bit int to the DataStream with the desired endianness.\r\n    \r\n      @param v Number to write.\r\n      @param e Endianness of the number.\r\n     */\r\n    DataStream.prototype.writeInt32 = function (v, e) {\r\n        this._realloc(4);\r\n        this._dataView.setInt32(this.position, v, e == null ? this.endianness : e);\r\n        this.position += 4;\r\n    };\r\n    ;\r\n    /**\r\n      Writes a 16-bit int to the DataStream with the desired endianness.\r\n    \r\n      @param v Number to write.\r\n      @param e Endianness of the number.\r\n     */\r\n    DataStream.prototype.writeInt16 = function (v, e) {\r\n        this._realloc(2);\r\n        this._dataView.setInt16(this.position, v, e == null ? this.endianness : e);\r\n        this.position += 2;\r\n    };\r\n    ;\r\n    /**\r\n      Writes an 8-bit int to the DataStream.\r\n    \r\n      @param v Number to write.\r\n     */\r\n    DataStream.prototype.writeInt8 = function (v) {\r\n        this._realloc(1);\r\n        this._dataView.setInt8(this.position, v);\r\n        this.position += 1;\r\n    };\r\n    ;\r\n    /**\r\n      Writes a 32-bit unsigned int to the DataStream with the desired endianness.\r\n    \r\n      @param v Number to write.\r\n      @param e Endianness of the number.\r\n     */\r\n    DataStream.prototype.writeUint32 = function (v, e) {\r\n        this._realloc(4);\r\n        this._dataView.setUint32(this.position, v, e == null ? this.endianness : e);\r\n        this.position += 4;\r\n    };\r\n    ;\r\n    /**\r\n      Writes a 16-bit unsigned int to the DataStream with the desired endianness.\r\n    \r\n      @param v Number to write.\r\n      @param e Endianness of the number.\r\n     */\r\n    DataStream.prototype.writeUint16 = function (v, e) {\r\n        this._realloc(2);\r\n        this._dataView.setUint16(this.position, v, e == null ? this.endianness : e);\r\n        this.position += 2;\r\n    };\r\n    ;\r\n    /**\r\n      Writes an 8-bit unsigned  int to the DataStream.\r\n    \r\n      @param v Number to write.\r\n     */\r\n    DataStream.prototype.writeUint8 = function (v) {\r\n        this._realloc(1);\r\n        this._dataView.setUint8(this.position, v);\r\n        this.position += 1;\r\n    };\r\n    ;\r\n    /**\r\n      Writes a 32-bit float to the DataStream with the desired endianness.\r\n    \r\n      @param v Number to write.\r\n      @param e Endianness of the number.\r\n     */\r\n    DataStream.prototype.writeFloat32 = function (v, e) {\r\n        this._realloc(4);\r\n        this._dataView.setFloat32(this.position, v, e == null ? this.endianness : e);\r\n        this.position += 4;\r\n    };\r\n    ;\r\n    /**\r\n      Writes a 64-bit float to the DataStream with the desired endianness.\r\n    \r\n      @param v Number to write.\r\n      @param e Endianness of the number.\r\n     */\r\n    DataStream.prototype.writeFloat64 = function (v, e) {\r\n        this._realloc(8);\r\n        this._dataView.setFloat64(this.position, v, e == null ? this.endianness : e);\r\n        this.position += 8;\r\n    };\r\n    ;\r\n    /**\r\n      Copies byteLength bytes from the src buffer at srcOffset to the\r\n      dst buffer at dstOffset.\r\n    \r\n      @param dst Destination ArrayBuffer to write to.\r\n      @param dstOffset Offset to the destination ArrayBuffer.\r\n      @param src Source ArrayBuffer to read from.\r\n      @param srcOffset Offset to the source ArrayBuffer.\r\n      @param byteLength Number of bytes to copy.\r\n     */\r\n    DataStream.memcpy = function (dst, dstOffset, src, srcOffset, byteLength) {\r\n        var dstU8 = new Uint8Array(dst, dstOffset, byteLength);\r\n        var srcU8 = new Uint8Array(src, srcOffset, byteLength);\r\n        dstU8.set(srcU8);\r\n    };\r\n    ;\r\n    /**\r\n      Converts array to native endianness in-place.\r\n    \r\n      @param array Typed array to convert.\r\n      @param arrayIsLittleEndian True if the data in the array is\r\n                                           little-endian. Set false for big-endian.\r\n      @return The converted typed array.\r\n     */\r\n    DataStream.arrayToNative = function (array, arrayIsLittleEndian) {\r\n        if (arrayIsLittleEndian == this.endianness) {\r\n            return array;\r\n        }\r\n        else {\r\n            return this.flipArrayEndianness(array);\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Converts native endianness array to desired endianness in-place.\r\n    \r\n      @param array Typed array to convert.\r\n      @param littleEndian True if the converted array should be\r\n                                    little-endian. Set false for big-endian.\r\n      @return The converted typed array.\r\n     */\r\n    DataStream.nativeToEndian = function (array, littleEndian) {\r\n        if (this.endianness == littleEndian) {\r\n            return array;\r\n        }\r\n        else {\r\n            return this.flipArrayEndianness(array);\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Flips typed array endianness in-place.\r\n    \r\n      @param array Typed array to flip.\r\n      @return The converted typed array.\r\n     */\r\n    DataStream.flipArrayEndianness = function (array) {\r\n        var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\r\n        for (var i = 0; i < array.byteLength; i += array.BYTES_PER_ELEMENT) {\r\n            for (var j = i + array.BYTES_PER_ELEMENT - 1, k = i; j > k; j--, k++) {\r\n                var tmp = u8[k];\r\n                u8[k] = u8[j];\r\n                u8[j] = tmp;\r\n            }\r\n        }\r\n        return array;\r\n    };\r\n    ;\r\n    /**\r\n      Creates an array from an array of character codes.\r\n      Uses String.fromCharCode on the character codes and concats the results into a string.\r\n    \r\n      @param array Array of character codes.\r\n      @return String created from the character codes.\r\n    **/\r\n    DataStream.createStringFromArray = function (array) {\r\n        var str = \"\";\r\n        for (var i = 0; i < array.length; i++) {\r\n            str += String.fromCharCode(array[i]);\r\n        }\r\n        return str;\r\n    };\r\n    ;\r\n    /**\r\n      Reads a struct of data from the DataStream. The struct is defined as\r\n      a flat array of [name, type]-pairs. See the example below:\r\n    \r\n      ds.readStruct([\r\n        'headerTag', 'uint32', // Uint32 in DataStream endianness.\r\n        'headerTag2', 'uint32be', // Big-endian Uint32.\r\n        'headerTag3', 'uint32le', // Little-endian Uint32.\r\n        'array', ['[]', 'uint32', 16], // Uint32Array of length 16.\r\n        'array2Length', 'uint32',\r\n        'array2', ['[]', 'uint32', 'array2Length'] // Uint32Array of length array2Length\r\n      ]);\r\n    \r\n      The possible values for the type are as follows:\r\n    \r\n      // Number types\r\n    \r\n      // Unsuffixed number types use DataStream endianness.\r\n      // To explicitly specify endianness, suffix the type with\r\n      // 'le' for little-endian or 'be' for big-endian,\r\n      // e.g. 'int32be' for big-endian int32.\r\n    \r\n      'uint8' -- 8-bit unsigned int\r\n      'uint16' -- 16-bit unsigned int\r\n      'uint32' -- 32-bit unsigned int\r\n      'int8' -- 8-bit int\r\n      'int16' -- 16-bit int\r\n      'int32' -- 32-bit int\r\n      'float32' -- 32-bit float\r\n      'float64' -- 64-bit float\r\n    \r\n      // String types\r\n      'cstring' -- ASCII string terminated by a zero byte.\r\n      'string:N' -- ASCII string of length N, where N is a literal integer.\r\n      'string:variableName' -- ASCII string of length $variableName,\r\n        where 'variableName' is a previously parsed number in the current struct.\r\n      'string,CHARSET:N' -- String of byteLength N encoded with given CHARSET.\r\n      'u16string:N' -- UCS-2 string of length N in DataStream endianness.\r\n      'u16stringle:N' -- UCS-2 string of length N in little-endian.\r\n      'u16stringbe:N' -- UCS-2 string of length N in big-endian.\r\n    \r\n      // Complex types\r\n      [name, type, name_2, type_2, ..., name_N, type_N] -- Struct\r\n      function(dataStream, struct) {} -- Callback function to read and return data.\r\n      {get: function(dataStream, struct) {},\r\n       set: function(dataStream, struct) {}}\r\n      -- Getter/setter functions to read and return data, handy for using the same\r\n         struct definition for reading and writing structs.\r\n      ['[]', type, length] -- Array of given type and length. The length can be either\r\n                            a number, a string that references a previously-read\r\n                            field, or a callback function(struct, dataStream, type){}.\r\n                            If length is '*', reads in as many elements as it can.\r\n    \r\n      @param structDefinition Struct definition object.\r\n      @return The read struct. Null if failed to read struct.\r\n     */\r\n    DataStream.prototype.readStruct = function (structDefinition) {\r\n        var struct = {}, t, v, n;\r\n        var p = this.position;\r\n        for (var i = 0; i < structDefinition.length; i += 2) {\r\n            t = structDefinition[i + 1];\r\n            v = this.readType(t, struct);\r\n            if (v == null) {\r\n                if (this.failurePosition == 0) {\r\n                    this.failurePosition = this.position;\r\n                }\r\n                this.position = p;\r\n                return null;\r\n            }\r\n            struct[structDefinition[i]] = v;\r\n        }\r\n        return struct;\r\n    };\r\n    ;\r\n    /**\r\n      Read UCS-2 string of desired length and endianness from the DataStream.\r\n    \r\n      @param length The length of the string to read.\r\n      @param endianness The endianness of the string data in the DataStream.\r\n      @return The read string.\r\n     */\r\n    DataStream.prototype.readUCS2String = function (length, endianness) {\r\n        return DataStream.createStringFromArray(this.readUint16Array(length, endianness));\r\n    };\r\n    ;\r\n    /**\r\n     Read UCS-2 string of desired length and offset from the DataStream.\r\n    \r\n     @param offset The offset.\r\n     @param length The length of the string to read.\r\n     @return The read string.\r\n     */\r\n    DataStream.prototype.readStringAt = function (offset, length) {\r\n        this.seek(offset);\r\n        return this.readUCS2String(length);\r\n    };\r\n    ;\r\n    /**\r\n      Write a UCS-2 string of desired endianness to the DataStream. The\r\n      lengthOverride argument lets you define the number of characters to write.\r\n      If the string is shorter than lengthOverride, the extra space is padded with\r\n      zeroes.\r\n    \r\n      @param str The string to write.\r\n      @param endianness The endianness to use for the written string data.\r\n      @param lengthOverride The number of characters to write.\r\n     */\r\n    DataStream.prototype.writeUCS2String = function (str, endianness, lengthOverride) {\r\n        if (lengthOverride == null) {\r\n            lengthOverride = str.length;\r\n        }\r\n        for (var i = 0; i < str.length && i < lengthOverride; i++) {\r\n            this.writeUint16(str.charCodeAt(i), endianness);\r\n        }\r\n        for (; i < lengthOverride; i++) {\r\n            this.writeUint16(0, endianness);\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Read a string of desired length and encoding from the DataStream.\r\n    \r\n      @param length The length of the string to read in bytes.\r\n      @param encoding The encoding of the string data in the DataStream.\r\n                                Defaults to ASCII.\r\n      @return The read string.\r\n     */\r\n    DataStream.prototype.readString = function (length, encoding) {\r\n        if (encoding == null || encoding == \"ASCII\") {\r\n            return DataStream.createStringFromArray(this.mapUint8Array(length == null ? this.byteLength - this.position : length));\r\n        }\r\n        else {\r\n            return iconv.decode(this.mapUint8Array(length), encoding);\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Writes a string of desired length and encoding to the DataStream.\r\n    \r\n      @param s The string to write.\r\n      @param encoding The encoding for the written string data.\r\n                                Defaults to ASCII.\r\n      @param length The number of characters to write.\r\n     */\r\n    DataStream.prototype.writeString = function (s, encoding, length) {\r\n        if (encoding == null || encoding == \"ASCII\") {\r\n            if (length != null) {\r\n                var i = 0;\r\n                var len = Math.min(s.length, length);\r\n                for (i = 0; i < len; i++) {\r\n                    this.writeUint8(s.charCodeAt(i));\r\n                }\r\n                for (; i < length; i++) {\r\n                    this.writeUint8(0);\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0; i < s.length; i++) {\r\n                    this.writeUint8(s.charCodeAt(i));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.writeUint8Array(iconv.encode(s.substring(0, length), encoding));\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Read null-terminated string of desired length from the DataStream. Truncates\r\n      the returned string so that the null byte is not a part of it.\r\n    \r\n      @param length The length of the string to read.\r\n      @return The read string.\r\n     */\r\n    DataStream.prototype.readCString = function (length) {\r\n        var blen = this.byteLength - this.position;\r\n        var u8 = new Uint8Array(this._buffer, this._byteOffset + this.position);\r\n        var len = blen;\r\n        if (length != null) {\r\n            len = Math.min(length, blen);\r\n        }\r\n        for (var i = 0; i < len && u8[i] != 0; i++)\r\n            ; // find first zero byte\r\n        var s = DataStream.createStringFromArray(this.mapUint8Array(i));\r\n        if (length != null) {\r\n            this.position += len - i;\r\n        }\r\n        else if (i != blen) {\r\n            this.position += 1; // trailing zero if not at end of buffer\r\n        }\r\n        return s;\r\n    };\r\n    ;\r\n    /**\r\n      Writes a null-terminated string to DataStream and zero-pads it to length\r\n      bytes. If length is not given, writes the string followed by a zero.\r\n      If string is longer than length, the written part of the string does not have\r\n      a trailing zero.\r\n    \r\n      @param s The string to write.\r\n      @param length The number of characters to write.\r\n     */\r\n    DataStream.prototype.writeCString = function (s, length) {\r\n        if (length != null) {\r\n            var i = 0;\r\n            var len = Math.min(s.length, length);\r\n            for (i = 0; i < len; i++) {\r\n                this.writeUint8(s.charCodeAt(i));\r\n            }\r\n            for (; i < length; i++) {\r\n                this.writeUint8(0);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < s.length; i++) {\r\n                this.writeUint8(s.charCodeAt(i));\r\n            }\r\n            this.writeUint8(0);\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Reads an object of type t from the DataStream, passing struct as the thus-far\r\n      read struct to possible callbacks that refer to it. Used by readStruct for\r\n      reading in the values, so the type is one of the readStruct types.\r\n    \r\n      @param t Type of the object to read.\r\n      @param struct Struct to refer to when resolving length references\r\n                              and for calling callbacks.\r\n      @return Returns the object on successful read, null on unsuccessful.\r\n     */\r\n    DataStream.prototype.readType = function (t, struct) {\r\n        if (typeof t == \"function\") {\r\n            return t(this, struct);\r\n        }\r\n        else if (typeof t == \"object\" && !(t instanceof Array)) {\r\n            return t.get(this, struct);\r\n        }\r\n        else if (t instanceof Array && t.length != 3) {\r\n            return this.readStruct(t);\r\n        }\r\n        var v = null;\r\n        var lengthOverride = null;\r\n        var charset = \"ASCII\";\r\n        var pos = this.position;\r\n        var len;\r\n        if (typeof t == 'string' && /:/.test(t)) {\r\n            var tp = t.split(\":\");\r\n            t = tp[0];\r\n            len = tp[1];\r\n            // allow length to be previously parsed variable\r\n            // e.g. 'string:fieldLength', if `fieldLength` has\r\n            // been parsed previously.\r\n            if (struct[len] != null) {\r\n                lengthOverride = parseInt(struct[len]);\r\n            }\r\n            else {\r\n                // assume literal integer e.g., 'string:4'\r\n                lengthOverride = parseInt(tp[1]);\r\n            }\r\n        }\r\n        if (typeof t == 'string' && /,/.test(t)) {\r\n            var tp = t.split(\",\");\r\n            t = tp[0];\r\n            charset = parseInt(tp[1]).toString();\r\n        }\r\n        switch (t) {\r\n            case 'uint8':\r\n                v = this.readUint8();\r\n                break;\r\n            case 'int8':\r\n                v = this.readInt8();\r\n                break;\r\n            case 'uint16':\r\n                v = this.readUint16(this.endianness);\r\n                break;\r\n            case 'int16':\r\n                v = this.readInt16(this.endianness);\r\n                break;\r\n            case 'uint32':\r\n                v = this.readUint32(this.endianness);\r\n                break;\r\n            case 'int32':\r\n                v = this.readInt32(this.endianness);\r\n                break;\r\n            case 'float32':\r\n                v = this.readFloat32(this.endianness);\r\n                break;\r\n            case 'float64':\r\n                v = this.readFloat64(this.endianness);\r\n                break;\r\n            case 'uint16be':\r\n                v = this.readUint16(DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'int16be':\r\n                v = this.readInt16(DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'uint32be':\r\n                v = this.readUint32(DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'int32be':\r\n                v = this.readInt32(DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'float32be':\r\n                v = this.readFloat32(DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'float64be':\r\n                v = this.readFloat64(DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'uint16le':\r\n                v = this.readUint16(DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'int16le':\r\n                v = this.readInt16(DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'uint32le':\r\n                v = this.readUint32(DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'int32le':\r\n                v = this.readInt32(DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'float32le':\r\n                v = this.readFloat32(DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'float64le':\r\n                v = this.readFloat64(DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'cstring':\r\n                v = this.readCString(lengthOverride);\r\n                break;\r\n            case 'string':\r\n                v = this.readString(lengthOverride, charset);\r\n                break;\r\n            case 'u16string':\r\n                v = this.readUCS2String(lengthOverride, this.endianness);\r\n                break;\r\n            case 'u16stringle':\r\n                v = this.readUCS2String(lengthOverride, DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'u16stringbe':\r\n                v = this.readUCS2String(lengthOverride, DataStream.BIG_ENDIAN);\r\n                break;\r\n            default:\r\n                if (t.length == 3) {\r\n                    var ta = t[1];\r\n                    var len = t[2];\r\n                    var length = 0;\r\n                    if (typeof len == 'function') {\r\n                        length = len(struct, this, t);\r\n                    }\r\n                    else if (typeof len == 'string' && struct[len] != null) {\r\n                        length = parseInt(struct[len]);\r\n                    }\r\n                    else {\r\n                        length = parseInt(len);\r\n                    }\r\n                    if (typeof ta == \"string\") {\r\n                        var tap = ta.replace(/(le|be)$/, '');\r\n                        var endianness = null;\r\n                        if (/le$/.test(ta)) {\r\n                            endianness = DataStream.LITTLE_ENDIAN;\r\n                        }\r\n                        else if (/be$/.test(ta)) {\r\n                            endianness = DataStream.BIG_ENDIAN;\r\n                        }\r\n                        if (len == '*') {\r\n                            length = null;\r\n                        }\r\n                        switch (tap) {\r\n                            case 'uint8':\r\n                                v = this.readUint8Array(length);\r\n                                break;\r\n                            case 'uint16':\r\n                                v = this.readUint16Array(length, endianness);\r\n                                break;\r\n                            case 'uint32':\r\n                                v = this.readUint32Array(length, endianness);\r\n                                break;\r\n                            case 'int8':\r\n                                v = this.readInt8Array(length);\r\n                                break;\r\n                            case 'int16':\r\n                                v = this.readInt16Array(length, endianness);\r\n                                break;\r\n                            case 'int32':\r\n                                v = this.readInt32Array(length, endianness);\r\n                                break;\r\n                            case 'float32':\r\n                                v = this.readFloat32Array(length, endianness);\r\n                                break;\r\n                            case 'float64':\r\n                                v = this.readFloat64Array(length, endianness);\r\n                                break;\r\n                            case 'cstring':\r\n                            case 'utf16string':\r\n                            case 'string':\r\n                                if (length == null) {\r\n                                    v = [];\r\n                                    while (!this.isEof()) {\r\n                                        var u = this.readType(ta, struct);\r\n                                        if (u == null)\r\n                                            break;\r\n                                        v.push(u);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    v = new Array(length);\r\n                                    for (var i = 0; i < length; i++) {\r\n                                        v[i] = this.readType(ta, struct);\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (len == '*') {\r\n                            v = [];\r\n                            this.buffer;\r\n                            while (true) {\r\n                                var p = this.position;\r\n                                try {\r\n                                    var o = this.readType(ta, struct);\r\n                                    if (o == null) {\r\n                                        this.position = p;\r\n                                        break;\r\n                                    }\r\n                                    v.push(o);\r\n                                }\r\n                                catch (e) {\r\n                                    this.position = p;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            v = new Array(length);\r\n                            for (var i = 0; i < length; i++) {\r\n                                var u = this.readType(ta, struct);\r\n                                if (u == null)\r\n                                    return null;\r\n                                v[i] = u;\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n        }\r\n        if (lengthOverride != null) {\r\n            this.position = pos + lengthOverride;\r\n        }\r\n        return v;\r\n    };\r\n    ;\r\n    /**\r\n      Writes a struct to the DataStream. Takes a structDefinition that gives the\r\n      types and a struct object that gives the values. Refer to readStruct for the\r\n      structure of structDefinition.\r\n    \r\n      @param structDefinition Type definition of the struct.\r\n      @param struct The struct data object.\r\n      */\r\n    DataStream.prototype.writeStruct = function (structDefinition, struct) {\r\n        for (var i = 0; i < structDefinition.length; i += 2) {\r\n            var t = structDefinition[i + 1];\r\n            this.writeType(t, struct[structDefinition[i]], struct);\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Writes object v of type t to the DataStream.\r\n    \r\n      @param t Type of data to write.\r\n      @param v Value of data to write.\r\n      @param struct Struct to pass to write callback functions.\r\n      */\r\n    DataStream.prototype.writeType = function (t, v, struct) {\r\n        if (typeof t == \"function\") {\r\n            return t(this, v);\r\n        }\r\n        else if (typeof t == \"object\" && !(t instanceof Array)) {\r\n            return t.set(this, v, struct);\r\n        }\r\n        var lengthOverride = null;\r\n        var charset = \"ASCII\";\r\n        var pos = this.position;\r\n        if (typeof (t) == 'string' && /:/.test(t)) {\r\n            var tp = t.split(\":\");\r\n            t = tp[0];\r\n            lengthOverride = parseInt(tp[1]);\r\n        }\r\n        if (typeof t == 'string' && /,/.test(t)) {\r\n            var tp = t.split(\",\");\r\n            t = tp[0];\r\n            charset = parseInt(tp[1]).toString();\r\n        }\r\n        switch (t) {\r\n            case 'uint8':\r\n                this.writeUint8(v);\r\n                break;\r\n            case 'int8':\r\n                this.writeInt8(v);\r\n                break;\r\n            case 'uint16':\r\n                this.writeUint16(v, this.endianness);\r\n                break;\r\n            case 'int16':\r\n                this.writeInt16(v, this.endianness);\r\n                break;\r\n            case 'uint32':\r\n                this.writeUint32(v, this.endianness);\r\n                break;\r\n            case 'int32':\r\n                this.writeInt32(v, this.endianness);\r\n                break;\r\n            case 'float32':\r\n                this.writeFloat32(v, this.endianness);\r\n                break;\r\n            case 'float64':\r\n                this.writeFloat64(v, this.endianness);\r\n                break;\r\n            case 'uint16be':\r\n                this.writeUint16(v, DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'int16be':\r\n                this.writeInt16(v, DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'uint32be':\r\n                this.writeUint32(v, DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'int32be':\r\n                this.writeInt32(v, DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'float32be':\r\n                this.writeFloat32(v, DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'float64be':\r\n                this.writeFloat64(v, DataStream.BIG_ENDIAN);\r\n                break;\r\n            case 'uint16le':\r\n                this.writeUint16(v, DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'int16le':\r\n                this.writeInt16(v, DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'uint32le':\r\n                this.writeUint32(v, DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'int32le':\r\n                this.writeInt32(v, DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'float32le':\r\n                this.writeFloat32(v, DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'float64le':\r\n                this.writeFloat64(v, DataStream.LITTLE_ENDIAN);\r\n                break;\r\n            case 'cstring':\r\n                this.writeCString(v, lengthOverride);\r\n                break;\r\n            case 'string':\r\n                this.writeString(v, charset, lengthOverride);\r\n                break;\r\n            case 'u16string':\r\n                this.writeUCS2String(v, this.endianness, lengthOverride);\r\n                break;\r\n            case 'u16stringle':\r\n                this.writeUCS2String(v, DataStream.LITTLE_ENDIAN, lengthOverride);\r\n                break;\r\n            case 'u16stringbe':\r\n                this.writeUCS2String(v, DataStream.BIG_ENDIAN, lengthOverride);\r\n                break;\r\n            default:\r\n                if (t.length == 3) {\r\n                    var ta = t[1];\r\n                    for (var i = 0; i < v.length; i++) {\r\n                        this.writeType(ta, v[i], t[2]);\r\n                    }\r\n                    break;\r\n                }\r\n                else {\r\n                    this.writeStruct(t, v);\r\n                    break;\r\n                }\r\n        }\r\n        if (lengthOverride != null) {\r\n            this.position = pos;\r\n            this._realloc(lengthOverride);\r\n            this.position = pos + lengthOverride;\r\n        }\r\n    };\r\n    ;\r\n    /**\r\n      Big-endian const to use as default endianness.\r\n      */\r\n    DataStream.BIG_ENDIAN = false;\r\n    /**\r\n      Little-endian const to use as default endianness.\r\n      */\r\n    DataStream.LITTLE_ENDIAN = true;\r\n    /**\r\n      Native endianness. Either DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN\r\n      depending on the platform endianness.\r\n    \r\n     */\r\n    DataStream.endianness = new Int8Array(new Int16Array([1]).buffer)[0] > 0;\r\n    return DataStream;\r\n}());\r\nexports.default = DataStream;\r\n/* Fix for Opera 12 not defining BYTES_PER_ELEMENT in typed array prototypes. */\r\nif (Uint8Array.prototype.BYTES_PER_ELEMENT === undefined) {\r\n    Object.defineProperties(Uint8Array.prototype, { BYTES_PER_ELEMENT: { value: Uint8Array.BYTES_PER_ELEMENT } });\r\n    Object.defineProperties(Int8Array.prototype, { BYTES_PER_ELEMENT: { value: Int8Array.BYTES_PER_ELEMENT } });\r\n    Object.defineProperties(Uint8ClampedArray.prototype, { BYTES_PER_ELEMENT: { value: Uint8ClampedArray.BYTES_PER_ELEMENT } });\r\n    Object.defineProperties(Uint16Array.prototype, { BYTES_PER_ELEMENT: { value: Uint16Array.BYTES_PER_ELEMENT } });\r\n    Object.defineProperties(Int16Array.prototype, { BYTES_PER_ELEMENT: { value: Int16Array.BYTES_PER_ELEMENT } });\r\n    Object.defineProperties(Uint32Array.prototype, { BYTES_PER_ELEMENT: { value: Uint32Array.BYTES_PER_ELEMENT } });\r\n    Object.defineProperties(Int32Array.prototype, { BYTES_PER_ELEMENT: { value: Int32Array.BYTES_PER_ELEMENT } });\r\n    Object.defineProperties(Float64Array.prototype, { BYTES_PER_ELEMENT: { value: Float64Array.BYTES_PER_ELEMENT } });\r\n}\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parse = void 0;\r\nvar DataStream_1 = __importDefault(require(\"./DataStream\"));\r\n/**\r\n * @internal\r\n */\r\nfunction parse(array) {\r\n    var ds = new DataStream_1.default(array, 0, DataStream_1.default.LITTLE_ENDIAN);\r\n    var ret = [];\r\n    while (!ds.isEof()) {\r\n        var key = ds.readUint32();\r\n        var low = ds.readUint16();\r\n        var hi = ds.readUint16();\r\n        ret.push({\r\n            key: key,\r\n            isStringProperty: (low & 1) != 0,\r\n            guidIndex: (low >> 1) & 32767,\r\n            propertyIndex: hi,\r\n        });\r\n    }\r\n    return ret;\r\n}\r\nexports.parse = parse;\r\n","\"use strict\";\r\n/* Copyright 2016 Yury Karpovich\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/*\r\n MSG Reader\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OverrideFlags = exports.EndType = exports.CalendarType = exports.PatternType = exports.RecurFrequency = void 0;\r\nvar const_1 = __importDefault(require(\"./const\"));\r\nvar DataStream_1 = __importDefault(require(\"./DataStream\"));\r\nvar Reader_1 = require(\"./Reader\");\r\nvar Burner_1 = require(\"./Burner\");\r\nvar utils_1 = require(\"./utils\");\r\nvar EntryStreamParser_1 = require(\"./EntryStreamParser\");\r\nvar VerbStreamParser_1 = require(\"./VerbStreamParser\");\r\nvar TZDEFINITIONParser_1 = require(\"./TZDEFINITIONParser\");\r\nvar TZREGParser_1 = require(\"./TZREGParser\");\r\nvar AppointmentRecurParser_1 = require(\"./AppointmentRecurParser\");\r\nvar AppointmentRecurParser_2 = require(\"./AppointmentRecurParser\");\r\nObject.defineProperty(exports, \"RecurFrequency\", { enumerable: true, get: function () { return AppointmentRecurParser_2.RecurFrequency; } });\r\nObject.defineProperty(exports, \"PatternType\", { enumerable: true, get: function () { return AppointmentRecurParser_2.PatternType; } });\r\nObject.defineProperty(exports, \"CalendarType\", { enumerable: true, get: function () { return AppointmentRecurParser_2.CalendarType; } });\r\nObject.defineProperty(exports, \"EndType\", { enumerable: true, get: function () { return AppointmentRecurParser_2.EndType; } });\r\nObject.defineProperty(exports, \"OverrideFlags\", { enumerable: true, get: function () { return AppointmentRecurParser_2.OverrideFlags; } });\r\n/**\r\n * CONST.MSG.PROP.TYPE_ENUM\r\n */\r\nvar TypeEnum;\r\n(function (TypeEnum) {\r\n    TypeEnum[TypeEnum[\"DIRECTORY\"] = 1] = \"DIRECTORY\";\r\n    TypeEnum[TypeEnum[\"DOCUMENT\"] = 2] = \"DOCUMENT\";\r\n    TypeEnum[TypeEnum[\"ROOT\"] = 5] = \"ROOT\";\r\n})(TypeEnum || (TypeEnum = {}));\r\nvar KeyType;\r\n(function (KeyType) {\r\n    KeyType[KeyType[\"root\"] = 0] = \"root\";\r\n    KeyType[KeyType[\"toSub\"] = 1] = \"toSub\";\r\n    KeyType[KeyType[\"named\"] = 2] = \"named\";\r\n})(KeyType || (KeyType = {}));\r\nfunction fileTimeToUnixEpoch(time) {\r\n    return (time - 116444736000000000) / 10000;\r\n}\r\n/**\r\n * The core implementation of MsgReader\r\n */\r\nvar MsgReader = /** @class */ (function () {\r\n    function MsgReader(arrayBuffer) {\r\n        this.reader = new Reader_1.Reader(arrayBuffer);\r\n    }\r\n    MsgReader.prototype.decodeField = function (fieldClass, fieldType, provider, ansiEncoding, insideProps) {\r\n        var array = provider();\r\n        var ds = new DataStream_1.default(array, 0, DataStream_1.default.LITTLE_ENDIAN);\r\n        var key = const_1.default.MSG.FIELD.FULL_NAME_MAPPING[\"\".concat(fieldClass).concat(fieldType)]\r\n            || const_1.default.MSG.FIELD.NAME_MAPPING[fieldClass];\r\n        var keyType = KeyType.root;\r\n        var propertySet = undefined;\r\n        var propertyLid = undefined;\r\n        var classValue = parseInt(\"0x\".concat(fieldClass));\r\n        if (classValue >= 0x8000) {\r\n            var keyed = this.privatePidToKeyed[classValue];\r\n            if (keyed) {\r\n                if (keyed.useName) {\r\n                    key = keyed.name;\r\n                    keyType = KeyType.named;\r\n                }\r\n                else {\r\n                    propertySet = keyed.propertySet;\r\n                    propertyLid = (0, utils_1.toHex4)(keyed.propertyLid);\r\n                    var lidDict = const_1.default.MSG.FIELD.PIDLID_MAPPING[keyed.propertySet];\r\n                    if (lidDict !== undefined) {\r\n                        var prop = lidDict[keyed.propertyLid];\r\n                        if (prop !== undefined) {\r\n                            if (prop.dispid !== undefined) {\r\n                                key = prop.dispid; // e.g. `votingResponse`\r\n                                keyType = KeyType.root;\r\n                            }\r\n                            else {\r\n                                key = prop.id; // e.g. `PidLidVerbStream` listed in SomeParsedOxProps\r\n                                keyType = KeyType.toSub;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var value = array;\r\n        var skip = false;\r\n        var decodeAs = const_1.default.MSG.FIELD.TYPE_MAPPING[fieldType];\r\n        if (0) { }\r\n        else if (decodeAs === \"string\") {\r\n            value = ds.readString(array.length, ansiEncoding);\r\n            skip = insideProps;\r\n        }\r\n        else if (decodeAs === \"unicode\") {\r\n            value = ds.readUCS2String(array.length / 2);\r\n            skip = insideProps;\r\n        }\r\n        else if (decodeAs === \"binary\") {\r\n            skip = insideProps;\r\n        }\r\n        else if (decodeAs === \"integer\") {\r\n            value = ds.readUint32();\r\n        }\r\n        else if (decodeAs === \"boolean\") {\r\n            value = ds.readUint16() ? true : false;\r\n        }\r\n        else if (decodeAs === \"time\") {\r\n            var lo = ds.readUint32();\r\n            var fileTime = lo + (4294967296.0 * ds.readUint32());\r\n            value = new Date(fileTimeToUnixEpoch(fileTime)).toUTCString();\r\n        }\r\n        if (skip) {\r\n            key = undefined;\r\n        }\r\n        if (0) { }\r\n        else if (key === \"PidLidVerbStream\") {\r\n            key = \"votingOptions\";\r\n            keyType = KeyType.root;\r\n            value = (0, VerbStreamParser_1.parse)(ds);\r\n        }\r\n        else if (false\r\n            || key === \"apptTZDefStartDisplay\"\r\n            || key === \"apptTZDefEndDisplay\"\r\n            || key === \"apptTZDefRecur\") {\r\n            keyType = KeyType.root;\r\n            value = (0, TZDEFINITIONParser_1.parse)(ds);\r\n        }\r\n        else if (key === \"timeZoneStruct\") {\r\n            value = (0, TZREGParser_1.parse)(ds);\r\n        }\r\n        else if (key === \"apptRecur\") {\r\n            try {\r\n                value = (0, AppointmentRecurParser_1.parse)(ds, ansiEncoding);\r\n            }\r\n            catch (ex) {\r\n                console.debug(ex);\r\n                // drop this data\r\n                key = undefined;\r\n            }\r\n        }\r\n        else if (key === \"recipType\") {\r\n            var MAPI_TO = 1;\r\n            var MAPI_CC = 2;\r\n            var MAPI_BCC = 3;\r\n            if (0) { }\r\n            else if (value === MAPI_TO) {\r\n                value = \"to\";\r\n            }\r\n            else if (value === MAPI_CC) {\r\n                value = \"cc\";\r\n            }\r\n            else if (value === MAPI_BCC) {\r\n                value = \"bcc\";\r\n            }\r\n        }\r\n        var propertyTag = \"\".concat(fieldClass).concat(fieldType);\r\n        return { key: key, keyType: keyType, value: value, propertyTag: propertyTag, propertySet: propertySet, propertyLid: propertyLid, };\r\n    };\r\n    MsgReader.prototype.fieldsDataDocument = function (parserConfig, documentProperty, fields) {\r\n        var value = documentProperty.name.substring(12).toLowerCase();\r\n        var fieldClass = value.substring(0, 4);\r\n        var fieldType = value.substring(4, 8);\r\n        parserConfig.propertyObserver && parserConfig.propertyObserver(fields, parseInt(value.substring(0, 8), 16), documentProperty.provider());\r\n        if (fieldClass == const_1.default.MSG.FIELD.CLASS_MAPPING.ATTACHMENT_DATA) {\r\n            // attachment specific info\r\n            fields.dataId = documentProperty.dataId;\r\n            fields.contentLength = documentProperty.length;\r\n        }\r\n        else {\r\n            this.setDecodedFieldTo(parserConfig, fields, this.decodeField(fieldClass, fieldType, documentProperty.provider, parserConfig.ansiEncoding, false));\r\n        }\r\n    };\r\n    MsgReader.prototype.setDecodedFieldTo = function (parserConfig, fields, pair) {\r\n        var key = pair.key, keyType = pair.keyType, value = pair.value;\r\n        if (key !== undefined) {\r\n            if (keyType === KeyType.root) {\r\n                fields[key] = value;\r\n            }\r\n        }\r\n        if (parserConfig.includeRawProps === true) {\r\n            fields.rawProps = fields.rawProps || [];\r\n            fields.rawProps.push({\r\n                propertyTag: pair.propertyTag,\r\n                propertySet: pair.propertySet,\r\n                propertyLid: pair.propertyLid,\r\n                propertyName: (pair.keyType === KeyType.named) ? pair.key : undefined,\r\n                value: value,\r\n            });\r\n        }\r\n    };\r\n    MsgReader.prototype.getFieldType = function (fieldProperty) {\r\n        var value = fieldProperty.name.substring(12).toLowerCase();\r\n        return value.substring(4, 8);\r\n    };\r\n    MsgReader.prototype.fieldsDataDirInner = function (parserConfig, dirProperty, rootFolder, fields) {\r\n        var _this = this;\r\n        if (dirProperty.name.indexOf(const_1.default.MSG.FIELD.PREFIX.ATTACHMENT) == 0) {\r\n            // attachment\r\n            var attachmentField = {\r\n                dataType: \"attachment\",\r\n            };\r\n            fields.attachments.push(attachmentField);\r\n            this.fieldsDataDir(parserConfig, dirProperty, rootFolder, attachmentField, \"attachment\");\r\n        }\r\n        else if (dirProperty.name.indexOf(const_1.default.MSG.FIELD.PREFIX.RECIPIENT) == 0) {\r\n            // recipient\r\n            var recipientField = {\r\n                dataType: \"recipient\",\r\n            };\r\n            fields.recipients.push(recipientField);\r\n            this.fieldsDataDir(parserConfig, dirProperty, rootFolder, recipientField, \"recip\");\r\n        }\r\n        else if (dirProperty.name.indexOf(const_1.default.MSG.FIELD.PREFIX.NAMEID) == 0) {\r\n            // unknown, read\r\n            this.fieldsNameIdDir(parserConfig, dirProperty, rootFolder, fields);\r\n        }\r\n        else {\r\n            // other dir\r\n            var childFieldType = this.getFieldType(dirProperty);\r\n            if (childFieldType != const_1.default.MSG.FIELD.DIR_TYPE.INNER_MSG) {\r\n                // ignore\r\n            }\r\n            else {\r\n                var innerMsgContentFields = {\r\n                    dataType: \"msg\",\r\n                    attachments: [],\r\n                    recipients: [],\r\n                };\r\n                this.fieldsDataDir(parserConfig, dirProperty, rootFolder, innerMsgContentFields, \"sub\");\r\n                fields.innerMsgContentFields = innerMsgContentFields;\r\n                fields.innerMsgContent = true;\r\n                fields.folderId = dirProperty.dataId;\r\n                this.innerMsgBurners[dirProperty.dataId] = function () { return _this.burnMsg(dirProperty, rootFolder); };\r\n            }\r\n        }\r\n    };\r\n    MsgReader.prototype.burnMsg = function (folder, rootFolder) {\r\n        var entries = [\r\n            {\r\n                name: \"Root Entry\",\r\n                type: TypeEnum.ROOT,\r\n                children: [],\r\n                length: 0,\r\n            }\r\n        ];\r\n        this.registerFolder(entries, 0, folder, rootFolder, 0);\r\n        return (0, Burner_1.burn)(entries);\r\n    };\r\n    MsgReader.prototype.registerFolder = function (entries, index, folder, rootFolder, depth) {\r\n        var _loop_1 = function (set) {\r\n            var provider = set.provider, length_1 = set.length;\r\n            if (depth === 0 && set.name === \"__properties_version1.0\") {\r\n                var src = provider();\r\n                var dst_1 = new Uint8Array(src.length + 8);\r\n                dst_1.set(src.subarray(0, 24), 0);\r\n                dst_1.set(src.subarray(24), 32);\r\n                provider = function () { return dst_1; };\r\n                length_1 = dst_1.length;\r\n            }\r\n            var subIndex = entries.length;\r\n            entries[index].children.push(subIndex);\r\n            entries.push({\r\n                name: set.name,\r\n                type: TypeEnum.DOCUMENT,\r\n                binaryProvider: provider,\r\n                length: length_1,\r\n            });\r\n        };\r\n        for (var _i = 0, _a = folder.fileNameSets(); _i < _a.length; _i++) {\r\n            var set = _a[_i];\r\n            _loop_1(set);\r\n        }\r\n        if (depth === 0) {\r\n            // include root `__nameid_version1.0` folder.\r\n            var sources = rootFolder.subFolders()\r\n                .filter(function (it) { return it.name === const_1.default.MSG.FIELD.PREFIX.NAMEID; });\r\n            for (var _b = 0, sources_1 = sources; _b < sources_1.length; _b++) {\r\n                var source = sources_1[_b];\r\n                var subIndex = entries.length;\r\n                entries[index].children.push(subIndex);\r\n                entries.push({\r\n                    name: source.name,\r\n                    type: TypeEnum.DIRECTORY,\r\n                    children: [],\r\n                    length: 0,\r\n                });\r\n                this.registerFolder(entries, subIndex, source, rootFolder, depth + 1);\r\n            }\r\n        }\r\n        for (var _c = 0, _d = folder.subFolders(); _c < _d.length; _c++) {\r\n            var subFolder = _d[_c];\r\n            var subIndex = entries.length;\r\n            entries[index].children.push(subIndex);\r\n            entries.push({\r\n                name: subFolder.name,\r\n                type: TypeEnum.DIRECTORY,\r\n                children: [],\r\n                length: 0,\r\n            });\r\n            this.registerFolder(entries, subIndex, subFolder, rootFolder, depth + 1);\r\n        }\r\n    };\r\n    MsgReader.prototype.fieldsRecipAndAttachmentProperties = function (parserConfig, documentProperty, fields) {\r\n        var propertiesBinary = documentProperty.provider();\r\n        var propertiesDs = new DataStream_1.default(propertiesBinary, 8, DataStream_1.default.LITTLE_ENDIAN);\r\n        this.importPropertiesFromFile(parserConfig, propertiesDs, fields);\r\n    };\r\n    MsgReader.prototype.importPropertiesFromFile = function (parserConfig, propertiesDs, fields) {\r\n        // See: [MS-OXMSG]: Outlook Item (.msg) File Format, 2.4 Property Stream\r\n        // https://docs.microsoft.com/en-us/openspecs/exchange_server_protocols/ms-oxmsg/20c1125f-043d-42d9-b1dc-cb9b7e5198ef\r\n        var typeConverters = {\r\n            0x0040: function (dataView) {\r\n                var fileTime = dataView.getUint32(0, true) + (4294967296.0 * dataView.getUint32(4, true));\r\n                return new Date(fileTimeToUnixEpoch(fileTime)).toUTCString();\r\n            },\r\n        };\r\n        var _loop_2 = function () {\r\n            var propertyTag = propertiesDs.readUint32();\r\n            if (propertyTag === 0) {\r\n                return \"break\";\r\n            }\r\n            var flags = propertiesDs.readUint32();\r\n            var arr = propertiesDs.readUint8Array(8);\r\n            parserConfig.propertyObserver(fields, propertyTag, arr);\r\n            var fieldClass = (0, utils_1.toHex2)((propertyTag / 65536) & 0xFFFF);\r\n            var fieldType = (0, utils_1.toHex2)(propertyTag & 0xFFFF);\r\n            this_1.setDecodedFieldTo(parserConfig, fields, this_1.decodeField(fieldClass, fieldType, function () { return arr; }, parserConfig.ansiEncoding, true));\r\n        };\r\n        var this_1 = this;\r\n        while (!propertiesDs.isEof()) {\r\n            var state_1 = _loop_2();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    MsgReader.prototype.fieldsRootProperties = function (parserConfig, documentProperty, fields) {\r\n        var propertiesBinary = documentProperty.provider();\r\n        var propertiesDs = new DataStream_1.default(propertiesBinary, 32, DataStream_1.default.LITTLE_ENDIAN);\r\n        this.importPropertiesFromFile(parserConfig, propertiesDs, fields);\r\n    };\r\n    MsgReader.prototype.fieldsDataDir = function (parserConfig, dirProperty, rootFolder, fields, subClass) {\r\n        for (var _i = 0, _a = dirProperty.subFolders(); _i < _a.length; _i++) {\r\n            var subFolder = _a[_i];\r\n            this.fieldsDataDirInner(parserConfig, subFolder, rootFolder, fields);\r\n        }\r\n        for (var _b = 0, _c = dirProperty.fileNameSets(); _b < _c.length; _b++) {\r\n            var fileSet = _c[_b];\r\n            if (0) { }\r\n            else if (fileSet.name.indexOf(const_1.default.MSG.FIELD.PREFIX.DOCUMENT) == 0) {\r\n                this.fieldsDataDocument(parserConfig, fileSet, fields);\r\n            }\r\n            else if (fileSet.name === \"__properties_version1.0\") {\r\n                if (subClass === \"recip\" || subClass === \"attachment\" || subClass === \"sub\") {\r\n                    this.fieldsRecipAndAttachmentProperties(parserConfig, fileSet, fields);\r\n                }\r\n                else if (subClass === \"root\") {\r\n                    this.fieldsRootProperties(parserConfig, fileSet, fields);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    MsgReader.prototype.fieldsNameIdDir = function (parserConfig, dirProperty, rootFolder, fields) {\r\n        var guidTable = undefined;\r\n        var stringTable = undefined;\r\n        var entryTable = undefined;\r\n        for (var _i = 0, _a = dirProperty.fileNameSets(); _i < _a.length; _i++) {\r\n            var fileSet = _a[_i];\r\n            if (0) { }\r\n            else if (fileSet.name.indexOf(const_1.default.MSG.FIELD.PREFIX.DOCUMENT) == 0) {\r\n                var value = fileSet.name.substring(12).toLowerCase();\r\n                var fieldClass = value.substring(0, 4);\r\n                var fieldType = value.substring(4, 8);\r\n                if (0) { }\r\n                else if (fieldClass === \"0002\" && fieldType === \"0102\") {\r\n                    guidTable = fileSet.provider();\r\n                }\r\n                else if (fieldClass === \"0003\" && fieldType === \"0102\") {\r\n                    entryTable = fileSet.provider();\r\n                }\r\n                else if (fieldClass === \"0004\" && fieldType === \"0102\") {\r\n                    stringTable = fileSet.provider();\r\n                }\r\n            }\r\n        }\r\n        //console.log(\"%\", guidTable, stringTable, entryTable);\r\n        if (guidTable !== undefined && stringTable !== undefined && entryTable !== undefined) {\r\n            var entries = (0, EntryStreamParser_1.parse)(entryTable);\r\n            var stringReader = new DataStream_1.default(stringTable, 0, DataStream_1.default.LITTLE_ENDIAN);\r\n            for (var _b = 0, entries_1 = entries; _b < entries_1.length; _b++) {\r\n                var entry = entries_1[_b];\r\n                if (entry.isStringProperty) {\r\n                    stringReader.seek(entry.key);\r\n                    var numTextBytes = stringReader.readUint32();\r\n                    this.privatePidToKeyed[0x8000 | entry.propertyIndex] = {\r\n                        useName: true,\r\n                        name: stringReader.readUCS2String(numTextBytes / 2),\r\n                    };\r\n                }\r\n                else {\r\n                    this.privatePidToKeyed[0x8000 | entry.propertyIndex] = {\r\n                        useName: false,\r\n                        propertySet: (entry.guidIndex === 1) ? \"00020328-00000-0000-C000-00000000046\"\r\n                            : (entry.guidIndex === 2) ? \"00020329-00000-0000-C000-00000000046\"\r\n                                : (0, utils_1.msftUuidStringify)(guidTable, 16 * (entry.guidIndex - 3)),\r\n                        propertyLid: entry.key,\r\n                    };\r\n                }\r\n            }\r\n            //console.log(\"@\", this.privatePidToKeyed);\r\n        }\r\n    };\r\n    /**\r\n     * extract real fields\r\n     */\r\n    MsgReader.prototype.fieldsDataReader = function (parserConfig) {\r\n        var fields = {\r\n            dataType: \"msg\",\r\n            attachments: [],\r\n            recipients: []\r\n        };\r\n        this.fieldsDataDir(parserConfig, this.reader.rootFolder(), this.reader.rootFolder(), fields, \"root\");\r\n        return fields;\r\n    };\r\n    /**\r\n     * convert binary data to dictionary\r\n     */\r\n    MsgReader.prototype.parseMsgData = function (parserConfig) {\r\n        this.reader.parse();\r\n        return this.fieldsDataReader(parserConfig);\r\n    };\r\n    MsgReader.prototype.getFileData = function () {\r\n        var _a, _b, _c;\r\n        if (this.fieldsData === undefined) {\r\n            if (!this.reader.isMSGFile()) {\r\n                return {\r\n                    dataType: null,\r\n                    error: 'Unsupported file type!'\r\n                };\r\n            }\r\n            this.innerMsgBurners = {};\r\n            this.privatePidToKeyed = {};\r\n            this.fieldsData = this.parseMsgData({\r\n                propertyObserver: ((_a = this.parserConfig) === null || _a === void 0 ? void 0 : _a.propertyObserver) || (function () { }),\r\n                includeRawProps: ((_b = this.parserConfig) === null || _b === void 0 ? void 0 : _b.includeRawProps) ? true : false,\r\n                ansiEncoding: (0, utils_1.emptyToNull)((_c = this.parserConfig) === null || _c === void 0 ? void 0 : _c.ansiEncoding),\r\n            });\r\n        }\r\n        return this.fieldsData;\r\n    };\r\n    /**\r\n     Reads an attachment content by key/ID\r\n     \r\n      @return {Object} The attachment for specific attachment key\r\n      */\r\n    MsgReader.prototype.getAttachment = function (attach) {\r\n        var attachData = typeof attach === 'number' ? this.fieldsData.attachments[attach] : attach;\r\n        if (attachData.innerMsgContent === true && typeof attachData.folderId === \"number\") {\r\n            // embedded msg\r\n            return { fileName: attachData.name + \".msg\", content: this.innerMsgBurners[attachData.folderId]() };\r\n        }\r\n        else {\r\n            // raw attachment file\r\n            var fieldData = this.reader.readFileOf(attachData.dataId);\r\n            return { fileName: attachData.fileName, content: fieldData };\r\n        }\r\n    };\r\n    return MsgReader;\r\n}());\r\nexports.default = MsgReader;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Reader = exports.TypeEnum = void 0;\r\nvar DataStream_1 = __importDefault(require(\"./DataStream\"));\r\nvar utils_1 = require(\"./utils\");\r\nvar const_1 = __importDefault(require(\"./const\"));\r\n/**\r\n * `Object Type` in `2.6.1 Compound File Directory Entry`\r\n *\r\n * See also: [[MS-CFB]: Compound File Directory Entry | Microsoft Docs](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cfb/60fe8611-66c3-496b-b70d-a504c94c9ace)\r\n */\r\nvar TypeEnum;\r\n(function (TypeEnum) {\r\n    /**\r\n     * `Storage Object`\r\n     *\r\n     * storage object: An object in a compound file that is analogous to a file system directory. The parent object of a storage object must be another storage object or the root storage object.\r\n     *\r\n     * See also:\r\n     *\r\n     * - [[MS-CFB]: Other Directory Entries | Microsoft Docs](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cfb/b37413bb-f3ef-4adc-b18e-29bddd62c26e)\r\n     * - [[MS-CFB]: Glossary | Microsoft Docs](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cfb/59ccb2ef-1ce5-41e3-bc30-075dea759d0a#gt_c3ddf892-3f55-4561-8804-20325dbc8fba)\r\n     */\r\n    TypeEnum[TypeEnum[\"DIRECTORY\"] = 1] = \"DIRECTORY\";\r\n    /**\r\n     * `Stream Object`\r\n     *\r\n     * - stream object: An object in a compound file that is analogous to a file system file. The parent object of a stream object must be a storage object or the root storage object.\r\n     *\r\n     * See also:\r\n     * - [[MS-CFB]: Compound File User-Defined Data Sectors | Microsoft Docs](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cfb/b089deda-be20-4b4a-aad5-fbe68bb19672)\r\n     * - [[MS-CFB]: Glossary | Microsoft Docs](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cfb/59ccb2ef-1ce5-41e3-bc30-075dea759d0a#gt_9f598e1c-0d65-4845-8f06-8d50f7a32fd5)\r\n     */\r\n    TypeEnum[TypeEnum[\"DOCUMENT\"] = 2] = \"DOCUMENT\";\r\n    /**\r\n     * `Root Storage Object`\r\n     *\r\n     * - root storage object: A storage object in a compound file that must be accessed before any other storage objects and stream objects are referenced. It is the uppermost parent object in the storage object and stream object hierarchy.\r\n     *\r\n     * See also:\r\n     * - [[MS-CFB]: Root Directory Entry | Microsoft Docs](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cfb/026fde6e-143d-41bf-a7da-c08b2130d50e)\r\n     * - [[MS-CFB]: Glossary | Microsoft Docs](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cfb/59ccb2ef-1ce5-41e3-bc30-075dea759d0a#gt_d49237e3-04dd-4823-a0a5-5e23f750a5f4)\r\n     */\r\n    TypeEnum[TypeEnum[\"ROOT\"] = 5] = \"ROOT\";\r\n})(TypeEnum = exports.TypeEnum || (exports.TypeEnum = {}));\r\n/**\r\n * Original msg file (CFBF) reader which was implemented in MsgReader.\r\n */\r\nvar Reader = /** @class */ (function () {\r\n    function Reader(arrayBuffer) {\r\n        this.ds = new DataStream_1.default(arrayBuffer, 0, DataStream_1.default.LITTLE_ENDIAN);\r\n    }\r\n    Reader.prototype.isMSGFile = function () {\r\n        this.ds.seek(0);\r\n        return (0, utils_1.arraysEqual)(const_1.default.FILE_HEADER, this.ds.readInt8Array(const_1.default.FILE_HEADER.length));\r\n    };\r\n    Reader.prototype.headerData = function () {\r\n        this.bigBlockSize = this.ds.readByte(30) == const_1.default.MSG.L_BIG_BLOCK_MARK ? const_1.default.MSG.L_BIG_BLOCK_SIZE : const_1.default.MSG.S_BIG_BLOCK_SIZE;\r\n        this.bigBlockLength = this.bigBlockSize / 4;\r\n        // system data\r\n        this.xBlockLength = this.bigBlockLength - 1;\r\n        // header data\r\n        this.batCount = this.ds.readInt(const_1.default.MSG.HEADER.BAT_COUNT_OFFSET);\r\n        this.propertyStart = this.ds.readInt(const_1.default.MSG.HEADER.PROPERTY_START_OFFSET);\r\n        this.sbatStart = this.ds.readInt(const_1.default.MSG.HEADER.SBAT_START_OFFSET);\r\n        this.sbatCount = this.ds.readInt(const_1.default.MSG.HEADER.SBAT_COUNT_OFFSET);\r\n        this.xbatStart = this.ds.readInt(const_1.default.MSG.HEADER.XBAT_START_OFFSET);\r\n        this.xbatCount = this.ds.readInt(const_1.default.MSG.HEADER.XBAT_COUNT_OFFSET);\r\n    };\r\n    Reader.prototype.convertName = function (offset) {\r\n        var nameLength = this.ds.readShort(offset + const_1.default.MSG.PROP.NAME_SIZE_OFFSET);\r\n        if (nameLength < 1) {\r\n            return '';\r\n        }\r\n        else {\r\n            return this.ds.readStringAt(offset, nameLength / 2).split('\\0')[0];\r\n        }\r\n    };\r\n    Reader.prototype.convertProperty = function (offset) {\r\n        return {\r\n            type: this.ds.readByte(offset + const_1.default.MSG.PROP.TYPE_OFFSET),\r\n            name: this.convertName(offset),\r\n            // hierarchy\r\n            previousProperty: this.ds.readInt(offset + const_1.default.MSG.PROP.PREVIOUS_PROPERTY_OFFSET),\r\n            nextProperty: this.ds.readInt(offset + const_1.default.MSG.PROP.NEXT_PROPERTY_OFFSET),\r\n            childProperty: this.ds.readInt(offset + const_1.default.MSG.PROP.CHILD_PROPERTY_OFFSET),\r\n            // data offset\r\n            startBlock: this.ds.readInt(offset + const_1.default.MSG.PROP.START_BLOCK_OFFSET),\r\n            sizeBlock: this.ds.readInt(offset + const_1.default.MSG.PROP.SIZE_OFFSET),\r\n        };\r\n    };\r\n    Reader.prototype.convertBlockToProperties = function (propertyBlockOffset, props) {\r\n        var propertyCount = this.bigBlockSize / const_1.default.MSG.PROP.PROPERTY_SIZE;\r\n        var propertyOffset = this.getBlockOffsetAt(propertyBlockOffset);\r\n        for (var i = 0; i < propertyCount; i++) {\r\n            if (this.ds.byteLength < propertyOffset + const_1.default.MSG.PROP.TYPE_OFFSET) {\r\n                break;\r\n            }\r\n            var propertyType = this.ds.readByte(propertyOffset + const_1.default.MSG.PROP.TYPE_OFFSET);\r\n            switch (propertyType) {\r\n                case const_1.default.MSG.PROP.TYPE_ENUM.ROOT:\r\n                case const_1.default.MSG.PROP.TYPE_ENUM.DIRECTORY:\r\n                case const_1.default.MSG.PROP.TYPE_ENUM.DOCUMENT:\r\n                    props.push(this.convertProperty(propertyOffset));\r\n                    break;\r\n            }\r\n            propertyOffset += const_1.default.MSG.PROP.PROPERTY_SIZE;\r\n        }\r\n    };\r\n    Reader.prototype.createPropertyHierarchy = function (props, nodeProperty) {\r\n        if (!nodeProperty || nodeProperty.childProperty == const_1.default.MSG.PROP.NO_INDEX) {\r\n            return;\r\n        }\r\n        nodeProperty.children = [];\r\n        var children = [nodeProperty.childProperty];\r\n        while (children.length != 0) {\r\n            var currentIndex = children.shift();\r\n            var current = props[currentIndex];\r\n            if (current == null) {\r\n                continue;\r\n            }\r\n            nodeProperty.children.push(currentIndex);\r\n            if (current.type == const_1.default.MSG.PROP.TYPE_ENUM.DIRECTORY) {\r\n                this.createPropertyHierarchy(props, current);\r\n            }\r\n            if (current.previousProperty != const_1.default.MSG.PROP.NO_INDEX) {\r\n                children.push(current.previousProperty);\r\n            }\r\n            if (current.nextProperty != const_1.default.MSG.PROP.NO_INDEX) {\r\n                children.push(current.nextProperty);\r\n            }\r\n        }\r\n    };\r\n    Reader.prototype.propertyDataReader = function (propertyStart) {\r\n        var props = [];\r\n        var currentOffset = propertyStart;\r\n        while (currentOffset != const_1.default.MSG.END_OF_CHAIN) {\r\n            this.convertBlockToProperties(currentOffset, props);\r\n            currentOffset = this.getNextBlock(currentOffset);\r\n        }\r\n        this.createPropertyHierarchy(props, props[0]);\r\n        return props;\r\n    };\r\n    /**\r\n     * Parse msg file.\r\n     */\r\n    Reader.prototype.parse = function () {\r\n        this.headerData();\r\n        this.batData = this.batDataReader();\r\n        if (this.xbatCount > 0) {\r\n            this.xbatDataReader();\r\n        }\r\n        this.sbatData = this.sbatDataReader();\r\n        this.propertyData = this.propertyDataReader(this.propertyStart);\r\n        this.bigBlockTable = this.readBigBlockTable();\r\n    };\r\n    Reader.prototype.batCountInHeader = function () {\r\n        var maxBatsInHeader = (const_1.default.MSG.S_BIG_BLOCK_SIZE - const_1.default.MSG.HEADER.BAT_START_OFFSET) / 4;\r\n        return Math.min(this.batCount, maxBatsInHeader);\r\n    };\r\n    Reader.prototype.batDataReader = function () {\r\n        var result = new Array(this.batCountInHeader());\r\n        this.ds.seek(const_1.default.MSG.HEADER.BAT_START_OFFSET);\r\n        for (var i = 0; i < result.length; i++) {\r\n            result[i] = this.ds.readInt32();\r\n        }\r\n        return result;\r\n    };\r\n    Reader.prototype.getBlockOffsetAt = function (offset) {\r\n        return (offset + 1) * this.bigBlockSize;\r\n    };\r\n    Reader.prototype.getBlockAt = function (offset) {\r\n        var startOffset = this.getBlockOffsetAt(offset);\r\n        this.ds.seek(startOffset);\r\n        return this.ds.readInt32Array(this.bigBlockLength);\r\n    };\r\n    Reader.prototype.getBlockValueAt = function (offset, index) {\r\n        var startOffset = this.getBlockOffsetAt(offset);\r\n        this.ds.seek(startOffset + 4 * index);\r\n        return this.ds.readInt32();\r\n    };\r\n    Reader.prototype.getNextBlockInner = function (offset, blockOffsetData) {\r\n        var currentBlock = Math.floor(offset / this.bigBlockLength);\r\n        var currentBlockIndex = offset % this.bigBlockLength;\r\n        var startBlockOffset = blockOffsetData[currentBlock];\r\n        if (typeof startBlockOffset === \"undefined\") {\r\n            return const_1.default.MSG.END_OF_CHAIN;\r\n        }\r\n        return this.getBlockValueAt(startBlockOffset, currentBlockIndex);\r\n    };\r\n    Reader.prototype.getNextBlock = function (offset) {\r\n        return this.getNextBlockInner(offset, this.batData);\r\n    };\r\n    Reader.prototype.sbatDataReader = function () {\r\n        var result = [];\r\n        var startIndex = this.sbatStart;\r\n        for (var i = 0; i < this.sbatCount && startIndex && startIndex != const_1.default.MSG.END_OF_CHAIN; i++) {\r\n            result.push(startIndex);\r\n            startIndex = this.getNextBlock(startIndex);\r\n        }\r\n        return result;\r\n    };\r\n    Reader.prototype.xbatDataReader = function () {\r\n        var batCount = this.batCountInHeader();\r\n        var batCountTotal = this.batCount;\r\n        var remainingBlocks = batCountTotal - batCount;\r\n        var nextBlockAt = this.xbatStart;\r\n        for (var i = 0; i < this.xbatCount; i++) {\r\n            var xBatBlock = this.getBlockAt(nextBlockAt);\r\n            var blocksToProcess = Math.min(remainingBlocks, this.xBlockLength);\r\n            for (var j = 0; j < blocksToProcess; j++) {\r\n                var blockStartAt = xBatBlock[j];\r\n                if (blockStartAt == const_1.default.MSG.UNUSED_BLOCK || blockStartAt == const_1.default.MSG.END_OF_CHAIN) {\r\n                    break;\r\n                }\r\n                this.batData.push(blockStartAt);\r\n            }\r\n            remainingBlocks -= blocksToProcess;\r\n            nextBlockAt = xBatBlock[this.xBlockLength];\r\n            if (nextBlockAt == const_1.default.MSG.UNUSED_BLOCK || nextBlockAt == const_1.default.MSG.END_OF_CHAIN) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    Reader.prototype.getNextBlockSmall = function (offset) {\r\n        return this.getNextBlockInner(offset, this.sbatData);\r\n    };\r\n    Reader.prototype.getChainByBlockSmall = function (fieldProperty) {\r\n        var blockChain = [];\r\n        var nextBlockSmall = fieldProperty.startBlock;\r\n        while (nextBlockSmall != const_1.default.MSG.END_OF_CHAIN) {\r\n            blockChain.push(nextBlockSmall);\r\n            nextBlockSmall = this.getNextBlockSmall(nextBlockSmall);\r\n        }\r\n        return blockChain;\r\n    };\r\n    Reader.prototype.readBigBlockTable = function () {\r\n        var rootProp = this.propertyData[0];\r\n        var table = [];\r\n        var nextBlock = rootProp.startBlock;\r\n        for (var i = 0; nextBlock != const_1.default.MSG.END_OF_CHAIN; i++) {\r\n            table.push(nextBlock);\r\n            nextBlock = this.getNextBlock(nextBlock);\r\n        }\r\n        return table;\r\n    };\r\n    Reader.prototype.readDataByBlockSmall = function (startBlock, blockSize, arr, dstOffset) {\r\n        var byteOffset = startBlock * const_1.default.MSG.SMALL_BLOCK_SIZE;\r\n        var bigBlockNumber = Math.floor(byteOffset / this.bigBlockSize);\r\n        var bigBlockOffset = byteOffset % this.bigBlockSize;\r\n        var nextBlock = this.bigBlockTable[bigBlockNumber];\r\n        var blockStartOffset = this.getBlockOffsetAt(nextBlock);\r\n        this.ds.seek(blockStartOffset + bigBlockOffset);\r\n        return this.ds.readToUint8Array(blockSize, arr, dstOffset);\r\n    };\r\n    Reader.prototype.readChainDataByBlockSmall = function (fieldProperty, chain) {\r\n        var resultData = new Uint8Array(fieldProperty.sizeBlock);\r\n        for (var i = 0, idx = 0; i < chain.length; i++) {\r\n            var readLen = (resultData.length < idx + const_1.default.MSG.SMALL_BLOCK_SIZE)\r\n                ? resultData.length - idx\r\n                : const_1.default.MSG.SMALL_BLOCK_SIZE;\r\n            this.readDataByBlockSmall(chain[i], readLen, resultData, idx);\r\n            idx += readLen;\r\n        }\r\n        return resultData;\r\n    };\r\n    Reader.prototype.readProperty = function (fieldProperty) {\r\n        if (!fieldProperty.sizeBlock) {\r\n            return new Uint8Array(0);\r\n        }\r\n        else if (fieldProperty.sizeBlock < const_1.default.MSG.BIG_BLOCK_MIN_DOC_SIZE) {\r\n            var chain = this.getChainByBlockSmall(fieldProperty);\r\n            if (chain.length == 1) {\r\n                var resultData = new Uint8Array(fieldProperty.sizeBlock);\r\n                this.readDataByBlockSmall(fieldProperty.startBlock, fieldProperty.sizeBlock, resultData, 0);\r\n                return resultData;\r\n            }\r\n            else if (chain.length > 1) {\r\n                return this.readChainDataByBlockSmall(fieldProperty, chain);\r\n            }\r\n            return new Uint8Array(0);\r\n        }\r\n        else {\r\n            var nextBlock = fieldProperty.startBlock;\r\n            var remaining = fieldProperty.sizeBlock;\r\n            var position = 0;\r\n            var resultData = new Uint8Array(fieldProperty.sizeBlock);\r\n            while (1 <= remaining) {\r\n                var blockStartOffset = this.getBlockOffsetAt(nextBlock);\r\n                this.ds.seek(blockStartOffset);\r\n                var partSize = Math.min(remaining, this.bigBlockSize);\r\n                var part = this.ds.readUint8Array(partSize);\r\n                resultData.set(part, position);\r\n                position += partSize;\r\n                remaining -= partSize;\r\n                nextBlock = this.getNextBlock(nextBlock);\r\n            }\r\n            return resultData;\r\n        }\r\n    };\r\n    /**\r\n     * Get binary from document in CFBF.\r\n     *\r\n     * @param index entry index\r\n     * @returns binary\r\n     * @internal\r\n     */\r\n    Reader.prototype.readFileOf = function (index) {\r\n        return this.readProperty(this.propertyData[index]);\r\n    };\r\n    Reader.prototype.folderOf = function (index) {\r\n        var _this = this;\r\n        var propertyData = this.propertyData;\r\n        if (!propertyData) {\r\n            return null;\r\n        }\r\n        var folder = propertyData[index];\r\n        return {\r\n            dataId: index,\r\n            name: folder.name,\r\n            fileNames: function () {\r\n                var children = folder.children;\r\n                if (children) {\r\n                    return children\r\n                        .map(function (subIndex) { return propertyData[subIndex]; })\r\n                        .filter(function (it) { return it.type === TypeEnum.DOCUMENT; })\r\n                        .map(function (it) { return it.name; });\r\n                }\r\n                return [];\r\n            },\r\n            fileNameSets: function () {\r\n                var children = folder.children;\r\n                if (children) {\r\n                    return children\r\n                        .map(function (subIndex) { return ({\r\n                        subIndex: subIndex,\r\n                        entry: propertyData[subIndex]\r\n                    }); })\r\n                        .filter(function (it) { return it.entry.type === TypeEnum.DOCUMENT; })\r\n                        .map(function (it) { return ({\r\n                        name: it.entry.name,\r\n                        length: it.entry.sizeBlock,\r\n                        dataId: it.subIndex,\r\n                        provider: function () { return _this.readProperty(it.entry); },\r\n                    }); });\r\n                }\r\n                return [];\r\n            },\r\n            subFolders: function () {\r\n                var children = folder.children;\r\n                if (children) {\r\n                    return children\r\n                        .filter(function (subIndex) { return propertyData[subIndex].type == TypeEnum.DIRECTORY; })\r\n                        .map(function (subIndex) { return _this.folderOf(subIndex); });\r\n                }\r\n                return [];\r\n            },\r\n            readFile: function (fileName) {\r\n                var children = folder.children;\r\n                if (children) {\r\n                    for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\r\n                        var subIndex = children_1[_i];\r\n                        var file = propertyData[subIndex];\r\n                        if (file && file.type === TypeEnum.DOCUMENT && file.name === fileName) {\r\n                            return _this.readProperty(file);\r\n                        }\r\n                    }\r\n                }\r\n                return null;\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Get reader access to CFBF (valid after successful call of {@link parse}).\r\n     *\r\n     * @returns root folder\r\n     */\r\n    Reader.prototype.rootFolder = function () {\r\n        return this.folderOf(0);\r\n    };\r\n    return Reader;\r\n}());\r\nexports.Reader = Reader;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parse = void 0;\r\nvar utils_1 = require(\"./utils\");\r\nvar TZDEFINITION_FLAG_VALID_GUID = 1;\r\nvar TZDEFINITION_FLAG_VALID_KEYNAME = 2;\r\nvar TZRULE_FLAG_EFFECTIVE_TZREG = 2;\r\nvar TZRULE_FLAG_RECUR_CURRENT_TZREG = 1;\r\n/**\r\n * @internal\r\n */\r\nfunction parse(ds) {\r\n    // About persisting TZDEFINITION to a stream to commit to a binary property\r\n    // https://learn.microsoft.com/en-us/office/client-developer/outlook/auxiliary/about-persisting-tzdefinition-to-a-stream-to-commit-to-a-binary-property?redirectedfrom=MSDN\r\n    var tz = { rules: [] };\r\n    if (!ds.isEof()) {\r\n        var bMajorVersion = ds.readUint8();\r\n        if (bMajorVersion !== 2) {\r\n            throw new Error(\"TZDEFINITION major version not supported\");\r\n        }\r\n        var bMinorVersion = ds.readUint8();\r\n        if (bMajorVersion < 1) {\r\n            throw new Error(\"TZDEFINITION minor version not supported\");\r\n        }\r\n        var cbHeader = ds.readUint16();\r\n        var wFlags = ds.readUint16();\r\n        if (wFlags & TZDEFINITION_FLAG_VALID_GUID) {\r\n            ds.readInt32();\r\n            ds.readInt32();\r\n            ds.readInt32();\r\n            ds.readInt32();\r\n        }\r\n        if (wFlags & TZDEFINITION_FLAG_VALID_KEYNAME) {\r\n            var cchKeyName = ds.readUint16();\r\n            tz.keyName = ds.readUCS2String(cchKeyName);\r\n        }\r\n        var cRules = ds.readUint16();\r\n        ds.seek(4 + cbHeader);\r\n        for (var x = 0; x < cRules; x++) {\r\n            var bMajorVersion_1 = ds.readUint8();\r\n            if (bMajorVersion_1 !== 2) {\r\n                break;\r\n            }\r\n            var bMinorVersion_1 = ds.readUint8();\r\n            if (bMajorVersion_1 < 1) {\r\n                break;\r\n            }\r\n            var cbRule = ds.readUint16();\r\n            var basePos = ds.position;\r\n            var wFlags_1 = ds.readUint16();\r\n            var stStart = (0, utils_1.readSystemTime)(ds);\r\n            var lBias = ds.readInt32();\r\n            var lStandardBias = ds.readInt32();\r\n            var lDaylightBias = ds.readInt32();\r\n            var stStandardDate = (0, utils_1.readTransitionSystemTime)(ds);\r\n            var stDaylightDate = (0, utils_1.readTransitionSystemTime)(ds);\r\n            var rule = Object.assign({}, {\r\n                flags: wFlags_1,\r\n                start: (stStart === null || stStart === void 0 ? void 0 : stStart.toUTCString()) || null,\r\n                bias: lBias,\r\n                standardBias: lStandardBias,\r\n                daylightBias: lDaylightBias,\r\n                standardDate: stStandardDate,\r\n                daylightDate: stDaylightDate,\r\n            });\r\n            tz.rules.push(rule);\r\n            ds.seek(basePos + cbRule);\r\n        }\r\n    }\r\n    return tz;\r\n}\r\nexports.parse = parse;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parse = void 0;\r\nvar utils_1 = require(\"./utils\");\r\n/**\r\n * @internal\r\n */\r\nfunction parse(ds) {\r\n    // PidLidTimeZoneStruct Canonical Property\r\n    // https://learn.microsoft.com/en-us/office/client-developer/outlook/mapi/pidlidtimezonestruct-canonical-property\r\n    if (!ds.isEof()) {\r\n        var lBias = ds.readInt32();\r\n        var lStandardBias = ds.readInt32();\r\n        var lDaylightBias = ds.readInt32();\r\n        var wStandardYear = ds.readUint16();\r\n        var stStandardDate = (0, utils_1.readTransitionSystemTime)(ds);\r\n        var wDaylightYear = ds.readUint16();\r\n        var stDaylightDate = (0, utils_1.readTransitionSystemTime)(ds);\r\n        return Object.assign({}, {\r\n            bias: lBias,\r\n            standardBias: lStandardBias,\r\n            daylightBias: lDaylightBias,\r\n            standardYear: wStandardYear,\r\n            standardDate: stStandardDate,\r\n            daylightYear: wDaylightYear,\r\n            daylightDate: stDaylightDate,\r\n        });\r\n    }\r\n    return null;\r\n}\r\nexports.parse = parse;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parse = void 0;\r\n/**\r\n * @internal\r\n */\r\nfunction parse(ds) {\r\n    // 2.2.1.74.1 VoteOption Structure\r\n    // https://docs.microsoft.com/en-us/openspecs/exchange_server_protocols/ms-oxomsg/87488eff-3eec-4502-bc94-2368c04e3109\r\n    var items = [];\r\n    var count = 0;\r\n    while (!ds.isEof()) {\r\n        var version = ds.readUint16();\r\n        if (version === 258) {\r\n            count = ds.readUint16();\r\n            var dummy1 = ds.readUint16();\r\n            for (var index = 0; index < count; index += 1) {\r\n                var VerbType = ds.readInt32();\r\n                var DisplayNameCount = ds.readUint8();\r\n                var DisplayName = ds.readString(DisplayNameCount);\r\n                var MsgClsNameCount = ds.readUint8();\r\n                var MsgClsName = ds.readString(MsgClsNameCount);\r\n                var Internal1StringCount = ds.readUint8();\r\n                var Internal1String = ds.readString(Internal1StringCount);\r\n                var DisplayNameCountRepeat = ds.readUint8();\r\n                var DisplayNameRepeat = ds.readString(DisplayNameCountRepeat);\r\n                var Internal2 = ds.readInt32();\r\n                var Internal3 = ds.readUint8();\r\n                var fUseUSHeaders = ds.readInt32();\r\n                var Internal4 = ds.readInt32();\r\n                var SendBehavior = ds.readInt32();\r\n                var Internal5 = ds.readInt32();\r\n                var ID = ds.readInt32();\r\n                var Internal6 = ds.readInt32();\r\n                items.push({ VerbType: VerbType, DisplayName: DisplayName });\r\n            }\r\n        }\r\n        else if (version === 260) {\r\n            for (var index = 0; index < count; index += 1) {\r\n                var DisplayNameCount = ds.readUint8();\r\n                var DisplayName = ds.readUCS2String(DisplayNameCount);\r\n                var DisplayNameCountRepeat = ds.readUint8();\r\n                var DisplayNameRepeat = ds.readUCS2String(DisplayNameCountRepeat);\r\n                items[index].DisplayName = DisplayName;\r\n            }\r\n        }\r\n    }\r\n    return items\r\n        .filter(function (it) { return it.VerbType === 4; })\r\n        .map(function (it) { return it.DisplayName; })\r\n        .join(\";\");\r\n}\r\nexports.parse = parse;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = require(\"./utils\");\r\nexports.default = {\r\n    FILE_HEADER: (0, utils_1.uInt2int)([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1]),\r\n    MSG: {\r\n        UNUSED_BLOCK: -1,\r\n        END_OF_CHAIN: -2,\r\n        S_BIG_BLOCK_SIZE: 0x0200,\r\n        S_BIG_BLOCK_MARK: 9,\r\n        L_BIG_BLOCK_SIZE: 0x1000,\r\n        L_BIG_BLOCK_MARK: 12,\r\n        SMALL_BLOCK_SIZE: 0x0040,\r\n        BIG_BLOCK_MIN_DOC_SIZE: 0x1000,\r\n        HEADER: {\r\n            PROPERTY_START_OFFSET: 0x30,\r\n            BAT_START_OFFSET: 0x4c,\r\n            BAT_COUNT_OFFSET: 0x2C,\r\n            SBAT_START_OFFSET: 0x3C,\r\n            SBAT_COUNT_OFFSET: 0x40,\r\n            XBAT_START_OFFSET: 0x44,\r\n            XBAT_COUNT_OFFSET: 0x48\r\n        },\r\n        PROP: {\r\n            NO_INDEX: -1,\r\n            PROPERTY_SIZE: 0x0080,\r\n            NAME_SIZE_OFFSET: 0x40,\r\n            MAX_NAME_LENGTH: ( /*NAME_SIZE_OFFSET*/0x40 / 2) - 1,\r\n            TYPE_OFFSET: 0x42,\r\n            PREVIOUS_PROPERTY_OFFSET: 0x44,\r\n            NEXT_PROPERTY_OFFSET: 0x48,\r\n            CHILD_PROPERTY_OFFSET: 0x4C,\r\n            START_BLOCK_OFFSET: 0x74,\r\n            SIZE_OFFSET: 0x78,\r\n            TYPE_ENUM: {\r\n                DIRECTORY: 1,\r\n                DOCUMENT: 2,\r\n                ROOT: 5\r\n            }\r\n        },\r\n        FIELD: {\r\n            PREFIX: {\r\n                ATTACHMENT: '__attach_version1.0',\r\n                RECIPIENT: '__recip_version1.0',\r\n                DOCUMENT: '__substg1.',\r\n                NAMEID: '__nameid_version1.0'\r\n            },\r\n            // example (use fields as needed)\r\n            NAME_MAPPING: {\r\n                // email specific\r\n                '001a': 'messageClass',\r\n                '0037': 'subject',\r\n                '0c1a': 'senderName',\r\n                '0c1e': 'senderAddressType',\r\n                '0c1f': 'senderEmail',\r\n                '5d01': 'senderSmtpAddress',\r\n                '5d02': 'sentRepresentingSmtpAddress',\r\n                '5d0a': 'creatorSMTPAddress',\r\n                '5d0b': 'lastModifierSMTPAddress',\r\n                '1000': 'body',\r\n                '007d': 'headers',\r\n                '1009': 'compressedRtf',\r\n                '3ffa': 'lastModifierName',\r\n                '0039': 'clientSubmitTime',\r\n                '0e06': 'messageDeliveryTime',\r\n                '3fde': 'internetCodepage',\r\n                '3ffd': 'messageCodepage',\r\n                '3ff1': 'messageLocaleId',\r\n                '0e07': 'messageFlags',\r\n                // attachment specific\r\n                '3007': 'creationTime',\r\n                '3008': 'lastModificationTime',\r\n                '3703': 'extension',\r\n                '3704': 'fileNameShort',\r\n                '3707': 'fileName',\r\n                '3712': 'pidContentId',\r\n                '7ffe': 'attachmentHidden',\r\n                // recipient specific\r\n                '0c15': 'recipType',\r\n                '3001': 'name',\r\n                '3002': 'addressType',\r\n                '3003': 'email',\r\n                '39fe': 'smtpAddress',\r\n                // contact specific\r\n                '3a18': 'departmentName',\r\n                '3a44': 'middleName',\r\n                '3a05': 'generation',\r\n                '3a11': 'surname',\r\n                '3a27': 'addressCity',\r\n                '3a16': 'companyName',\r\n                '3a24': 'businessFaxNumber',\r\n                '3a29': 'streetAddress',\r\n                '3a51': 'businessHomePage',\r\n                '3a06': 'givenName',\r\n                '3a09': 'homeTelephoneNumber',\r\n                '3a15': 'postalAddress',\r\n                '3a17': 'title',\r\n                '3a1c': 'mobileTelephoneNumber',\r\n                '3a26': 'country',\r\n                '3a28': 'stateOrProvince',\r\n                '3a2a': 'postalCode',\r\n                '3a45': 'displayNamePrefix',\r\n                '0070': 'conversationTopic',\r\n                '0e1d': 'normalizedSubject',\r\n                '3a08': 'businessTelephoneNumber',\r\n                '3a0d': 'location',\r\n            },\r\n            FULL_NAME_MAPPING: {\r\n                '1013001f': 'bodyHtml',\r\n                '10130102': 'html',\r\n            },\r\n            PIDLID_MAPPING: {\r\n                // PSETID_Common\r\n                \"00062008-0000-0000-c000-000000000046\": {\r\n                    0x00008520: { id: \"PidLidVerbStream\", },\r\n                    0x00008524: { id: \"PidLidVerbResponse\", dispid: \"votingResponse\", },\r\n                    0x00008580: { id: \"PidLidInternetAccountName\", dispid: \"inetAcctName\", },\r\n                },\r\n                // PSETID_Appointment\r\n                \"00062002-0000-0000-c000-000000000046\": {\r\n                    0x0000820D: { id: \"PidLidAppointmentStartWhole\", dispid: \"apptStartWhole\", },\r\n                    0x0000820E: { id: \"PidLidAppointmentEndWhole\", dispid: \"apptEndWhole\", },\r\n                    0x00008235: { id: \"PidLidClipStart\", dispid: \"clipStart\", },\r\n                    0x00008236: { id: \"PidLidClipEnd\", dispid: \"clipEnd\", },\r\n                    0x00008233: { id: \"PidLidTimeZoneStruct\", dispid: \"timeZoneStruct\" },\r\n                    0x00008234: { id: \"PidLidTimeZoneDescription\", dispid: \"timeZoneDesc\" },\r\n                    0x0000825E: { id: \"PidLidAppointmentTimeZoneDefinitionStartDisplay\", dispid: \"apptTZDefStartDisplay\" },\r\n                    0x0000825F: { id: \"PidLidAppointmentTimeZoneDefinitionEndDisplay\", dispid: \"apptTZDefEndDisplay\" },\r\n                    0x00008260: { id: \"PidLidAppointmentTimeZoneDefinitionRecur\", dispid: \"apptTZDefRecur\" },\r\n                    0x00008216: { id: \"PidLidAppointmentRecur\", dispid: \"apptRecur\" },\r\n                },\r\n                // PSETID_Address\r\n                \"00062004-0000-0000-c000-000000000046\": {\r\n                    0x0000802c: { id: \"dispidYomiFirstName\", dispid: \"yomiFirstName\", },\r\n                    0x00008083: { id: \"dispidEmail1EmailAddress\", dispid: \"email1EmailAddress\", },\r\n                    0x0000802e: { id: \"dispidYomiCompanyName\", dispid: \"yomiCompanyName\", },\r\n                    0x000080d2: { id: \"PidLidFax3AddressType\", dispid: \"fax3AddrType\", },\r\n                    0x00008080: { id: \"PidLidEmail1DisplayName\", dispid: \"email1DisplayName\", },\r\n                    0x00008084: { id: \"PidLidEmail1OriginalDisplayName\", dispid: \"email1OriginalDisplayName\", },\r\n                    0x00008005: { id: \"PidLidFileUnder\", dispid: \"fileUnder\", },\r\n                    0x0000802d: { id: \"PidLidYomiLastName\", dispid: \"yomiLastName\", },\r\n                    0x000080b2: { id: \"PidLidFax1AddressType\", dispid: \"fax1AddrType\", },\r\n                    0x000080c3: { id: \"PidLidFax2EmailAddress\", dispid: \"fax2EmailAddress\", },\r\n                    0x00008046: { id: \"PidLidWorkAddressCity\", dispid: \"workAddressCity\", },\r\n                    0x000080dd: { id: \"PidLidAddressCountryCode\", dispid: \"addressCountryCode\", },\r\n                    0x000080c2: { id: \"PidLidFax2AddressType\", dispid: \"fax2AddrType\", },\r\n                    0x000080c4: { id: \"PidLidFax2OriginalDisplayName\", dispid: \"fax2OriginalDisplayName\", },\r\n                    0x00008048: { id: \"PidLidWorkAddressPostalCode\", dispid: \"workAddressPostalCode\", },\r\n                    0x00008045: { id: \"PidLidWorkAddressStreet\", dispid: \"workAddressStreet\", },\r\n                    0x00008047: { id: \"PidLidWorkAddressState\", dispid: \"workAddressState\", },\r\n                    0x000080db: { id: \"PidLidWorkAddressCountryCode\", dispid: \"workAddressCountryCode\", },\r\n                    0x00008049: { id: \"PidLidWorkAddressCountry\", dispid: \"workAddressCountry\", },\r\n                    0x0000802b: { id: \"PidLidHtml\", dispid: \"contactHtml\", },\r\n                    0x0000801b: { id: \"PidLidWorkAddress\", dispid: \"workAddress\", },\r\n                    0x000080b4: { id: \"PidLidFax1OriginalDisplayName\", dispid: \"fax1OriginalDisplayName\", },\r\n                    0x00008062: { id: \"PidLidInstantMessagingAddress\", dispid: \"instMsg\", },\r\n                    0x00008010: { id: \"PidLidDepartment\", dispid: \"department\", },\r\n                    0x000080b3: { id: \"PidLidFax1EmailAddress\", dispid: \"fax1EmailAddress\", },\r\n                    0x000080d4: { id: \"PidLidFax3OriginalDisplayName\", dispid: \"fax3OriginalDisplayName\", },\r\n                    0x000080d3: { id: \"PidLidFax3EmailAddress\", dispid: \"fax3EmailAddress\", },\r\n                },\r\n                // PSETID_Meeting\r\n                \"6ed8da90-450b-101b-98da-00aa003f1305\": {}\r\n            },\r\n            CLASS_MAPPING: {\r\n                ATTACHMENT_DATA: '3701'\r\n            },\r\n            TYPE_MAPPING: {\r\n                '001e': 'string',\r\n                '001f': 'unicode',\r\n                '0040': 'time',\r\n                '0102': 'binary',\r\n                '0003': 'integer',\r\n                '000b': 'boolean',\r\n            },\r\n            DIR_TYPE: {\r\n                INNER_MSG: '000d'\r\n            }\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MsgReader_1 = __importDefault(require(\"./MsgReader\"));\r\n__exportStar(require(\"./MsgReader\"), exports);\r\nexports.default = MsgReader_1.default;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.readTransitionSystemTime = exports.readSystemTime = exports.emptyToNull = exports.msftUuidStringify = exports.toHex4 = exports.toHex2 = exports.toHex1 = exports.toHexStr = exports.uInt2int = exports.arraysEqual = void 0;\r\n/**\r\n * @internal\r\n */\r\nfunction arraysEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    if (a == null || b == null)\r\n        return false;\r\n    if (a.length != b.length)\r\n        return false;\r\n    for (var i = 0; i < a.length; i++) {\r\n        if (a[i] !== b[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nexports.arraysEqual = arraysEqual;\r\n/**\r\n * @internal\r\n */\r\nfunction uInt2int(data) {\r\n    var result = new Array(data.length);\r\n    for (var i = 0; i < data.length; i++) {\r\n        result[i] = data[i] << 24 >> 24;\r\n    }\r\n    return result;\r\n}\r\nexports.uInt2int = uInt2int;\r\n/**\r\n * @internal\r\n */\r\nfunction toHexStr(value, padding) {\r\n    var text = \"\";\r\n    while (value != 0) {\r\n        text = \"0123456789abcdef\"[value & 15] + text;\r\n        value >>= 4;\r\n        text = \"0123456789abcdef\"[value & 15] + text;\r\n        value >>= 4;\r\n    }\r\n    while (text.length < padding) {\r\n        text = \"0\" + text;\r\n    }\r\n    return text;\r\n}\r\nexports.toHexStr = toHexStr;\r\nvar hex = \"0123456789abcdef\";\r\n/**\r\n * byte to lower case hex string\r\n *\r\n * @internal\r\n */\r\nfunction toHex1(value) {\r\n    return hex[(value >> 4) & 15]\r\n        + hex[(value) & 15];\r\n}\r\nexports.toHex1 = toHex1;\r\n/**\r\n * little uint16 to lower case hex string\r\n *\r\n * @internal\r\n */\r\nfunction toHex2(value) {\r\n    return hex[(value >> 12) & 15]\r\n        + hex[(value >> 8) & 15]\r\n        + hex[(value >> 4) & 15]\r\n        + hex[(value) & 15];\r\n}\r\nexports.toHex2 = toHex2;\r\n/**\r\n * little uint32 to lower case hex string\r\n *\r\n * @internal\r\n */\r\nfunction toHex4(value) {\r\n    return hex[(value >> 28) & 15]\r\n        + hex[(value >> 24) & 15]\r\n        + hex[(value >> 20) & 15]\r\n        + hex[(value >> 16) & 15]\r\n        + hex[(value >> 12) & 15]\r\n        + hex[(value >> 8) & 15]\r\n        + hex[(value >> 4) & 15]\r\n        + hex[(value) & 15];\r\n}\r\nexports.toHex4 = toHex4;\r\n/**\r\n * Variant 2 UUIDs, historically used in Microsoft's COM/OLE libraries,\r\n * use a mixed-endian format, whereby the first three components of the UUID are little-endian,\r\n * and the last two are big-endian.\r\n * For example, `00112233-4455-6677-8899-aabbccddeeff` is encoded as the bytes\r\n * `33 22 11 00 55 44 77 66 88 99 aa bb cc dd ee ff`.\r\n *\r\n * @see https://en.wikipedia.org/wiki/Universally_unique_identifier\r\n * @internal\r\n */\r\nfunction msftUuidStringify(array, offset) {\r\n    return \"\"\r\n        + toHex1(array[offset + 3])\r\n        + toHex1(array[offset + 2])\r\n        + toHex1(array[offset + 1])\r\n        + toHex1(array[offset + 0])\r\n        + \"-\"\r\n        + toHex1(array[offset + 5])\r\n        + toHex1(array[offset + 4])\r\n        + \"-\"\r\n        + toHex1(array[offset + 7])\r\n        + toHex1(array[offset + 6])\r\n        + \"-\"\r\n        + toHex1(array[offset + 8])\r\n        + toHex1(array[offset + 9])\r\n        + \"-\"\r\n        + toHex1(array[offset + 10])\r\n        + toHex1(array[offset + 11])\r\n        + toHex1(array[offset + 12])\r\n        + toHex1(array[offset + 13])\r\n        + toHex1(array[offset + 14])\r\n        + toHex1(array[offset + 15]);\r\n}\r\nexports.msftUuidStringify = msftUuidStringify;\r\n/**\r\n * @internal\r\n */\r\nfunction emptyToNull(text) {\r\n    return (text === \"\") ? null : text;\r\n}\r\nexports.emptyToNull = emptyToNull;\r\n/**\r\n * @internal\r\n */\r\nfunction padNumber(value, maxLen) {\r\n    return (\"\" + value).padStart(maxLen, '0');\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction readSystemTime(ds) {\r\n    // SYSTEMTIME structure (minwinbase.h)\r\n    // https://learn.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-systemtime\r\n    var wYear = ds.readUint16();\r\n    var wMonth = ds.readUint16();\r\n    var wDayOfWeek = ds.readUint16();\r\n    var wDay = ds.readUint16();\r\n    var wHour = ds.readUint16();\r\n    var wMinute = ds.readUint16();\r\n    var wSecond = ds.readUint16();\r\n    var wMilliseconds = ds.readUint16();\r\n    var text = \"\".concat(padNumber(wYear, 4), \"-\").concat(padNumber(wMonth, 2), \"-\").concat(padNumber(wDay, 2), \"T\").concat(padNumber(wHour, 2), \":\").concat(padNumber(wMinute, 2), \":\").concat(padNumber(wSecond, 2), \"Z\");\r\n    if (text === '0000-00-00T00:00:00Z') {\r\n        return null;\r\n    }\r\n    else {\r\n        return new Date(text);\r\n    }\r\n}\r\nexports.readSystemTime = readSystemTime;\r\n/**\r\n * @internal\r\n */\r\nfunction readTransitionSystemTime(ds) {\r\n    // SYSTEMTIME structure (minwinbase.h)\r\n    // https://learn.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-systemtime\r\n    var wYear = ds.readUint16();\r\n    var wMonth = ds.readUint16();\r\n    var wDayOfWeek = ds.readUint16();\r\n    var wDay = ds.readUint16();\r\n    var wHour = ds.readUint16();\r\n    var wMinute = ds.readUint16();\r\n    var wSecond = ds.readUint16();\r\n    var wMilliseconds = ds.readUint16();\r\n    return {\r\n        year: wYear,\r\n        month: wMonth,\r\n        dayOfWeek: wDayOfWeek,\r\n        day: wDay,\r\n        hour: wHour,\r\n        minute: wMinute,\r\n    };\r\n}\r\nexports.readTransitionSystemTime = readTransitionSystemTime;\r\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('buffer').Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 common decode nodes.\n        var commonThirdByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        var commonFourthByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        // Fill out the tree\n        var firstByteNode = this.decodeTables[0];\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\n            for (var j = 0x30; j <= 0x39; j++) {\n                if (secondByteNode[j] === UNASSIGNED) {\n                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n                } else if (secondByteNode[j] > NODE_START) {\n                    throw new Error(\"gb18030 decode tables conflict at byte 2\");\n                }\n\n                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\n                for (var k = 0x81; k <= 0xFE; k++) {\n                    if (thirdByteNode[k] === UNASSIGNED) {\n                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\n                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\n                        continue;\n                    } else if (thirdByteNode[k] > NODE_START) {\n                        throw new Error(\"gb18030 decode tables conflict at byte 3\");\n                    }\n\n                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\n                    for (var l = 0x30; l <= 0x39; l++) {\n                        if (fourthByteNode[l] === UNASSIGNED)\n                            fourthByteNode[l] = GB18030_CODE;\n                    }\n                }\n            }\n        }\n    }\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    var hasValues = false;\n    var subNodeEmpty = {};\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0) {\n            this._setEncodeChar(uCode, mbCode);\n            hasValues = true;\n        } else if (uCode <= NODE_START) {\n            var subNodeIdx = NODE_START - uCode;\n            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).\n                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.\n                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))\n                    hasValues = true;\n                else\n                    subNodeEmpty[subNodeIdx] = true;\n            }\n        } else if (uCode <= SEQ_START) {\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n            hasValues = true;\n        }\n    }\n    return hasValues;\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else if (dbcsCode < 0x1000000) {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        } else {\n            newBuf[j++] = dbcsCode >>> 24;\n            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;\n            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBytes = [];\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,\n        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n        }\n        else if (uCode === GB18030_CODE) {\n            if (i >= 3) {\n                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);\n            } else {\n                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + \n                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + \n                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + \n                          (curByte-0x30);\n            }\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode >= 0x10000) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 | (uCode >> 10);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 | (uCode & 0x3FF);\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBytes = (seqStart >= 0)\n        ? Array.prototype.slice.call(buf, seqStart)\n        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBytes.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var bytesArr = this.prevBytes.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBytes = [];\n        this.nodeIdx = 0;\n        if (bytesArr.length > 0)\n            ret += this.write(bytesArr);\n    }\n\n    this.prevBytes = [];\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + ((r-l+1) >> 1);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [\n            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of\n            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.\n            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.\n            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,\n            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,\n            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,\n            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,\n            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,\n\n            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345\n            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,\n        ],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf32\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it.\nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function(buf) {\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n\n    return this.decoder.write(buf);\n}\n\nInternalDecoder.prototype.end = function() {\n    return this.decoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    \"cp720\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\\x80\\x81éâ\\x84à\\x86çêëèïî\\x8d\\x8e\\x8f\\x90\\u0651\\u0652ô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650≈°∙·√ⁿ²■\\u00a0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n    this.overflowByte = -1;\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n        \n        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 2) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\n                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\n                }\n\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n    // So, we count ASCII as if it was LE or BE, and decide from that.\n    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\n    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-16le';\n}\n\n\n","'use strict';\n\nvar Buffer = require('safer-buffer').Buffer;\n\n// == UTF32-LE/BE codec. ==========================================================\n\nexports._utf32 = Utf32Codec;\n\nfunction Utf32Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n    this.bomAware = true;\n    this.isLE = codecOptions.isLE;\n}\n\nexports.utf32le = { type: '_utf32', isLE: true };\nexports.utf32be = { type: '_utf32', isLE: false };\n\n// Aliases\nexports.ucs4le = 'utf32le';\nexports.ucs4be = 'utf32be';\n\nUtf32Codec.prototype.encoder = Utf32Encoder;\nUtf32Codec.prototype.decoder = Utf32Decoder;\n\n// -- Encoding\n\nfunction Utf32Encoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.highSurrogate = 0;\n}\n\nUtf32Encoder.prototype.write = function(str) {\n    var src = Buffer.from(str, 'ucs2');\n    var dst = Buffer.alloc(src.length * 2);\n    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\n    var offset = 0;\n\n    for (var i = 0; i < src.length; i += 2) {\n        var code = src.readUInt16LE(i);\n        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);\n        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);\n\n        if (this.highSurrogate) {\n            if (isHighSurrogate || !isLowSurrogate) {\n                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\n                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\n                // (technically wrong, but expected by some applications, like Windows file names).\n                write32.call(dst, this.highSurrogate, offset);\n                offset += 4;\n            }\n            else {\n                // Create 32-bit value from high and low surrogates;\n                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;\n\n                write32.call(dst, codepoint, offset);\n                offset += 4;\n                this.highSurrogate = 0;\n\n                continue;\n            }\n        }\n\n        if (isHighSurrogate)\n            this.highSurrogate = code;\n        else {\n            // Even if the current character is a low surrogate, with no previous high surrogate, we'll\n            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\n            // unpaired high surrogates.\n            write32.call(dst, code, offset);\n            offset += 4;\n            this.highSurrogate = 0;\n        }\n    }\n\n    if (offset < dst.length)\n        dst = dst.slice(0, offset);\n\n    return dst;\n};\n\nUtf32Encoder.prototype.end = function() {\n    // Treat any leftover high surrogate as a semi-valid independent character.\n    if (!this.highSurrogate)\n        return;\n\n    var buf = Buffer.alloc(4);\n\n    if (this.isLE)\n        buf.writeUInt32LE(this.highSurrogate, 0);\n    else\n        buf.writeUInt32BE(this.highSurrogate, 0);\n\n    this.highSurrogate = 0;\n\n    return buf;\n};\n\n// -- Decoding\n\nfunction Utf32Decoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\n    this.overflow = [];\n}\n\nUtf32Decoder.prototype.write = function(src) {\n    if (src.length === 0)\n        return '';\n\n    var i = 0;\n    var codepoint = 0;\n    var dst = Buffer.alloc(src.length + 4);\n    var offset = 0;\n    var isLE = this.isLE;\n    var overflow = this.overflow;\n    var badChar = this.badChar;\n\n    if (overflow.length > 0) {\n        for (; i < src.length && overflow.length < 4; i++)\n            overflow.push(src[i]);\n        \n        if (overflow.length === 4) {\n            // NOTE: codepoint is a signed int32 and can be negative.\n            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\n            if (isLE) {\n                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);\n            } else {\n                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);\n            }\n            overflow.length = 0;\n\n            offset = _writeCodepoint(dst, offset, codepoint, badChar);\n        }\n    }\n\n    // Main loop. Should be as optimized as possible.\n    for (; i < src.length - 3; i += 4) {\n        // NOTE: codepoint is a signed int32 and can be negative.\n        if (isLE) {\n            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);\n        } else {\n            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);\n        }\n        offset = _writeCodepoint(dst, offset, codepoint, badChar);\n    }\n\n    // Keep overflowing bytes.\n    for (; i < src.length; i++) {\n        overflow.push(src[i]);\n    }\n\n    return dst.slice(0, offset).toString('ucs2');\n};\n\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\n    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\n    if (codepoint < 0 || codepoint > 0x10FFFF) {\n        // Not a valid Unicode codepoint\n        codepoint = badChar;\n    } \n\n    // Ephemeral Planes: Write high surrogate.\n    if (codepoint >= 0x10000) {\n        codepoint -= 0x10000;\n\n        var high = 0xD800 | (codepoint >> 10);\n        dst[offset++] = high & 0xff;\n        dst[offset++] = high >> 8;\n\n        // Low surrogate is written below.\n        var codepoint = 0xDC00 | (codepoint & 0x3FF);\n    }\n\n    // Write BMP char or low surrogate.\n    dst[offset++] = codepoint & 0xff;\n    dst[offset++] = codepoint >> 8;\n\n    return offset;\n};\n\nUtf32Decoder.prototype.end = function() {\n    this.overflow.length = 0;\n};\n\n// == UTF-32 Auto codec =============================================================\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\n\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\n\nexports.utf32 = Utf32AutoCodec;\nexports.ucs4 = 'utf32';\n\nfunction Utf32AutoCodec(options, iconv) {\n    this.iconv = iconv;\n}\n\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder;\n\n// -- Encoding\n\nfunction Utf32AutoEncoder(options, codec) {\n    options = options || {};\n\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n\n    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\n}\n\nUtf32AutoEncoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n};\n\nUtf32AutoEncoder.prototype.end = function() {\n    return this.encoder.end();\n};\n\n// -- Decoding\n\nfunction Utf32AutoDecoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf32AutoDecoder.prototype.write = function(buf) {\n    if (!this.decoder) { \n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n\n        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n};\n\nUtf32AutoDecoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.\n    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 4) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\n                        return 'utf-32le';\n                    }\n                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\n                        return 'utf-32be';\n                    }\n                }\n\n                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\n                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\n\n                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\n                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';\n    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-32le';\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n    if (iconv.supportsStreams)\n        return;\n\n    // Dependency-inject stream module to create IconvLite stream classes.\n    var streams = require(\"./streams\")(stream_module);\n\n    // Not public API yet, but expose the stream classes.\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n    // Streaming API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n}\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar stream_module;\ntry {\n    stream_module = require(\"stream\");\n} catch (e) {}\n\nif (stream_module && stream_module.Transform) {\n    iconv.enableStreamingAPI(stream_module);\n\n} else {\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n    iconv.encodeStream = iconv.decodeStream = function() {\n        throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n    };\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function(stream_module) {\n    var Transform = stream_module.Transform;\n\n    // == Encoder stream =======================================================\n\n    function IconvLiteEncoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n        Transform.call(this, options);\n    }\n\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteEncoderStream }\n    });\n\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (typeof chunk != 'string')\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\n        var chunks = [];\n        this.on('error', cb);\n        this.on('data', function(chunk) { chunks.push(chunk); });\n        this.on('end', function() {\n            cb(null, Buffer.concat(chunks));\n        });\n        return this;\n    }\n\n\n    // == Decoder stream =======================================================\n\n    function IconvLiteDecoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.encoding = this.encoding = 'utf8'; // We output strings.\n        Transform.call(this, options);\n    }\n\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteDecoderStream }\n    });\n\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res, this.encoding);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res, this.encoding);                \n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\n        var res = '';\n        this.on('error', cb);\n        this.on('data', function(chunk) { res += chunk; });\n        this.on('end', function() {\n            cb(null, res);\n        });\n        return this;\n    }\n\n    return {\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\n    };\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ProcessTokens = exports.procTokensDefaultOptions = void 0;\r\nconst stream_1 = require(\"stream\");\r\nconst decode_1 = require(\"./decode\");\r\nconst utils_1 = require(\"./utils\");\r\nconst defaultStringDecoder = (buf, enc) => buf.toString(enc);\r\nconst defaultStringEncoder = (str, enc) => Buffer.from(str, enc);\r\nexports.procTokensDefaultOptions = {\r\n    decode: defaultStringDecoder,\r\n    encode: defaultStringEncoder,\r\n    outputMode: 'string',\r\n    replaceSymbolFontChars: false,\r\n    warn: console.warn\r\n};\r\nconst knownSymbolFontNames = {\r\n    Wingdings: true,\r\n    'Wingdings 2': true,\r\n    'Wingdings 3': true,\r\n    Webdings: true,\r\n    Symbol: true,\r\n};\r\nfunction isKnownSymbolFont(thisFont) {\r\n    return !!thisFont && (thisFont.fcharsetCpg === 42\r\n        || thisFont.cpg === 42\r\n        || knownSymbolFontNames[thisFont.fontName || ''] === true);\r\n}\r\nclass ProcessTokens extends stream_1.Transform {\r\n    constructor(options) {\r\n        super({ writableObjectMode: true, readableObjectMode: true });\r\n        this._rootState = { uc: 1, groupDepth: 0, destDepth: 0, destGroupDepth: 0 };\r\n        this._state = this._rootState;\r\n        this._cpg = 1252;\r\n        this._count = 0;\r\n        this._lastLastToken = null;\r\n        this._lastToken = null;\r\n        this._currToken = null;\r\n        this._done = false;\r\n        this._ansicpg = false;\r\n        this._skip = 0;\r\n        this._options = Object.assign(Object.assign({}, exports.procTokensDefaultOptions), options);\r\n        this._pushOutput = this._pushOutput.bind(this);\r\n    }\r\n    get defaultCodepage() {\r\n        return this._cpg;\r\n    }\r\n    _getOutputAsString(data, font) {\r\n        let outStr;\r\n        let areSymbolFontCodepoints = false;\r\n        if (font && isKnownSymbolFont(font)) {\r\n            const chunks = [];\r\n            if (utils_1.isStr(data)) {\r\n                for (const c of data) {\r\n                    const codepoint = c.codePointAt(0);\r\n                    if ((codepoint >= 0 && codepoint <= 0xFF) || (codepoint >= 0xF000 && codepoint <= 0xF0FF)) {\r\n                        chunks.push(String.fromCodePoint(codepoint % 0xF000));\r\n                    }\r\n                    else {\r\n                        chunks.push(String.fromCodePoint(codepoint));\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                chunks.push(data.toString('latin1'));\r\n            }\r\n            const str1 = chunks.join('');\r\n            const fontname = font.fontName;\r\n            if (fontname\r\n                && (this._options.replaceSymbolFontChars === true\r\n                    || (this._options.replaceSymbolFontChars && this._options.replaceSymbolFontChars[fontname]))) {\r\n                const str2 = decode_1.recodeSymbolFontText(str1, fontname, 'keep');\r\n                outStr = str2 || '';\r\n            }\r\n            else {\r\n                outStr = str1;\r\n                areSymbolFontCodepoints = true;\r\n            }\r\n        }\r\n        else if (utils_1.isStr(data)) {\r\n            outStr = data;\r\n        }\r\n        else {\r\n            const cpg = font\r\n                ? font.cpg || font.fcharsetCpg || this._cpg\r\n                : this._cpg;\r\n            if (cpg === 20127 || cpg === 65001) {\r\n                outStr = data.toString('utf8');\r\n            }\r\n            else if (cpg === 1200) {\r\n                throw new Error('Decoding 1200');\r\n                outStr = data.toString('utf16le');\r\n            }\r\n            else if (cpg) {\r\n                outStr = this._options.decode(data, 'cp' + cpg);\r\n            }\r\n            else {\r\n                console.log('HELP1!');\r\n                throw new Error('text with no codepage');\r\n            }\r\n        }\r\n        return [outStr, areSymbolFontCodepoints];\r\n    }\r\n    _pushOutputData(outStr, areSymbolFontCodepoints) {\r\n        if (this._options.outputMode === 'buffer-utf8') {\r\n            this.push(Buffer.from(outStr, 'utf8'));\r\n        }\r\n        else if (this._options.outputMode === 'buffer-default-cpg' && this._options.encode) {\r\n            if (this._cpg === 20127 || this._cpg === 65001) {\r\n                this.push(Buffer.from(outStr, 'utf8'));\r\n            }\r\n            else if (this._cpg === 1200) {\r\n                this.push(Buffer.from(outStr, 'utf16le'));\r\n            }\r\n            else if (areSymbolFontCodepoints) {\r\n                const bytes = [];\r\n                for (const c of outStr) {\r\n                    const codepoint = c.charCodeAt(0);\r\n                    if (codepoint > 0xFF) {\r\n                        bytes.push(0x20);\r\n                    }\r\n                    else {\r\n                        bytes.push(codepoint);\r\n                    }\r\n                }\r\n                this.push(Buffer.from(bytes));\r\n            }\r\n            else {\r\n                try {\r\n                    const buf = this._options.encode(outStr, 'cp' + this._cpg);\r\n                    this.push(buf);\r\n                }\r\n                catch (err) {\r\n                    this._options.warn('Unable to encode to cp' + this._cpg);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.push(outStr);\r\n        }\r\n    }\r\n    _getCurrentFont() {\r\n        const state = this._state;\r\n        const f = state.font || this._deff || '';\r\n        const finfo = this._fonttbl && this._fonttbl[f];\r\n        return finfo;\r\n    }\r\n    _pushOutput(data) {\r\n        for (const feature of this._featureHandlers) {\r\n            if (feature.outputDataFilter) {\r\n                const handled = feature.outputDataFilter(this, data);\r\n                if (handled) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const font = this._getCurrentFont();\r\n        const [outStr, areSymbolFontCodepoints] = this._getOutputAsString(data, font);\r\n        this._pushOutputData(outStr, areSymbolFontCodepoints);\r\n    }\r\n    _handleToken(token) {\r\n        try {\r\n            for (const feature of this._featureHandlers) {\r\n                if (feature.allTokenHandler) {\r\n                    const result = feature.allTokenHandler(this, token);\r\n                    if (result) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            for (const feature of this._featureHandlers) {\r\n                if (feature.tokenHandlers) {\r\n                    const tokenHandler = feature.tokenHandlers[token.type];\r\n                    if (tokenHandler) {\r\n                        const result = tokenHandler(this, token);\r\n                        if (result) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (token.type === 2) {\r\n                for (const feature of this._featureHandlers) {\r\n                    if (feature.controlHandlers && feature.controlHandlers[token.word]) {\r\n                        const result = feature.controlHandlers[token.word](this, token);\r\n                        if (result) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            return err;\r\n        }\r\n    }\r\n    _transform(token, encoding, cb) {\r\n        const error = this._handleToken(token);\r\n        cb(error);\r\n    }\r\n    _flush(cb) {\r\n        let error;\r\n        try {\r\n            for (const feature of this._featureHandlers) {\r\n                if (feature.preStreamFlushHandler) {\r\n                    feature.preStreamFlushHandler(this);\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            error = err;\r\n        }\r\n        cb(error);\r\n    }\r\n}\r\nexports.ProcessTokens = ProcessTokens;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DeEncapsulate = void 0;\r\nconst checkVersion_1 = require(\"./features/checkVersion\");\r\nconst countTokens_1 = require(\"./features/countTokens\");\r\nconst handleCharacterSet_1 = require(\"./features/handleCharacterSet\");\r\nconst handleControlsAndDestinations_1 = require(\"./features/handleControlsAndDestinations\");\r\nconst handleDeEncapsulation_1 = require(\"./features/handleDeEncapsulation\");\r\nconst handleFonts_1 = require(\"./features/handleFonts\");\r\nconst handleGroupState_1 = require(\"./features/handleGroupState\");\r\nconst handleOutput_1 = require(\"./features/handleOutput\");\r\nconst handleUnicodeSkip_1 = require(\"./features/handleUnicodeSkip\");\r\nconst textEscapes_1 = require(\"./features/textEscapes\");\r\nconst ProcessTokens_1 = require(\"./ProcessTokens\");\r\nconst deEncExtraDefaultOptions = {\r\n    htmlEncodeNonAscii: false,\r\n    htmlFixContentType: false,\r\n    htmlPreserveSpaces: false,\r\n    mode: 'either',\r\n    prefix: false,\r\n    outlookQuirksMode: false,\r\n};\r\nfunction htmlEntityEncode(str) {\r\n    const pieces = [];\r\n    let ascii = true;\r\n    for (const char of str) {\r\n        const codepoint = char.codePointAt(0);\r\n        if (codepoint === 0xA0) {\r\n            ascii = false;\r\n            pieces.push('&nbsp;');\r\n        }\r\n        else if (codepoint > 0x7F) {\r\n            ascii = false;\r\n            pieces.push('&#x' + codepoint.toString(16) + ';');\r\n        }\r\n        else {\r\n            pieces.push(char);\r\n        }\r\n    }\r\n    const out = ascii ? str : pieces.join('');\r\n    return out;\r\n}\r\nconst rxCharset = /(\\bcharset=)([\\w-]+)(\")/i;\r\nclass DeEncapsulate extends ProcessTokens_1.ProcessTokens {\r\n    constructor(options) {\r\n        super(options);\r\n        this._featureHandlers = [\r\n            countTokens_1.countTokens,\r\n            checkVersion_1.checkVersion,\r\n            handleGroupState_1.handleGroupState,\r\n            handleUnicodeSkip_1.handleUnicodeSkip,\r\n            handleControlsAndDestinations_1.handleControlsAndDestinations,\r\n            handleCharacterSet_1.handleCharacterSet,\r\n            handleFonts_1.handleFonts,\r\n            handleDeEncapsulation_1.handleDeEncapsulation,\r\n            handleOutput_1.handleOutput,\r\n            textEscapes_1.handleTextEscapes,\r\n        ];\r\n        this._rootState = { uc: 1, groupDepth: 0, destDepth: 0, destGroupDepth: 0 };\r\n        this._state = this._rootState;\r\n        this._fromhtml = false;\r\n        this._fromtext = false;\r\n        this._didHtmlCharsetReplace = false;\r\n        this._options = Object.assign(Object.assign(Object.assign({}, ProcessTokens_1.procTokensDefaultOptions), deEncExtraDefaultOptions), options);\r\n    }\r\n    get isHtml() {\r\n        return this._fromhtml;\r\n    }\r\n    get isText() {\r\n        return this._fromtext;\r\n    }\r\n    get originalHtmlCharset() {\r\n        return this._originalHtmlCharset;\r\n    }\r\n    _getOutputAsString(data, font) {\r\n        var _a;\r\n        let [outStr, areSymbolFontCodepoints] = super._getOutputAsString(data, font);\r\n        if (this._fromhtml) {\r\n            const insideHtmltag = !!((_a = this._state.allDestinations) === null || _a === void 0 ? void 0 : _a['htmltag']);\r\n            if (insideHtmltag) {\r\n                if (this._options.htmlFixContentType && !this._didHtmlCharsetReplace) {\r\n                    outStr = outStr.replace(rxCharset, (match, pre, charset, post) => {\r\n                        this._didHtmlCharsetReplace = true;\r\n                        this._originalHtmlCharset = charset;\r\n                        return pre + 'UTF-8' + post;\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                outStr = outStr.replace(/<|>/g, match => {\r\n                    return match === '<' ? '&lt;' : '&gt;';\r\n                });\r\n                if (this._options.htmlPreserveSpaces) {\r\n                    if (outStr === ' ') {\r\n                        outStr = '\\u00A0';\r\n                    }\r\n                    else {\r\n                        outStr = outStr\r\n                            .replace(/  +/g, match => ' ' + '\\u00A0'.repeat(match.length - 1))\r\n                            .replace(/^ +/, match => '\\u00A0'.repeat(match.length))\r\n                            .replace(/ +$/, match => '\\u00A0'.repeat(match.length));\r\n                    }\r\n                }\r\n                if (this._options.htmlEncodeNonAscii) {\r\n                    outStr = htmlEntityEncode(outStr);\r\n                }\r\n            }\r\n        }\r\n        return [outStr, areSymbolFontCodepoints];\r\n    }\r\n    _getCurrentFont() {\r\n        const allDests = this._state.allDestinations || {};\r\n        const insideHtmltag = !!allDests['htmltag'];\r\n        return insideHtmltag ? undefined : super._getCurrentFont();\r\n    }\r\n}\r\nexports.DeEncapsulate = DeEncapsulate;\r\nexports.default = DeEncapsulate;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.recodeSymbolFontText = exports.fontToUnicode = void 0;\r\nconst utils_1 = require(\"./utils\");\r\nexports.fontToUnicode = {\r\n    Wingdings: [\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x1F589, 0x02702, 0x02701, 0x1F453, 0x1F56D, 0x1F56E, 0x1F56F,\r\n        0x1F57F, 0x02706, 0x1F582, 0x1F583, 0x1F4EA, 0x1F4EB, 0x1F4EC, 0x1F4ED,\r\n        0x1F4C1, 0x1F4C2, 0x1F4C4, 0x1F5CF, 0x1F5D0, 0x1F5C4, 0x0231B, 0x1F5AE,\r\n        0x1F5B0, 0x1F5B2, 0x1F5B3, 0x1F5B4, 0x1F5AB, 0x1F5AC, 0x02707, 0x0270D,\r\n        0x1F58E, 0x0270C, 0x1F44C, 0x1F44D, 0x1F44E, 0x0261C, 0x0261E, 0x0261D,\r\n        0x0261F, 0x1F590, 0x0263A, 0x1F610, 0x02639, 0x1F4A3, 0x02620, 0x1F3F3,\r\n        0x1F3F1, 0x02708, 0x0263C, 0x1F4A7, 0x02744, 0x1F546, 0x0271E, 0x1F548,\r\n        0x02720, 0x02721, 0x0262A, 0x0262F, 0x00950, 0x02638, 0x02648, 0x02649,\r\n        0x0264A, 0x0264B, 0x0264C, 0x0264D, 0x0264E, 0x0264F, 0x02650, 0x02651,\r\n        0x02652, 0x02653, 0x1F670, 0x1F675, 0x025CF, 0x1F53E, 0x025A0, 0x025A1,\r\n        0x1F790, 0x02751, 0x02752, 0x02B27, 0x029EB, 0x025C6, 0x02756, 0x02B25,\r\n        0x02327, 0x02BB9, 0x02318, 0x1F3F5, 0x1F3F6, 0x1F676, 0x1F677, 0x00020,\r\n        0x024EA, 0x02460, 0x02461, 0x02462, 0x02463, 0x02464, 0x02465, 0x02466,\r\n        0x02467, 0x02468, 0x02469, 0x024FF, 0x02776, 0x02777, 0x02778, 0x02779,\r\n        0x0277A, 0x0277B, 0x0277C, 0x0277D, 0x0277E, 0x0277F, 0x1F662, 0x1F660,\r\n        0x1F661, 0x1F663, 0x1F65E, 0x1F65C, 0x1F65D, 0x1F65F, 0x000B7, 0x02022,\r\n        0x025AA, 0x026AA, 0x1F786, 0x1F788, 0x025C9, 0x025CE, 0x1F53F, 0x025AA,\r\n        0x025FB, 0x1F7C2, 0x02726, 0x02605, 0x02736, 0x02734, 0x02739, 0x02735,\r\n        0x02BD0, 0x02316, 0x027E1, 0x02311, 0x02BD1, 0x0272A, 0x02730, 0x1F550,\r\n        0x1F551, 0x1F552, 0x1F553, 0x1F554, 0x1F555, 0x1F556, 0x1F557, 0x1F558,\r\n        0x1F559, 0x1F55A, 0x1F55B, 0x02BB0, 0x02BB1, 0x02BB2, 0x02BB3, 0x02BB4,\r\n        0x02BB5, 0x02BB6, 0x02BB7, 0x1F66A, 0x1F66B, 0x1F655, 0x1F654, 0x1F657,\r\n        0x1F656, 0x1F650, 0x1F651, 0x1F652, 0x1F653, 0x0232B, 0x02326, 0x02B98,\r\n        0x02B9A, 0x02B99, 0x02B9B, 0x02B88, 0x02B8A, 0x02B89, 0x02B8B, 0x1F868,\r\n        0x1F86A, 0x1F869, 0x1F86B, 0x1F86C, 0x1F86D, 0x1F86F, 0x1F86E, 0x1F878,\r\n        0x1F87A, 0x1F879, 0x1F87B, 0x1F87C, 0x1F87D, 0x1F87F, 0x1F87E, 0x021E6,\r\n        0x021E8, 0x021E7, 0x021E9, 0x02B04, 0x021F3, 0x02B00, 0x02B01, 0x02B03,\r\n        0x02B02, 0x1F8AC, 0x1F8AD, 0x1F5F6, 0x02714, 0x1F5F7, 0x1F5F9, 0x0229E,\r\n    ],\r\n    'Wingdings 2': [\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x1F58A, 0x1F58B, 0x1F58C, 0x1F58D, 0x02704, 0x02700, 0x1F57E,\r\n        0x1F57D, 0x1F5C5, 0x1F5C6, 0x1F5C7, 0x1F5C8, 0x1F5C9, 0x1F5CA, 0x1F5CB,\r\n        0x1F5CC, 0x1F5CD, 0x1F4CB, 0x1F5D1, 0x1F5D4, 0x1F5B5, 0x1F5B6, 0x1F5B7,\r\n        0x1F5B8, 0x1F5AD, 0x1F5AF, 0x1F5B1, 0x1F592, 0x1F593, 0x1F598, 0x1F599,\r\n        0x1F59A, 0x1F59B, 0x1F448, 0x1F449, 0x1F59C, 0x1F59D, 0x1F59E, 0x1F59F,\r\n        0x1F5A0, 0x1F5A1, 0x1F446, 0x1F447, 0x1F5A2, 0x1F5A3, 0x1F591, 0x1F5F4,\r\n        0x02713, 0x1F5F5, 0x02611, 0x02612, 0x02612, 0x02BBE, 0x02BBF, 0x029B8,\r\n        0x029B8, 0x1F671, 0x1F674, 0x1F672, 0x1F673, 0x0203D, 0x1F679, 0x1F67A,\r\n        0x1F67B, 0x1F666, 0x1F664, 0x1F665, 0x1F667, 0x1F65A, 0x1F658, 0x1F659,\r\n        0x1F65B, 0x024EA, 0x02460, 0x02461, 0x02462, 0x02463, 0x02464, 0x02465,\r\n        0x02466, 0x02467, 0x02468, 0x02469, 0x024FF, 0x02776, 0x02777, 0x02778,\r\n        0x02779, 0x0277A, 0x0277B, 0x0277C, 0x0277D, 0x0277E, 0x0277F, 0x00020,\r\n        0x02609, 0x1F315, 0x0263D, 0x0263E, 0x02E3F, 0x0271D, 0x1F547, 0x1F55C,\r\n        0x1F55D, 0x1F55E, 0x1F55F, 0x1F560, 0x1F561, 0x1F562, 0x1F563, 0x1F564,\r\n        0x1F565, 0x1F566, 0x1F567, 0x1F668, 0x1F669, 0x02022, 0x025CF, 0x026AB,\r\n        0x02B24, 0x1F785, 0x1F786, 0x1F787, 0x1F788, 0x1F78A, 0x029BF, 0x025FE,\r\n        0x025A0, 0x025FC, 0x02B1B, 0x02B1C, 0x1F791, 0x1F792, 0x1F793, 0x1F794,\r\n        0x025A3, 0x1F795, 0x1F796, 0x1F797, 0x02B29, 0x02B25, 0x025C6, 0x025C7,\r\n        0x1F79A, 0x025C8, 0x1F79B, 0x1F79C, 0x1F79D, 0x02B2A, 0x02B27, 0x029EB,\r\n        0x025CA, 0x1F7A0, 0x025D6, 0x025D7, 0x02BCA, 0x02BCB, 0x025FC, 0x02B25,\r\n        0x02B1F, 0x02BC2, 0x02B23, 0x02B22, 0x02BC3, 0x02BC4, 0x1F7A1, 0x1F7A2,\r\n        0x1F7A3, 0x1F7A4, 0x1F7A5, 0x1F7A6, 0x1F7A7, 0x1F7A8, 0x1F7A9, 0x1F7AA,\r\n        0x1F7AB, 0x1F7AC, 0x1F7AD, 0x1F7AE, 0x1F7AF, 0x1F7B0, 0x1F7B1, 0x1F7B2,\r\n        0x1F7B3, 0x1F7B4, 0x1F7B5, 0x1F7B6, 0x1F7B7, 0x1F7B8, 0x1F7B9, 0x1F7BA,\r\n        0x1F7BB, 0x1F7BC, 0x1F7BD, 0x1F7BE, 0x1F7BF, 0x1F7C0, 0x1F7C2, 0x1F7C4,\r\n        0x02726, 0x1F7C9, 0x02605, 0x02736, 0x1F7CB, 0x02737, 0x1F7CF, 0x1F7D2,\r\n        0x02739, 0x1F7C3, 0x1F7C7, 0x0272F, 0x1F7CD, 0x1F7D4, 0x02BCC, 0x02BCD,\r\n        0x0203B, 0x02042, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n    ],\r\n    'Wingdings 3': [\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x02B60, 0x02B62, 0x02B61, 0x02B63, 0x02B66, 0x02B67, 0x02B69,\r\n        0x02B68, 0x02B70, 0x02B72, 0x02B71, 0x02B73, 0x02B76, 0x02B78, 0x02B7B,\r\n        0x02B7D, 0x02B64, 0x02B65, 0x02B6A, 0x02B6C, 0x02B6B, 0x02B6D, 0x02B4D,\r\n        0x02BA0, 0x02BA1, 0x02BA2, 0x02BA3, 0x02BA4, 0x02BA5, 0x02BA6, 0x02BA7,\r\n        0x02B90, 0x02B91, 0x02B92, 0x02B93, 0x02B80, 0x02B83, 0x02B7E, 0x02B7F,\r\n        0x02B84, 0x02B86, 0x02B85, 0x02B87, 0x02B8F, 0x02B8D, 0x02B8E, 0x02B8C,\r\n        0x02B6E, 0x02B6F, 0x0238B, 0x02324, 0x02303, 0x02325, 0x023B5, 0x0237D,\r\n        0x021EA, 0x02BB8, 0x1F8A0, 0x1F8A1, 0x1F8A2, 0x1F8A3, 0x1F8A4, 0x1F8A5,\r\n        0x1F8A6, 0x1F8A7, 0x1F8A8, 0x1F8A9, 0x1F8AA, 0x1F8AB, 0x02190, 0x02192,\r\n        0x02191, 0x02193, 0x02196, 0x02197, 0x02199, 0x02198, 0x1F858, 0x1F859,\r\n        0x025B2, 0x025BC, 0x025B3, 0x025BD, 0x025C4, 0x025BA, 0x025C1, 0x025B7,\r\n        0x025E3, 0x025E2, 0x025E4, 0x025E5, 0x1F780, 0x1F782, 0x1F781, 0x00020,\r\n        0x1F783, 0x025B2, 0x025BC, 0x025C0, 0x025B6, 0x02B9C, 0x02B9E, 0x02B9D,\r\n        0x02B9F, 0x1F810, 0x1F812, 0x1F811, 0x1F813, 0x1F814, 0x1F816, 0x1F815,\r\n        0x1F817, 0x1F818, 0x1F81A, 0x1F819, 0x1F81B, 0x1F81C, 0x1F81E, 0x1F81D,\r\n        0x1F81F, 0x1F800, 0x1F802, 0x1F801, 0x1F803, 0x1F804, 0x1F806, 0x1F805,\r\n        0x1F807, 0x1F808, 0x1F80A, 0x1F809, 0x1F80B, 0x1F820, 0x1F822, 0x1F824,\r\n        0x1F826, 0x1F828, 0x1F82A, 0x1F82C, 0x1F89C, 0x1F89D, 0x1F89E, 0x1F89F,\r\n        0x1F82E, 0x1F830, 0x1F832, 0x1F834, 0x1F836, 0x1F838, 0x1F83A, 0x1F839,\r\n        0x1F83B, 0x1F898, 0x1F89A, 0x1F899, 0x1F89B, 0x1F83C, 0x1F83E, 0x1F83D,\r\n        0x1F83F, 0x1F840, 0x1F842, 0x1F841, 0x1F843, 0x1F844, 0x1F846, 0x1F845,\r\n        0x1F847, 0x02BA8, 0x02BA9, 0x02BAA, 0x02BAB, 0x02BAC, 0x02BAD, 0x02BAE,\r\n        0x02BAF, 0x1F860, 0x1F862, 0x1F861, 0x1F863, 0x1F864, 0x1F865, 0x1F867,\r\n        0x1F866, 0x1F870, 0x1F872, 0x1F871, 0x1F873, 0x1F874, 0x1F875, 0x1F877,\r\n        0x1F876, 0x1F880, 0x1F882, 0x1F881, 0x1F883, 0x1F884, 0x1F885, 0x1F887,\r\n        0x1F886, 0x1F890, 0x1F892, 0x1F891, 0x1F893, 0x1F894, 0x1F896, 0x1F895,\r\n        0x1F897, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n    ],\r\n    Webdings: [\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020, 0x00020,\r\n        0x00020, 0x1F577, 0x1F578, 0x1F572, 0x1F576, 0x1F3C6, 0x1F396, 0x1F587,\r\n        0x1F5E8, 0x1F5E9, 0x1F5F0, 0x1F5F1, 0x1F336, 0x1F397, 0x1F67E, 0x1F67C,\r\n        0x1F5D5, 0x1F5D6, 0x1F5D7, 0x023F4, 0x023F5, 0x023F6, 0x023F7, 0x023EA,\r\n        0x023E9, 0x023EE, 0x023ED, 0x023F8, 0x023F9, 0x023FA, 0x1F5DA, 0x1F5F3,\r\n        0x1F6E0, 0x1F3D7, 0x1F3D8, 0x1F3D9, 0x1F3DA, 0x1F3DC, 0x1F3ED, 0x1F3DB,\r\n        0x1F3E0, 0x1F3D6, 0x1F3DD, 0x1F6E3, 0x1F50D, 0x1F3D4, 0x1F441, 0x1F442,\r\n        0x1F3DE, 0x1F3D5, 0x1F6E4, 0x1F3DF, 0x1F6F3, 0x1F56C, 0x1F56B, 0x1F568,\r\n        0x1F508, 0x1F394, 0x1F395, 0x1F5EC, 0x1F67D, 0x1F5ED, 0x1F5EA, 0x1F5EB,\r\n        0x02B94, 0x02714, 0x1F6B2, 0x02B1C, 0x1F6E1, 0x1F381, 0x1F6F1, 0x02B1B,\r\n        0x1F691, 0x1F6C8, 0x1F6E9, 0x1F6F0, 0x1F7C8, 0x1F574, 0x02B24, 0x1F6E5,\r\n        0x1F694, 0x1F5D8, 0x1F5D9, 0x02753, 0x1F6F2, 0x1F687, 0x1F68D, 0x1F6A9,\r\n        0x029B8, 0x02296, 0x1F6AD, 0x1F5EE, 0x023D0, 0x1F5EF, 0x1F5F2, 0x025AF,\r\n        0x1F6B9, 0x1F6BA, 0x1F6C9, 0x1F6CA, 0x1F6BC, 0x1F47D, 0x1F3CB, 0x026F7,\r\n        0x1F3C2, 0x1F3CC, 0x1F3CA, 0x1F3C4, 0x1F3CD, 0x1F3CE, 0x1F698, 0x1F4C8,\r\n        0x1F6E2, 0x1F4B0, 0x1F3F7, 0x1F4B3, 0x1F46A, 0x1F5E1, 0x1F5E2, 0x1F5E3,\r\n        0x0272F, 0x1F584, 0x1F585, 0x1F583, 0x1F586, 0x1F5B9, 0x1F5BA, 0x1F5BB,\r\n        0x1F575, 0x1F570, 0x1F5BD, 0x1F5BE, 0x1F4CB, 0x1F5D2, 0x1F5D3, 0x1F56E,\r\n        0x1F4DA, 0x1F5DE, 0x1F5DF, 0x1F5C3, 0x1F4C7, 0x1F5BC, 0x1F3AD, 0x1F39C,\r\n        0x1F398, 0x1F399, 0x1F3A7, 0x1F4BF, 0x1F39E, 0x1F4F7, 0x1F39F, 0x1F3AC,\r\n        0x1F4FD, 0x1F4F9, 0x1F4FE, 0x1F4FB, 0x1F39A, 0x1F39B, 0x1F4FA, 0x1F4BB,\r\n        0x1F5A5, 0x1F5A6, 0x1F5A7, 0x1F579, 0x1F3AE, 0x1F57B, 0x1F57C, 0x1F4DF,\r\n        0x1F581, 0x1F580, 0x1F5A8, 0x1F5A9, 0x1F5BF, 0x1F5AA, 0x1F5DC, 0x1F512,\r\n        0x1F513, 0x1F5DD, 0x1F4E5, 0x1F4E4, 0x1F573, 0x1F323, 0x1F324, 0x1F325,\r\n        0x1F326, 0x02601, 0x1F328, 0x1F327, 0x1F329, 0x1F32A, 0x1F32C, 0x1F32B,\r\n        0x1F31C, 0x1F321, 0x1F6CB, 0x1F6CF, 0x1F37D, 0x1F378, 0x1F6CE, 0x1F6CD,\r\n        0x024C5, 0x0267F, 0x1F6C6, 0x1F588, 0x1F393, 0x1F5E4, 0x1F5E5, 0x1F5E6,\r\n        0x1F5E7, 0x1F6EA, 0x1F43F, 0x1F426, 0x1F41F, 0x1F415, 0x1F408, 0x1F66C,\r\n        0x1F66E, 0x1F66D, 0x1F66F, 0x1F5FA, 0x1F30D, 0x1F30F, 0x1F30E, 0x1F54A,\r\n    ],\r\n    Symbol: ''\r\n        + '\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020'\r\n        + '\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020'\r\n        + '\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020'\r\n        + '\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020'\r\n        + '\\u0020\\u0021\\u2200\\u0023\\u2203\\u0025\\u0026\\u220D'\r\n        + '\\u0028\\u0029\\u2217\\u002B\\u002C\\u2212\\u002E\\u002F'\r\n        + '\\u0030\\u0031\\u0032\\u0033\\u0034\\u0035\\u0036\\u0037'\r\n        + '\\u0038\\u0039\\u003A\\u003B\\u003C\\u003D\\u003E\\u003F'\r\n        + '\\u2245\\u0391\\u0392\\u03A7\\u0394\\u0395\\u03A6\\u0393'\r\n        + '\\u0397\\u0399\\u03D1\\u039A\\u039B\\u039C\\u039D\\u039F'\r\n        + '\\u03A0\\u0398\\u03A1\\u03A3\\u03A4\\u03A5\\u03C2\\u03A9'\r\n        + '\\u039E\\u03A8\\u0396\\u005B\\u2234\\u005D\\u22A5\\u005F'\r\n        + '\\u203E\\u03B1\\u03B2\\u03C7\\u03B4\\u03B5\\u03C6\\u03B3'\r\n        + '\\u03B7\\u03B9\\u03D5\\u03BA\\u03BB\\u03BC\\u03BD\\u03BF'\r\n        + '\\u03C0\\u03B8\\u03C1\\u03C3\\u03C4\\u03C5\\u03D6\\u03C9'\r\n        + '\\u03BE\\u03C8\\u03B6\\u007B\\u007C\\u007D\\u223C\\u0020'\r\n        + '\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020'\r\n        + '\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020'\r\n        + '\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020'\r\n        + '\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020\\u0020'\r\n        + '\\u0020\\u03D2\\u2032\\u2264\\u2044\\u221E\\u0192\\u2663'\r\n        + '\\u2666\\u2665\\u2660\\u2194\\u2190\\u2191\\u2192\\u2193'\r\n        + '\\u00B0\\u00B1\\u2033\\u2265\\u00D7\\u221D\\u2202\\u2022'\r\n        + '\\u00F7\\u2260\\u2261\\u2248\\u2026\\u23D0\\u23AF\\u21B5'\r\n        + '\\u2135\\u2111\\u211C\\u2118\\u2297\\u2295\\u2205\\u2229'\r\n        + '\\u222A\\u2283\\u2287\\u2284\\u2282\\u2286\\u2208\\u2209'\r\n        + '\\u2220\\u2207\\u00AE\\u00A9\\u2122\\u220F\\u221A\\u22C5'\r\n        + '\\u00AC\\u2227\\u2228\\u21D4\\u21D0\\u21D1\\u21D2\\u21D3'\r\n        + '\\u25CA\\u2329\\u00AE\\u00A9\\u2122\\u2211\\u239B\\u239C'\r\n        + '\\u239D\\u23A1\\u23A2\\u23A3\\u23A7\\u23A8\\u23A9\\u23AA'\r\n        + '\\u20AC\\u232A\\u222B\\u2320\\u23AE\\u2321\\u239E\\u239F'\r\n        + '\\u23A0\\u23A4\\u23A5\\u23A6\\u23AB\\u23AC\\u23AD\\u0020'\r\n};\r\nfunction recodeSymbolFontText(input, font, unmapped = '?') {\r\n    const mapping = exports.fontToUnicode[font];\r\n    if (mapping) {\r\n        const parts = [];\r\n        for (const c of input) {\r\n            const codepoint = c.codePointAt(0);\r\n            const codepoint2 = mapping[codepoint];\r\n            if (utils_1.isDef(codepoint2)) {\r\n                parts.push(utils_1.isStr(codepoint2) ? codepoint2 : String.fromCodePoint(codepoint2));\r\n            }\r\n            else {\r\n                if (unmapped === 'keep') {\r\n                    parts.push(c);\r\n                }\r\n                else if (unmapped === '?') {\r\n                    parts.push('?');\r\n                }\r\n            }\r\n        }\r\n        return parts.join('');\r\n    }\r\n}\r\nexports.recodeSymbolFontText = recodeSymbolFontText;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.checkVersion = void 0;\r\nexports.checkVersion = {\r\n    allTokenHandler: (global, token) => {\r\n        if (global._count === 1 && token.type !== 0) {\r\n            throw new Error('File should start with \"{\"');\r\n        }\r\n        if (global._count === 2 && (token.word !== 'rtf' || (token.param && token.param !== 1))) {\r\n            throw new Error('File should start with \"{\\\\rtf[0,1]\"');\r\n        }\r\n    },\r\n    preStreamFlushHandler: global => {\r\n        if (global._count === 0) {\r\n            throw new Error('File should start with \"{\"');\r\n        }\r\n        else if (global._count === 1) {\r\n            throw new Error('File should start with \"{\\\\rtf\"');\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.countTokens = void 0;\r\nexports.countTokens = {\r\n    allTokenHandler: global => {\r\n        ++global._count;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.handleCharacterSet = void 0;\r\nconst utils_1 = require(\"../utils\");\r\nconst characterSetControlHandlers = {\r\n    mac: () => {\r\n        throw new Error('Unsupported character set \\\\mac');\r\n    },\r\n    pc: () => {\r\n        throw new Error('Unsupported character set \\\\pc');\r\n    },\r\n    pca: () => {\r\n        throw new Error('Unsupported character set \\\\pca');\r\n    },\r\n    ansicpg: (global, token) => {\r\n        if (global._state.destination === 'rtf' && global._state.destDepth > 1 && global._ansicpg) {\r\n            return;\r\n        }\r\n        if (global._ansicpg) {\r\n            global._options.warn('\\\\ansicpg already defined');\r\n            return;\r\n        }\r\n        if (!utils_1.isNum(token.param)) {\r\n            global._options.warn('\\\\ansicpg with no param');\r\n            return;\r\n        }\r\n        global._ansicpg = true;\r\n        global._cpg = token.param;\r\n    },\r\n};\r\nexports.handleCharacterSet = {\r\n    controlHandlers: characterSetControlHandlers,\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.handleControlsAndDestinations = void 0;\r\nconst words_1 = require(\"../words\");\r\nfunction addDestination(state, destination) {\r\n    state.destDepth = (state.destDepth || 0) + 1;\r\n    state.destGroupDepth = state.groupDepth;\r\n    if (!state.allDestinations) {\r\n        state.allDestinations = {};\r\n        state.allDestinations[destination] = true;\r\n    }\r\n    else if (!state.allDestinations[destination]) {\r\n        state.allDestinations = Object.create(state.allDestinations);\r\n        state.allDestinations[destination] = true;\r\n    }\r\n}\r\nconst destinationControlHandlers = {\r\n    [2]: (global, token) => {\r\n        var _a;\r\n        if (token.word === '*' && ((_a = global._lastToken) === null || _a === void 0 ? void 0 : _a.type) !== 0) {\r\n            global._options.warn('Got control symbol \"\\\\*\" but not immediately after \"{\"');\r\n        }\r\n        const wordType = words_1.words[token.word] || 0;\r\n        if (wordType === 5) {\r\n            if (global._lastToken && global._lastToken.type === 0) {\r\n                global._state.destination = token.word;\r\n                global._state.destIgnorableImmediate = false;\r\n                addDestination(global._state, token.word);\r\n            }\r\n            else if (global._lastToken && global._lastLastToken\r\n                && global._lastToken.type === 2 && global._lastToken.word === '*'\r\n                && global._lastLastToken.type === 0) {\r\n                global._state.destination = token.word;\r\n                global._state.destIgnorableImmediate = global._state.destIgnorable = true;\r\n                addDestination(global._state, token.word);\r\n            }\r\n            else {\r\n                global._options.warn('Got destination control word but not immediately after \"{\" or \"{\\\\*\": ' + token.word);\r\n            }\r\n        }\r\n        else if (wordType === 0) {\r\n            if (global._lastToken && global._lastLastToken\r\n                && global._lastToken.type === 2 && global._lastToken.word === '*'\r\n                && global._lastLastToken.type === 0) {\r\n                global._state.destination = token.word;\r\n                global._state.destIgnorableImmediate = global._state.destIgnorable = true;\r\n                addDestination(global._state, token.word);\r\n            }\r\n        }\r\n    },\r\n};\r\nexports.handleControlsAndDestinations = {\r\n    tokenHandlers: destinationControlHandlers,\r\n    allTokenHandler: (global, token) => {\r\n        global._lastLastToken = global._lastToken;\r\n        global._lastToken = global._currToken;\r\n        global._currToken = token;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.handleDeEncapsulation = void 0;\r\nfunction getModeError(global) {\r\n    if (global._options.mode === 'html') {\r\n        return new Error('Not encapsulated HTML file');\r\n    }\r\n    else if (global._options.mode === 'text') {\r\n        return new Error('Not encapsulated text file');\r\n    }\r\n    else {\r\n        return new Error('Not encapsulated HTML or text file');\r\n    }\r\n}\r\nconst allTokenHandler = (global, token) => {\r\n    if (global._count <= 10) {\r\n        if (token.type === 3) {\r\n            throw getModeError(global);\r\n        }\r\n    }\r\n    else if (!global._fromhtml && !global._fromtext) {\r\n        throw getModeError(global);\r\n    }\r\n    if (global._state.htmlrtf && global._options.outlookQuirksMode) {\r\n        if (token.type !== 2 || (token.word !== 'f' && token.word !== 'htmlrtf')) {\r\n            return true;\r\n        }\r\n    }\r\n};\r\nconst deEncapsulationControlHandlers = {\r\n    fromhtml: global => {\r\n        if (global._state.destination !== 'rtf') {\r\n            throw new Error('\\\\fromhtml not at root group');\r\n        }\r\n        if (global._fromhtml !== false || global._fromtext !== false) {\r\n            throw new Error('\\\\fromhtml or \\\\fromtext already defined');\r\n        }\r\n        if (global._options.mode !== 'html' && global._options.mode !== 'either') {\r\n            throw getModeError(global);\r\n        }\r\n        global._fromhtml = true;\r\n        if (global._options.prefix) {\r\n            global._pushOutput('html:');\r\n        }\r\n        return true;\r\n    },\r\n    fromtext: global => {\r\n        if (global._state.destination !== 'rtf') {\r\n            throw new Error('\\\\fromtext not at root group');\r\n        }\r\n        if (global._fromhtml !== false || global._fromtext !== false) {\r\n            throw new Error('\\\\fromhtml or \\\\fromtext already defined');\r\n        }\r\n        if (global._options.mode !== 'text' && global._options.mode !== 'either') {\r\n            throw getModeError(global);\r\n        }\r\n        global._fromtext = true;\r\n        if (global._options.prefix) {\r\n            global._pushOutput('text:');\r\n        }\r\n        return true;\r\n    },\r\n    htmlrtf: (global, token) => {\r\n        const on = token.param !== 0;\r\n        global._state.htmlrtf = on;\r\n    }\r\n};\r\nexports.handleDeEncapsulation = {\r\n    allTokenHandler: allTokenHandler,\r\n    controlHandlers: deEncapsulationControlHandlers,\r\n    outputDataFilter: global => {\r\n        if (global._state.htmlrtf) {\r\n            return true;\r\n        }\r\n        const allDests = global._state.allDestinations || {};\r\n        const insideHtmltag = !!allDests['htmltag'];\r\n        if (!insideHtmltag && global._state.destIgnorable) {\r\n            return true;\r\n        }\r\n        if (!insideHtmltag && (allDests['fonttbl'] || allDests['colortbl'] || allDests['stylesheet'] || allDests['pntext'])) {\r\n            return true;\r\n        }\r\n    },\r\n    preStreamFlushHandler: global => {\r\n        if (!global._fromhtml && !global._fromtext) {\r\n            throw getModeError(global);\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.handleFonts = void 0;\r\nconst utils_1 = require(\"../utils\");\r\nconst charsetToCpg = {\r\n    0: 1252,\r\n    2: 42,\r\n    77: 10000,\r\n    78: 10001,\r\n    79: 10003,\r\n    80: 10008,\r\n    81: 10002,\r\n    83: 10005,\r\n    84: 10004,\r\n    85: 10006,\r\n    86: 10081,\r\n    87: 10021,\r\n    88: 10029,\r\n    89: 10007,\r\n    128: 932,\r\n    129: 949,\r\n    130: 1361,\r\n    134: 936,\r\n    136: 950,\r\n    161: 1253,\r\n    162: 1254,\r\n    163: 1258,\r\n    177: 1255,\r\n    178: 1256,\r\n    186: 1257,\r\n    204: 1251,\r\n    222: 874,\r\n    238: 1250,\r\n    254: 437,\r\n    255: 850,\r\n};\r\nconst codepages = {\r\n    20127: true,\r\n    28591: true,\r\n};\r\nfor (const charset in charsetToCpg) {\r\n    const cpg = charsetToCpg[charset];\r\n    codepages[cpg] = true;\r\n}\r\nconst handleThemeFont = (global, cw) => {\r\n    if (global._constructingFontTableEntry) {\r\n        global._constructingFontTableEntry.themeFont = cw.word.slice(1);\r\n    }\r\n};\r\nconst handleFontFamily = (global, cw) => {\r\n    if (global._constructingFontTableEntry) {\r\n        global._constructingFontTableEntry.fontFamily = cw.word.slice(1);\r\n    }\r\n};\r\nconst fontTokenHandlers = {\r\n    [0]: global => {\r\n        if (global._constructingFontTable && global._state.destination === 'fonttbl' && global._state.groupDepth === global._state.destGroupDepth + 1) {\r\n            global._constructingFontTableEntry = {};\r\n        }\r\n    },\r\n    [1]: global => {\r\n        if (global._constructingFontTable && global._state.destination === 'fonttbl' && global._state.groupDepth === global._state.destGroupDepth) {\r\n            if (!global._constructingFontTableEntry || !global._constructingFontTableKey) {\r\n                throw new Error('Finished a font table group but no key?');\r\n            }\r\n            global._fonttbl[global._constructingFontTableKey] = global._constructingFontTableEntry;\r\n            global._constructingFontTableEntry = undefined;\r\n            global._constructingFontTableKey = undefined;\r\n        }\r\n        if (global._constructingFontTable && global._state.destGroupDepth === 1) {\r\n            global._constructingFontTable = false;\r\n        }\r\n    }\r\n};\r\nconst fontControlHandlers = {\r\n    deff: (global, cw) => {\r\n        if (global._state.destination === 'rtf' && global._state.destDepth > 1 && typeof global._deff !== 'undefined') {\r\n            return;\r\n        }\r\n        if (global._state.destination !== 'rtf' || global._state.destDepth !== 1)\r\n            throw new Error('\\\\deff not at root group');\r\n        if (typeof global._deff !== 'undefined')\r\n            throw new Error('\\\\deff already defined');\r\n        global._deff = cw.param + '';\r\n    },\r\n    fonttbl: global => {\r\n        if (global._fonttbl && global._state.destGroupDepth > 2) {\r\n            global._options.warn('Got additional \\\\fonttbl');\r\n            return;\r\n        }\r\n        if (global._fonttbl) {\r\n            throw new Error('fonttbl already created');\r\n        }\r\n        else if (global._state.destDepth !== 2 || global._state.destGroupDepth !== 2) {\r\n            throw new Error('fonttbl not in header');\r\n        }\r\n        global._constructingFontTable = true;\r\n        global._fonttbl = {};\r\n    },\r\n    f: (global, cw) => {\r\n        if (typeof cw.param === 'undefined') {\r\n            throw new Error('No param for \\\\f');\r\n        }\r\n        const f = cw.param + '';\r\n        if (global._constructingFontTableEntry && global._constructingFontTableKey) {\r\n            throw new Error('\\\\f control word in font group which already has \\\\f');\r\n        }\r\n        else if (global._constructingFontTableEntry) {\r\n            global._constructingFontTableKey = f;\r\n        }\r\n        else {\r\n            global._state.font = f;\r\n        }\r\n    },\r\n    fcharset: (global, cw) => {\r\n        if (!global._constructingFontTableEntry) {\r\n            return;\r\n        }\r\n        if (!utils_1.isNum(cw.param)) {\r\n            throw new Error('fcharset with no param');\r\n        }\r\n        if (cw.param !== 1) {\r\n            let cpg = charsetToCpg[cw.param];\r\n            if (!utils_1.isNum(cpg) && codepages[cw.param]) {\r\n                cpg = cw.param;\r\n            }\r\n            if (!utils_1.isNum(cpg)) {\r\n                global._options.warn('No codepage for charset ' + cw.param);\r\n            }\r\n            else {\r\n                global._constructingFontTableEntry.fcharsetCpg = cpg;\r\n            }\r\n        }\r\n    },\r\n    cpg: (global, cw) => {\r\n        if (!global._constructingFontTableEntry) {\r\n            return;\r\n        }\r\n        const cpg = cw.param;\r\n        if (!utils_1.isNum(cpg)) {\r\n            global._options.warn('No codepage given');\r\n        }\r\n        else {\r\n            global._constructingFontTableEntry.cpg = cpg;\r\n        }\r\n    },\r\n    flomajor: handleThemeFont,\r\n    fhimajor: handleThemeFont,\r\n    fdbmajor: handleThemeFont,\r\n    fbimajor: handleThemeFont,\r\n    flominor: handleThemeFont,\r\n    fhiminor: handleThemeFont,\r\n    fdbminor: handleThemeFont,\r\n    fbiminor: handleThemeFont,\r\n    fnil: handleFontFamily,\r\n    froman: handleFontFamily,\r\n    fswiss: handleFontFamily,\r\n    fmodern: handleFontFamily,\r\n    fscript: handleFontFamily,\r\n    fdecor: handleFontFamily,\r\n    ftech: handleFontFamily,\r\n    fbidi: handleFontFamily,\r\n};\r\nconst fontTextHandler = (global, data) => {\r\n    if (global._constructingFontTableEntry) {\r\n        if (!utils_1.isStr(data)) {\r\n            data = data.toString('latin1');\r\n        }\r\n        data = data.replace(/[^\\x00-\\x7F]/g, c => {\r\n            const hex = c.charCodeAt(0).toString(16).toUpperCase();\r\n            return '\\\\u' + '0000'.slice(0, 4 - hex.length) + hex;\r\n        });\r\n        let str = (global._constructingFontTableEntry.fontName || '') + data;\r\n        if (str.endsWith(';')) {\r\n            str = str.substr(0, str.length - 1);\r\n            if (str.length > 2 && str.startsWith('\"') && str.endsWith('\"')) {\r\n                str = str.substr(1, str.length - 2);\r\n            }\r\n        }\r\n        global._constructingFontTableEntry.fontName = str;\r\n        return true;\r\n    }\r\n};\r\nexports.handleFonts = {\r\n    tokenHandlers: fontTokenHandlers,\r\n    controlHandlers: fontControlHandlers,\r\n    outputDataFilter: fontTextHandler\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.handleGroupState = void 0;\r\nconst allTokenhandler = (global, token) => {\r\n    if (global._done) {\r\n        if (token.type === 3 && token.data.length === 1 && token.data[0] === 0) {\r\n        }\r\n        else {\r\n            global._options.warn('Additional tokens after final closing bracket');\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst groupTokenHandlers = {\r\n    [0]: global => {\r\n        const oldState = global._state;\r\n        const newState = Object.create(oldState);\r\n        ++newState.groupDepth;\r\n        global._state = newState;\r\n    },\r\n    [1]: global => {\r\n        global._state = Object.getPrototypeOf(global._state);\r\n        if (global._state === global._rootState) {\r\n            global._done = true;\r\n        }\r\n    },\r\n};\r\nexports.handleGroupState = {\r\n    allTokenHandler: allTokenhandler,\r\n    tokenHandlers: groupTokenHandlers,\r\n    preStreamFlushHandler: global => {\r\n        if (global._state !== global._rootState) {\r\n            global._options.warn('Not enough matching closing brackets');\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.handleOutput = void 0;\r\nconst utils_1 = require(\"../utils\");\r\nfunction flushBuffers(global) {\r\n    if (global._bufferedUnicodeOutput) {\r\n        const str = global._bufferedUnicodeOutput.join('');\r\n        global._pushOutput(str);\r\n        delete global._bufferedUnicodeOutput;\r\n    }\r\n    if (global._bufferedBinaryOutput) {\r\n        global._pushOutput(Buffer.concat(global._bufferedBinaryOutput));\r\n        delete global._bufferedBinaryOutput;\r\n    }\r\n}\r\nconst allTokenHandler = (global, token) => {\r\n    if (global._bufferedUnicodeOutput && (token.type !== 2 || (token.word !== 'uc' && token.word !== 'u'))) {\r\n        flushBuffers(global);\r\n    }\r\n    else if (global._bufferedBinaryOutput && (token.type !== 2 || token.word !== \"'\")) {\r\n        flushBuffers(global);\r\n    }\r\n};\r\nconst tokenHandlers = {\r\n    [3]: (globals, token) => {\r\n        flushBuffers(globals);\r\n        globals._pushOutput(token.data);\r\n    },\r\n};\r\nconst unicodeControlHandlers = {\r\n    u: (global, token) => {\r\n        if (!utils_1.isNum(token.param)) {\r\n            throw new Error('Unicode control word with no param');\r\n        }\r\n        const newCodeUnit = token.param < 0\r\n            ? String.fromCodePoint(token.param + 0x10000)\r\n            : String.fromCodePoint(token.param);\r\n        global._bufferedUnicodeOutput = global._bufferedUnicodeOutput || [];\r\n        global._bufferedUnicodeOutput.push(newCodeUnit);\r\n    },\r\n    \"'\": (global, token) => {\r\n        global._bufferedBinaryOutput = global._bufferedBinaryOutput || [];\r\n        global._bufferedBinaryOutput.push(token.data);\r\n    }\r\n};\r\nexports.handleOutput = {\r\n    allTokenHandler: allTokenHandler,\r\n    tokenHandlers: tokenHandlers,\r\n    controlHandlers: unicodeControlHandlers,\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.handleUnicodeSkip = void 0;\r\nconst allTokenHandler = (globals, token) => {\r\n    switch (token.type) {\r\n        case 0:\r\n        case 1:\r\n            globals._skip = 0;\r\n            break;\r\n        case 2:\r\n            if (globals._skip > 0) {\r\n                globals._skip--;\r\n                return true;\r\n            }\r\n            break;\r\n        case 3:\r\n            if (globals._skip >= token.data.length) {\r\n                globals._skip -= token.data.length;\r\n                return true;\r\n            }\r\n            if (globals._skip > 0) {\r\n                token.data = token.data.slice(globals._skip);\r\n                globals._skip = 0;\r\n            }\r\n            break;\r\n    }\r\n};\r\nconst unicodeSkipControlHandlers = {\r\n    uc: (global, token) => {\r\n        global._state.uc = token.param || 0;\r\n    },\r\n    u: global => {\r\n        global._skip = global._state.uc;\r\n    }\r\n};\r\nexports.handleUnicodeSkip = {\r\n    allTokenHandler: allTokenHandler,\r\n    controlHandlers: unicodeSkipControlHandlers,\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.handleTextEscapes = void 0;\r\nexports.handleTextEscapes = {\r\n    controlHandlers: {\r\n        par: globals => globals._pushOutput('\\r\\n'),\r\n        line: globals => globals._pushOutput('\\r\\n'),\r\n        tab: globals => globals._pushOutput('\\t'),\r\n        lquote: globals => globals._pushOutput('\\u2018'),\r\n        rquote: globals => globals._pushOutput('\\u2019'),\r\n        ldblquote: globals => globals._pushOutput('\\u201C'),\r\n        rdblquote: globals => globals._pushOutput('\\u201D'),\r\n        bullet: globals => globals._pushOutput('\\u2022'),\r\n        endash: globals => globals._pushOutput('\\u2013'),\r\n        emdash: globals => globals._pushOutput('\\u2014'),\r\n        '{': globals => globals._pushOutput('{'),\r\n        '}': globals => globals._pushOutput('}'),\r\n        '\\\\': globals => globals._pushOutput('\\\\'),\r\n        '~': globals => globals._pushOutput('\\u00A0'),\r\n        _: globals => globals._pushOutput('\\u00AD'),\r\n    }\r\n};\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.deEncapsulateStream = exports.deEncapsulateSync = exports.DeEncapsulate = exports.Tokenize = void 0;\r\nconst de_encapsulate_1 = require(\"./de-encapsulate\");\r\nObject.defineProperty(exports, \"DeEncapsulate\", { enumerable: true, get: function () { return de_encapsulate_1.DeEncapsulate; } });\r\nconst stream_flow_1 = require(\"./stream-flow\");\r\nconst tokenize_1 = require(\"./tokenize\");\r\nObject.defineProperty(exports, \"Tokenize\", { enumerable: true, get: function () { return tokenize_1.Tokenize; } });\r\nconst utils_1 = require(\"./utils\");\r\nfunction deEncapsulateSync(rtf, options) {\r\n    const onError = (err) => {\r\n        if (utils_1.isDef(err)) {\r\n            throw err;\r\n        }\r\n    };\r\n    const stream1 = new tokenize_1.Tokenize();\r\n    const stream2 = new de_encapsulate_1.DeEncapsulate(options);\r\n    stream1.push = (token) => {\r\n        stream2._transform(token, '', onError);\r\n        return true;\r\n    };\r\n    const chunks = [];\r\n    stream2.push = (piece) => {\r\n        chunks.push(piece);\r\n        return true;\r\n    };\r\n    stream1._transform(rtf, undefined, onError);\r\n    stream1._flush(onError);\r\n    stream2._flush(onError);\r\n    const result = !options || !options.outputMode || options.outputMode === 'string'\r\n        ? chunks.join('')\r\n        : Buffer.concat(chunks);\r\n    return {\r\n        mode: stream2.isHtml ? 'html' : 'text',\r\n        text: result\r\n    };\r\n}\r\nexports.deEncapsulateSync = deEncapsulateSync;\r\nfunction deEncapsulateStream(streamIn, options) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const stream1 = new tokenize_1.Tokenize();\r\n        const stream2 = new de_encapsulate_1.DeEncapsulate(options);\r\n        const chunks = yield stream_flow_1.streamFlow(streamIn, stream1, stream2);\r\n        const result = !options || !options.outputMode || options.outputMode === 'string'\r\n            ? chunks.join('')\r\n            : Buffer.concat(chunks);\r\n        return {\r\n            mode: stream2.isHtml ? 'html' : 'text',\r\n            text: result\r\n        };\r\n    });\r\n}\r\nexports.deEncapsulateStream = deEncapsulateStream;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.streamFlow = void 0;\r\nfunction streamFlow(stream1, ...streams) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((resolve, _reject) => {\r\n            const reject = (err) => {\r\n                stream1.unpipe();\r\n                for (let i = 1; i < streams.length; i++) {\r\n                    streams[i - 1].unpipe();\r\n                }\r\n                _reject(err);\r\n            };\r\n            if (streams.length) {\r\n                stream1.pipe(streams[0]);\r\n            }\r\n            for (let i = 1; i < streams.length; i++) {\r\n                streams[i - 1].pipe(streams[i]);\r\n            }\r\n            stream1.on('error', reject);\r\n            for (let i = 0; i < streams.length; i++) {\r\n                streams[i].on('error', reject);\r\n            }\r\n            const sout = streams.length ? streams[streams.length - 1] : stream1;\r\n            const output = [];\r\n            sout.on('readable', () => {\r\n                while (true) {\r\n                    const piece = sout.read();\r\n                    if (piece === null) {\r\n                        break;\r\n                    }\r\n                    output.push(piece);\r\n                }\r\n            });\r\n            sout.on('end', () => resolve(output));\r\n        });\r\n    });\r\n}\r\nexports.streamFlow = streamFlow;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Tokenize = void 0;\r\nconst stream_1 = require(\"stream\");\r\nconst utils_1 = require(\"./utils\");\r\nconst isAlpha = (c) => (c > 64 && c < 91) || (c > 96 && c < 123);\r\nconst isNumeric = (c) => c > 47 && c < 58;\r\nclass Tokenize extends stream_1.Transform {\r\n    constructor() {\r\n        super({ readableObjectMode: true });\r\n        this._expectedBinaryBytes = 0;\r\n        this._readHexDigitsCount = 0;\r\n        this._paramStr = '';\r\n        this._mode = 0;\r\n    }\r\n    _flushToken() {\r\n        const token = this._token;\r\n        if (token) {\r\n            if (this._paramStr) {\r\n                token.param = Number.parseInt(this._paramStr, 10);\r\n            }\r\n            const buf = token.data;\r\n            if (buf) {\r\n                if (buf.length > (token.length || 0)) {\r\n                    token.data = buf.slice(0, token.length);\r\n                }\r\n                delete token.length;\r\n            }\r\n            this.push(token);\r\n        }\r\n        this._token = null;\r\n        this._readHexDigitsCount = 0;\r\n        this._paramStr = '';\r\n        this._mode = 0;\r\n    }\r\n    _handleSpecialOrPush() {\r\n        const token = this._token;\r\n        const param = parseInt(this._paramStr || '0', 10) || 0;\r\n        if (token.type === 2 && token.word === 'bin' && param > 0) {\r\n            this._mode = 4;\r\n            token.data = Buffer.alloc(param);\r\n            token.length = 0;\r\n        }\r\n        else if (token.type === 2 && token.word === '\\'') {\r\n            this._mode = 5;\r\n            token.data = Buffer.alloc(1);\r\n            token.length = 0;\r\n            this._readHexDigitsCount = 0;\r\n        }\r\n        else {\r\n            this._flushToken();\r\n        }\r\n    }\r\n    _handleByte(c) {\r\n        switch (this._mode) {\r\n            case 4: {\r\n                const token = this._token;\r\n                if (token.data && utils_1.isNum(token.length)) {\r\n                    token.data[token.length++] = c;\r\n                }\r\n                if (!utils_1.isNum(token.length) || !token.data || token.length >= token.data.length) {\r\n                    this._flushToken();\r\n                }\r\n                break;\r\n            }\r\n            case 5: {\r\n                const token = this._token;\r\n                const byte = parseInt(String.fromCharCode(c), 16);\r\n                if (isNaN(byte) || !token.data) {\r\n                    console.warn('Bad hex digit');\r\n                }\r\n                else if (this._readHexDigitsCount === 0) {\r\n                    token.data[0] += byte * 16;\r\n                }\r\n                else {\r\n                    token.data[0] += byte;\r\n                }\r\n                this._readHexDigitsCount++;\r\n                if (this._readHexDigitsCount === 2) {\r\n                    token.length = 1;\r\n                    this._flushToken();\r\n                }\r\n                break;\r\n            }\r\n            case 1: {\r\n                if (!isAlpha(c)) {\r\n                    this._token = {\r\n                        type: 2,\r\n                        word: String.fromCharCode(c)\r\n                    };\r\n                    this._handleSpecialOrPush();\r\n                }\r\n                else {\r\n                    this._mode = 2;\r\n                    this._token = {\r\n                        type: 2,\r\n                        word: String.fromCharCode(c)\r\n                    };\r\n                }\r\n                break;\r\n            }\r\n            case 2: {\r\n                const token = this._token;\r\n                if (isAlpha(c)) {\r\n                    token.word += String.fromCharCode(c);\r\n                }\r\n                else if (isNumeric(c) || c === 45) {\r\n                    this._mode = 3;\r\n                    this._paramStr = String.fromCharCode(c);\r\n                }\r\n                else {\r\n                    this._handleSpecialOrPush();\r\n                    if (c !== 32)\r\n                        this._handleByte(c);\r\n                }\r\n                break;\r\n            }\r\n            case 3: {\r\n                if (isNumeric(c)) {\r\n                    this._paramStr += String.fromCharCode(c);\r\n                }\r\n                else {\r\n                    this._handleSpecialOrPush();\r\n                    if (c !== 32)\r\n                        this._handleByte(c);\r\n                }\r\n                break;\r\n            }\r\n            case 0: {\r\n                switch (c) {\r\n                    case 123:\r\n                        this._flushToken();\r\n                        this.push({ type: 0 });\r\n                        break;\r\n                    case 125:\r\n                        this._flushToken();\r\n                        this.push({ type: 1 });\r\n                        break;\r\n                    case 92:\r\n                        this._flushToken();\r\n                        this._mode = 1;\r\n                        break;\r\n                    case 13:\r\n                    case 10:\r\n                        break;\r\n                    default: {\r\n                        const token = this._token;\r\n                        if (!token) {\r\n                            this._token = {\r\n                                type: 3,\r\n                                data: Buffer.alloc(256),\r\n                                length: 1\r\n                            };\r\n                            this._token.data[0] = c;\r\n                        }\r\n                        else if (token && token.type === 3) {\r\n                            if (token.length >= token.data.length) {\r\n                                token.data = Buffer.concat([token.data, Buffer.alloc(256)]);\r\n                            }\r\n                            token.data[token.length++] = c;\r\n                        }\r\n                        else {\r\n                            throw new Error('Unpushed token!');\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                throw new Error('Unknown state!');\r\n        }\r\n    }\r\n    _transform(chunk, encoding, cb) {\r\n        try {\r\n            const buf = utils_1.isStr(chunk) ? Buffer.from(chunk, encoding) : chunk;\r\n            for (let i = 0; i < buf.length; i++) {\r\n                const c = buf[i];\r\n                this._handleByte(c);\r\n            }\r\n        }\r\n        catch (err) {\r\n            return cb(err);\r\n        }\r\n        cb();\r\n    }\r\n    _flush(cb) {\r\n        this._flushToken();\r\n        cb();\r\n    }\r\n}\r\nexports.Tokenize = Tokenize;\r\nexports.default = Tokenize;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isNum = exports.isStr = exports.isDef = void 0;\r\nfunction isDef(thing) {\r\n    return typeof thing !== 'undefined';\r\n}\r\nexports.isDef = isDef;\r\nfunction isStr(thing) {\r\n    return typeof thing === 'string';\r\n}\r\nexports.isStr = isStr;\r\nfunction isNum(thing) {\r\n    return typeof thing === 'number';\r\n}\r\nexports.isNum = isNum;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.words = void 0;\r\nexports.words = {\r\n    \"'\": 1,\r\n    \"-\": 1,\r\n    \"*\": 1,\r\n    \":\": 1,\r\n    \"\\\\\": 1,\r\n    \"_\": 1,\r\n    \"{\": 1,\r\n    \"|\": 1,\r\n    \"}\": 1,\r\n    \"~\": 1,\r\n    \"ab\": 2,\r\n    \"absh\": 3,\r\n    \"abslock\": 4,\r\n    \"absnoovrlp\": 2,\r\n    \"absw\": 3,\r\n    \"acaps\": 2,\r\n    \"acccircle\": 2,\r\n    \"acccomma\": 2,\r\n    \"accdot\": 2,\r\n    \"accnone\": 2,\r\n    \"accunderdot\": 2,\r\n    \"acf\": 3,\r\n    \"adeff\": 3,\r\n    \"additive\": 4,\r\n    \"adeflang\": 3,\r\n    \"adjustright\": 4,\r\n    \"adn\": 3,\r\n    \"aenddoc\": 4,\r\n    \"aendnotes\": 4,\r\n    \"aexpnd\": 3,\r\n    \"af\": 3,\r\n    \"afelev\": 4,\r\n    \"afs\": 3,\r\n    \"aftnbj\": 4,\r\n    \"aftncn\": 5,\r\n    \"aftnnalc\": 4,\r\n    \"aftnnar\": 4,\r\n    \"aftnnauc\": 4,\r\n    \"aftnnchi\": 4,\r\n    \"aftnnchosung\": 4,\r\n    \"aftnncnum\": 4,\r\n    \"aftnndbar\": 4,\r\n    \"aftnndbnum\": 4,\r\n    \"aftnndbnumd\": 4,\r\n    \"aftnndbnumk\": 4,\r\n    \"aftnndbnumt\": 4,\r\n    \"aftnnganada\": 4,\r\n    \"aftnngbnum\": 4,\r\n    \"aftnngbnumd\": 4,\r\n    \"aftnngbnumk\": 4,\r\n    \"aftnngbnuml\": 4,\r\n    \"aftnnrlc\": 4,\r\n    \"aftnnruc\": 4,\r\n    \"aftnnzodiac\": 4,\r\n    \"aftnnzodiacd\": 4,\r\n    \"aftnnzodiacl\": 4,\r\n    \"aftnrestart\": 4,\r\n    \"aftnrstcont\": 4,\r\n    \"aftnsep\": 5,\r\n    \"aftnsepc\": 5,\r\n    \"aftnstart\": 3,\r\n    \"aftntj\": 4,\r\n    \"ai\": 2,\r\n    \"alang\": 3,\r\n    \"allowfieldendsel\": 4,\r\n    \"allprot\": 4,\r\n    \"alntblind\": 4,\r\n    \"alt\": 4,\r\n    \"animtext\": 3,\r\n    \"annotation\": 5,\r\n    \"annotprot\": 4,\r\n    \"ansi\": 4,\r\n    \"ansicpg\": 3,\r\n    \"aoutl\": 2,\r\n    \"ApplyBrkRules\": 4,\r\n    \"ascaps\": 2,\r\n    \"ashad\": 2,\r\n    \"asianbrkrule\": 4,\r\n    \"aspalpha\": 2,\r\n    \"aspnum\": 2,\r\n    \"astrike\": 2,\r\n    \"atnauthor\": 5,\r\n    \"atndate\": 5,\r\n    \"atnicn\": 5,\r\n    \"atnid\": 5,\r\n    \"atnparent\": 5,\r\n    \"atnref\": 5,\r\n    \"atntime\": 5,\r\n    \"atrfend\": 5,\r\n    \"atrfstart\": 5,\r\n    \"aul\": 2,\r\n    \"auld\": 2,\r\n    \"auldb\": 2,\r\n    \"aulnone\": 2,\r\n    \"aulw\": 2,\r\n    \"aup\": 3,\r\n    \"author\": 5,\r\n    \"autofmtoverride\": 4,\r\n    \"b\": 2,\r\n    \"background\": 5,\r\n    \"bdbfhdr\": 4,\r\n    \"bdrrlswsix\": 4,\r\n    \"bgbdiag\": 4,\r\n    \"bgcross\": 4,\r\n    \"bgdcross\": 4,\r\n    \"bgdkbdiag\": 4,\r\n    \"bgdkcross\": 4,\r\n    \"bgdkdcross\": 4,\r\n    \"bgdkfdiag\": 4,\r\n    \"bgdkhoriz\": 4,\r\n    \"bgdkvert\": 4,\r\n    \"bgfdiag\": 4,\r\n    \"bghoriz\": 4,\r\n    \"bgvert\": 4,\r\n    \"bin\": 3,\r\n    \"binfsxn\": 3,\r\n    \"binsxn\": 3,\r\n    \"bkmkcolf\": 3,\r\n    \"bkmkcoll\": 3,\r\n    \"bkmkend\": 5,\r\n    \"bkmkpub\": 4,\r\n    \"bkmkstart\": 5,\r\n    \"bliptag\": 3,\r\n    \"blipuid\": 5,\r\n    \"blipupi\": 3,\r\n    \"blue\": 3,\r\n    \"bookfold\": 4,\r\n    \"bookfoldrev\": 4,\r\n    \"bookfoldsheets\": 3,\r\n    \"box\": 4,\r\n    \"brdrart\": 3,\r\n    \"brdrb\": 4,\r\n    \"brdrbar\": 4,\r\n    \"brdrbtw\": 4,\r\n    \"brdrcf\": 3,\r\n    \"brdrdash\": 4,\r\n    \"brdrdashd\": 4,\r\n    \"brdrdashdd\": 4,\r\n    \"brdrdashdot\": 4,\r\n    \"brdrdashdotdot\": 4,\r\n    \"brdrdashdotstr\": 4,\r\n    \"brdrdashsm\": 4,\r\n    \"brdrdb\": 4,\r\n    \"brdrdot\": 4,\r\n    \"brdremboss\": 4,\r\n    \"brdrengrave\": 4,\r\n    \"brdrframe\": 4,\r\n    \"brdrhair\": 4,\r\n    \"brdrinset\": 4,\r\n    \"brdrl\": 4,\r\n    \"brdrnil\": 4,\r\n    \"brdrnone\": 4,\r\n    \"brdroutset\": 4,\r\n    \"brdrr\": 4,\r\n    \"brdrs\": 4,\r\n    \"brdrsh\": 4,\r\n    \"brdrt\": 4,\r\n    \"brdrtbl\": 4,\r\n    \"brdrth\": 4,\r\n    \"brdrthtnlg\": 4,\r\n    \"brdrthtnmg\": 4,\r\n    \"brdrthtnsg\": 4,\r\n    \"brdrtnthlg\": 4,\r\n    \"brdrtnthmg\": 4,\r\n    \"brdrtnthsg\": 4,\r\n    \"brdrtnthtnlg\": 4,\r\n    \"brdrtnthtnmg\": 4,\r\n    \"brdrtnthtnsg\": 4,\r\n    \"brdrtriple\": 4,\r\n    \"brdrw\": 3,\r\n    \"brdrwavy\": 4,\r\n    \"brdrwavydb\": 4,\r\n    \"brkfrm\": 4,\r\n    \"brsp\": 3,\r\n    \"bullet\": 1,\r\n    \"buptim\": 5,\r\n    \"bxe\": 4,\r\n    \"caccentfive\": 4,\r\n    \"caccentfour\": 4,\r\n    \"caccentone\": 4,\r\n    \"caccentsix\": 4,\r\n    \"caccentthree\": 4,\r\n    \"caccenttwo\": 4,\r\n    \"cachedcolbal\": 4,\r\n    \"caps\": 2,\r\n    \"category\": 5,\r\n    \"cb\": 3,\r\n    \"cbackgroundone\": 4,\r\n    \"cbackgroundtwo\": 4,\r\n    \"cbpat\": 3,\r\n    \"cchs\": 3,\r\n    \"cell\": 1,\r\n    \"cellx\": 3,\r\n    \"cf\": 3,\r\n    \"cfollowedhyperlink\": 4,\r\n    \"cfpat\": 3,\r\n    \"cgrid\": 3,\r\n    \"charrsid\": 3,\r\n    \"charscalex\": 3,\r\n    \"chatn\": 1,\r\n    \"chbgbdiag\": 4,\r\n    \"chbgcross\": 4,\r\n    \"chbgdcross\": 4,\r\n    \"chbgdkbdiag\": 4,\r\n    \"chbgdkcross\": 4,\r\n    \"chbgdkdcross\": 4,\r\n    \"chbgdkfdiag\": 4,\r\n    \"chbgdkhoriz\": 4,\r\n    \"chbgdkvert\": 4,\r\n    \"chbgfdiag\": 4,\r\n    \"chbghoriz\": 4,\r\n    \"chbgvert\": 4,\r\n    \"chbrdr\": 4,\r\n    \"chcbpat\": 3,\r\n    \"chcfpat\": 3,\r\n    \"chdate\": 1,\r\n    \"chdpa\": 1,\r\n    \"chdpl\": 1,\r\n    \"chftn\": 1,\r\n    \"chftnsep\": 1,\r\n    \"chftnsepc\": 1,\r\n    \"chpgn\": 1,\r\n    \"chhres\": 3,\r\n    \"chshdng\": 3,\r\n    \"chtime\": 1,\r\n    \"chyperlink\": 4,\r\n    \"clbgbdiag\": 4,\r\n    \"clbgcross\": 4,\r\n    \"clbgdcross\": 4,\r\n    \"clbgdkbdiag\": 4,\r\n    \"clbgdkcross\": 4,\r\n    \"clbgdkdcross\": 4,\r\n    \"clbgdkfdiag\": 4,\r\n    \"clbgdkhor\": 4,\r\n    \"clbgdkvert\": 4,\r\n    \"clbgfdiag\": 4,\r\n    \"clbghoriz\": 4,\r\n    \"clbgvert\": 4,\r\n    \"clbrdrb\": 4,\r\n    \"clbrdrl\": 4,\r\n    \"clbrdrr\": 4,\r\n    \"clbrdrt\": 4,\r\n    \"clcbpat\": 3,\r\n    \"clcbpatraw\": 3,\r\n    \"clcfpat\": 3,\r\n    \"clcfpatraw\": 3,\r\n    \"cldel\": 4,\r\n    \"cldelauth\": 3,\r\n    \"cldeldttm\": 3,\r\n    \"cldgll\": 4,\r\n    \"cldglu\": 4,\r\n    \"clFitText\": 4,\r\n    \"clftsWidth\": 3,\r\n    \"clhidemark\": 4,\r\n    \"clins\": 4,\r\n    \"clinsauth\": 3,\r\n    \"clinsdttm\": 3,\r\n    \"clmgf\": 4,\r\n    \"clmrg\": 4,\r\n    \"clmrgd\": 4,\r\n    \"clmrgdauth\": 3,\r\n    \"clmrgddttm\": 3,\r\n    \"clmrgdr\": 4,\r\n    \"clNoWrap\": 4,\r\n    \"clpadb\": 3,\r\n    \"clpadfb\": 3,\r\n    \"clpadfl\": 3,\r\n    \"clpadfr\": 3,\r\n    \"clpadft\": 3,\r\n    \"clpadl\": 3,\r\n    \"clpadr\": 3,\r\n    \"clpadt\": 3,\r\n    \"clspb\": 3,\r\n    \"clspfb\": 3,\r\n    \"clspfl\": 3,\r\n    \"clspfr\": 3,\r\n    \"clspft\": 3,\r\n    \"clspl\": 3,\r\n    \"clspr\": 3,\r\n    \"clspt\": 3,\r\n    \"clshdng\": 3,\r\n    \"clshdngraw\": 3,\r\n    \"clshdrawnil\": 4,\r\n    \"clsplit\": 4,\r\n    \"clsplitr\": 4,\r\n    \"cltxbtlr\": 4,\r\n    \"cltxlrtb\": 4,\r\n    \"cltxlrtbv\": 4,\r\n    \"cltxtbrl\": 4,\r\n    \"cltxtbrlv\": 4,\r\n    \"clvertalb\": 4,\r\n    \"clvertalc\": 4,\r\n    \"clvertalt\": 4,\r\n    \"clvmgf\": 4,\r\n    \"clvmrg\": 4,\r\n    \"clwWidth\": 3,\r\n    \"cmaindarkone\": 4,\r\n    \"cmaindarktwo\": 4,\r\n    \"cmainlightone\": 4,\r\n    \"cmainlighttwo\": 4,\r\n    \"collapsed\": 4,\r\n    \"colno\": 3,\r\n    \"colorschememapping\": 5,\r\n    \"colortbl\": 5,\r\n    \"cols\": 3,\r\n    \"colsr\": 3,\r\n    \"colsx\": 3,\r\n    \"column\": 1,\r\n    \"colw\": 3,\r\n    \"comment\": 5,\r\n    \"company\": 5,\r\n    \"contextualspace\": 4,\r\n    \"cpg\": 3,\r\n    \"crauth\": 3,\r\n    \"crdate\": 3,\r\n    \"creatim\": 5,\r\n    \"cs\": 3,\r\n    \"cshade\": 3,\r\n    \"ctextone\": 4,\r\n    \"ctexttwo\": 4,\r\n    \"ctint\": 3,\r\n    \"ctrl\": 4,\r\n    \"cts\": 3,\r\n    \"cufi\": 3,\r\n    \"culi\": 3,\r\n    \"curi\": 3,\r\n    \"cvmme\": 4,\r\n    \"datafield\": 5,\r\n    \"datastore\": 5,\r\n    \"date\": 4,\r\n    \"dbch\": 4,\r\n    \"defchp\": 5,\r\n    \"deff\": 3,\r\n    \"defformat\": 4,\r\n    \"deflang\": 3,\r\n    \"deflangfe\": 3,\r\n    \"defpap\": 5,\r\n    \"defshp\": 4,\r\n    \"deftab\": 3,\r\n    \"deleted\": 2,\r\n    \"delrsid\": 3,\r\n    \"dfrauth\": 3,\r\n    \"dfrdate\": 3,\r\n    \"dfrmtxtx\": 3,\r\n    \"dfrmtxty\": 3,\r\n    \"dfrstart\": 3,\r\n    \"dfrstop\": 3,\r\n    \"dfrxst\": 3,\r\n    \"dghorigin\": 3,\r\n    \"dghshow\": 3,\r\n    \"dghspace\": 3,\r\n    \"dgmargin\": 4,\r\n    \"dgsnap\": 4,\r\n    \"dgvorigin\": 3,\r\n    \"dgvshow\": 3,\r\n    \"dgvspace\": 3,\r\n    \"dibitmap\": 3,\r\n    \"disabled\": 2,\r\n    \"dn\": 3,\r\n    \"dntblnsbdb\": 4,\r\n    \"do\": 5,\r\n    \"dobxcolumn\": 4,\r\n    \"dobxmargin\": 4,\r\n    \"dobxpage\": 4,\r\n    \"dobymargin\": 4,\r\n    \"dobypage\": 4,\r\n    \"dobypara\": 4,\r\n    \"doccomm\": 5,\r\n    \"doctemp\": 4,\r\n    \"doctype\": 3,\r\n    \"docvar\": 5,\r\n    \"dodhgt\": 3,\r\n    \"dolock\": 4,\r\n    \"donotembedlingdata\": 3,\r\n    \"donotembedsysfont\": 3,\r\n    \"donotshowcomments\": 4,\r\n    \"donotshowinsdel\": 4,\r\n    \"donotshowmarkup\": 4,\r\n    \"donotshowprops\": 4,\r\n    \"dpaendhol\": 4,\r\n    \"dpaendl\": 3,\r\n    \"dpaendsol\": 4,\r\n    \"dpaendw\": 3,\r\n    \"dparc\": 4,\r\n    \"dparcflipx\": 4,\r\n    \"dparcflipy\": 4,\r\n    \"dpastarthol\": 4,\r\n    \"dpastartl\": 3,\r\n    \"dpastartsol\": 4,\r\n    \"dpastartw\": 3,\r\n    \"dpcallout\": 4,\r\n    \"dpcoa\": 3,\r\n    \"dpcoaccent\": 4,\r\n    \"dpcobestfit\": 4,\r\n    \"dpcoborder\": 4,\r\n    \"dpcodabs\": 4,\r\n    \"dpcodbottom\": 4,\r\n    \"dpcodcenter\": 4,\r\n    \"dpcodescent\": 3,\r\n    \"dpcodtop\": 4,\r\n    \"dpcolength\": 3,\r\n    \"dpcominusx\": 4,\r\n    \"dpcominusy\": 4,\r\n    \"dpcooffset\": 3,\r\n    \"dpcosmarta\": 4,\r\n    \"dpcotdouble\": 4,\r\n    \"dpcotright\": 4,\r\n    \"dpcotsingle\": 4,\r\n    \"dpcottriple\": 4,\r\n    \"dpcount\": 3,\r\n    \"dpellipse\": 4,\r\n    \"dpendgroup\": 4,\r\n    \"dpfillbgcb\": 3,\r\n    \"dpfillbgcg\": 3,\r\n    \"dpfillbgcr\": 3,\r\n    \"dpfillbggray\": 3,\r\n    \"dpfillbgpal\": 4,\r\n    \"dpfillfgcb\": 3,\r\n    \"dpfillfgcg\": 3,\r\n    \"dpfillfgcr\": 3,\r\n    \"dpfillfggray\": 3,\r\n    \"dpfillfgpal\": 4,\r\n    \"dpfillpat\": 3,\r\n    \"dpgroup\": 4,\r\n    \"dpline\": 4,\r\n    \"dplinecob\": 3,\r\n    \"dplinecog\": 3,\r\n    \"dplinecor\": 3,\r\n    \"dplinedado\": 4,\r\n    \"dplinedadodo\": 4,\r\n    \"dplinedash\": 4,\r\n    \"dplinedot\": 4,\r\n    \"dplinegray\": 3,\r\n    \"dplinehollow\": 4,\r\n    \"dplinepal\": 4,\r\n    \"dplinesolid\": 4,\r\n    \"dplinew\": 3,\r\n    \"dppolycount\": 3,\r\n    \"dppolygon\": 4,\r\n    \"dppolyline\": 4,\r\n    \"dpptx\": 3,\r\n    \"dppty\": 3,\r\n    \"dprect\": 4,\r\n    \"dproundr\": 4,\r\n    \"dpshadow\": 4,\r\n    \"dpshadx\": 3,\r\n    \"dpshady\": 3,\r\n    \"dptxbtlr\": 4,\r\n    \"dptxbx\": 4,\r\n    \"dptxbxmar\": 3,\r\n    \"dptxbxtext\": 5,\r\n    \"dptxlrtb\": 4,\r\n    \"dptxlrtbv\": 4,\r\n    \"dptxtbrl\": 4,\r\n    \"dptxtbrlv\": 4,\r\n    \"dpx\": 3,\r\n    \"dpxsize\": 3,\r\n    \"dpy\": 3,\r\n    \"dpysize\": 3,\r\n    \"dropcapli\": 3,\r\n    \"dropcapt\": 3,\r\n    \"ds\": 3,\r\n    \"dxfrtext\": 3,\r\n    \"dy\": 3,\r\n    \"ebcend\": 5,\r\n    \"ebcstart\": 5,\r\n    \"edmins\": 3,\r\n    \"embo\": 2,\r\n    \"emdash\": 1,\r\n    \"emfblip\": 4,\r\n    \"emspace\": 1,\r\n    \"endash\": 1,\r\n    \"enddoc\": 4,\r\n    \"endnhere\": 4,\r\n    \"endnotes\": 4,\r\n    \"enforceprot\": 3,\r\n    \"enspace\": 1,\r\n    \"expnd\": 3,\r\n    \"expndtw\": 3,\r\n    \"expshrtn\": 4,\r\n    \"f\": 3,\r\n    \"faauto\": 4,\r\n    \"facenter\": 4,\r\n    \"facingp\": 4,\r\n    \"factoidname\": 5,\r\n    \"fafixed\": 4,\r\n    \"fahang\": 4,\r\n    \"falt\": 5,\r\n    \"faroman\": 4,\r\n    \"favar\": 4,\r\n    \"fbias\": 3,\r\n    \"fbidi\": 4,\r\n    \"fbidis\": 4,\r\n    \"fbimajor\": 4,\r\n    \"fbiminor\": 4,\r\n    \"fchars\": 5,\r\n    \"fcharset\": 3,\r\n    \"fcs\": 3,\r\n    \"fdbmajor\": 4,\r\n    \"fdbminor\": 4,\r\n    \"fdecor\": 4,\r\n    \"felnbrelev\": 4,\r\n    \"fet\": 3,\r\n    \"fetch\": 4,\r\n    \"ffdefres\": 3,\r\n    \"ffdeftext\": 5,\r\n    \"ffentrymcr\": 5,\r\n    \"ffexitmcr\": 5,\r\n    \"ffformat\": 5,\r\n    \"ffhaslistbox\": 3,\r\n    \"ffhelptext\": 5,\r\n    \"ffhps\": 3,\r\n    \"ffl\": 5,\r\n    \"ffmaxlen\": 3,\r\n    \"ffname\": 5,\r\n    \"ffownhelp\": 3,\r\n    \"ffownstat\": 3,\r\n    \"ffprot\": 3,\r\n    \"ffrecalc\": 3,\r\n    \"ffres\": 3,\r\n    \"ffsize\": 3,\r\n    \"ffstattext\": 5,\r\n    \"fftype\": 3,\r\n    \"fftypetxt\": 3,\r\n    \"fhimajor\": 4,\r\n    \"fhiminor\": 4,\r\n    \"fi\": 3,\r\n    \"fid\": 3,\r\n    \"field\": 5,\r\n    \"file\": 5,\r\n    \"filetbl\": 5,\r\n    \"fittext\": 3,\r\n    \"fjgothic\": 4,\r\n    \"fjminchou\": 4,\r\n    \"fldalt\": 4,\r\n    \"flddirty\": 4,\r\n    \"fldedit\": 4,\r\n    \"fldinst\": 5,\r\n    \"fldlock\": 4,\r\n    \"fldpriv\": 4,\r\n    \"fldrslt\": 5,\r\n    \"fldtype\": 5,\r\n    \"flomajor\": 4,\r\n    \"flominor\": 4,\r\n    \"fmodern\": 4,\r\n    \"fn\": 3,\r\n    \"fname\": 5,\r\n    \"fnetwork\": 4,\r\n    \"fnil\": 4,\r\n    \"fnonfilesys\": 4,\r\n    \"fontemb\": 5,\r\n    \"fontfile\": 5,\r\n    \"fonttbl\": 5,\r\n    \"footer\": 5,\r\n    \"footerf\": 5,\r\n    \"footerl\": 5,\r\n    \"footerr\": 5,\r\n    \"footery\": 3,\r\n    \"footnote\": 5,\r\n    \"forceupgrade\": 4,\r\n    \"formatConverter\": 5,\r\n    \"formdisp\": 4,\r\n    \"formfield\": 5,\r\n    \"formprot\": 4,\r\n    \"formshade\": 4,\r\n    \"fosnum\": 3,\r\n    \"fprq\": 3,\r\n    \"fracwidth\": 4,\r\n    \"frelative\": 3,\r\n    \"frmtxbtlr\": 4,\r\n    \"frmtxlrtb\": 4,\r\n    \"frmtxlrtbv\": 4,\r\n    \"frmtxtbrl\": 4,\r\n    \"frmtxtbrlv\": 4,\r\n    \"froman\": 4,\r\n    \"fromhtml\": 3,\r\n    \"fromtext\": 4,\r\n    \"fs\": 3,\r\n    \"fscript\": 4,\r\n    \"fswiss\": 4,\r\n    \"ftech\": 4,\r\n    \"ftnalt\": 4,\r\n    \"ftnbj\": 4,\r\n    \"ftncn\": 5,\r\n    \"ftnil\": 4,\r\n    \"ftnlytwnine\": 4,\r\n    \"ftnnalc\": 4,\r\n    \"ftnnar\": 4,\r\n    \"ftnnauc\": 4,\r\n    \"ftnnchi\": 4,\r\n    \"ftnnchosung\": 4,\r\n    \"ftnncnum\": 4,\r\n    \"ftnndbar\": 4,\r\n    \"ftnndbnum\": 4,\r\n    \"ftnndbnumd\": 4,\r\n    \"ftnndbnumk\": 4,\r\n    \"ftnndbnumt\": 4,\r\n    \"ftnnganada\": 4,\r\n    \"ftnngbnum\": 4,\r\n    \"ftnngbnumd\": 4,\r\n    \"ftnngbnumk\": 4,\r\n    \"ftnngbnuml\": 4,\r\n    \"ftnnrlc\": 4,\r\n    \"ftnnruc\": 4,\r\n    \"ftnnzodiac\": 4,\r\n    \"ftnnzodiacd\": 4,\r\n    \"ftnnzodiacl\": 4,\r\n    \"ftnrestart\": 4,\r\n    \"ftnrstcont\": 4,\r\n    \"ftnrstpg\": 4,\r\n    \"ftnsep\": 5,\r\n    \"ftnsepc\": 5,\r\n    \"ftnstart\": 3,\r\n    \"ftntj\": 4,\r\n    \"fttruetype\": 4,\r\n    \"fvaliddos\": 4,\r\n    \"fvalidhpfs\": 4,\r\n    \"fvalidmac\": 4,\r\n    \"fvalidntfs\": 4,\r\n    \"g\": 5,\r\n    \"gcw\": 3,\r\n    \"generator\": 5,\r\n    \"green\": 3,\r\n    \"grfdocevents\": 3,\r\n    \"gridtbl\": 5,\r\n    \"gutter\": 3,\r\n    \"gutterprl\": 4,\r\n    \"guttersxn\": 3,\r\n    \"header\": 5,\r\n    \"headerf\": 5,\r\n    \"headerl\": 5,\r\n    \"headerr\": 5,\r\n    \"headery\": 3,\r\n    \"hich\": 4,\r\n    \"highlight\": 3,\r\n    \"hl\": 5,\r\n    \"hlfr\": 5,\r\n    \"hlinkbase\": 5,\r\n    \"hlloc\": 5,\r\n    \"hlsrc\": 5,\r\n    \"horzdoc\": 4,\r\n    \"horzsect\": 4,\r\n    \"horzvert\": 3,\r\n    \"hr\": 3,\r\n    \"hres\": 3,\r\n    \"hrule\": 4,\r\n    \"hsv\": 5,\r\n    \"htmautsp\": 4,\r\n    \"htmlbase\": 4,\r\n    \"htmlrtf\": 2,\r\n    \"htmltag\": 5,\r\n    \"hwelev\": 4,\r\n    \"hyphauto\": 2,\r\n    \"hyphcaps\": 2,\r\n    \"hyphconsec\": 3,\r\n    \"hyphhotz\": 3,\r\n    \"hyphpar\": 2,\r\n    \"i\": 2,\r\n    \"id\": 3,\r\n    \"ignoremixedcontent\": 3,\r\n    \"ilfomacatclnup\": 3,\r\n    \"ilvl\": 3,\r\n    \"impr\": 2,\r\n    \"indmirror\": 4,\r\n    \"indrlsweleven\": 4,\r\n    \"info\": 5,\r\n    \"insrsid\": 3,\r\n    \"intbl\": 4,\r\n    \"ipgp\": 3,\r\n    \"irowband\": 3,\r\n    \"irow\": 3,\r\n    \"itap\": 3,\r\n    \"ixe\": 4,\r\n    \"jcompress\": 4,\r\n    \"jexpand\": 4,\r\n    \"jis\": 4,\r\n    \"jpegblip\": 4,\r\n    \"jsksu\": 4,\r\n    \"keep\": 4,\r\n    \"keepn\": 4,\r\n    \"kerning\": 3,\r\n    \"keycode\": 5,\r\n    \"keywords\": 5,\r\n    \"krnprsnet\": 4,\r\n    \"ksulang\": 3,\r\n    \"jclisttab\": 4,\r\n    \"landscape\": 4,\r\n    \"lang\": 3,\r\n    \"langfe\": 3,\r\n    \"langfenp\": 3,\r\n    \"langnp\": 3,\r\n    \"lastrow\": 4,\r\n    \"latentstyles\": 5,\r\n    \"lbr\": 3,\r\n    \"lchars\": 5,\r\n    \"ldblquote\": 1,\r\n    \"level\": 3,\r\n    \"levelfollow\": 3,\r\n    \"levelindent\": 3,\r\n    \"leveljc\": 3,\r\n    \"leveljcn\": 3,\r\n    \"levellegal\": 3,\r\n    \"levelnfc\": 3,\r\n    \"levelnfcn\": 3,\r\n    \"levelnorestart\": 3,\r\n    \"levelnumbers\": 5,\r\n    \"levelold\": 3,\r\n    \"levelpicture\": 3,\r\n    \"levelpicturenosize\": 4,\r\n    \"levelprev\": 3,\r\n    \"levelprevspace\": 3,\r\n    \"levelspace\": 3,\r\n    \"levelstartat\": 3,\r\n    \"leveltemplateid\": 3,\r\n    \"leveltext\": 5,\r\n    \"lfolevel\": 5,\r\n    \"li\": 3,\r\n    \"line\": 1,\r\n    \"linebetcol\": 4,\r\n    \"linecont\": 4,\r\n    \"linemod\": 3,\r\n    \"lineppage\": 4,\r\n    \"linerestart\": 4,\r\n    \"linestart\": 3,\r\n    \"linestarts\": 3,\r\n    \"linex\": 3,\r\n    \"linkself\": 4,\r\n    \"linkstyles\": 4,\r\n    \"linkval\": 5,\r\n    \"lin\": 3,\r\n    \"lisa\": 3,\r\n    \"lisb\": 3,\r\n    \"list\": 5,\r\n    \"listhybrid\": 4,\r\n    \"listid\": 3,\r\n    \"listlevel\": 5,\r\n    \"listname\": 5,\r\n    \"listoverride\": 5,\r\n    \"listoverridecount\": 3,\r\n    \"listoverrideformat\": 3,\r\n    \"listoverridestartat\": 4,\r\n    \"listoverridetable\": 5,\r\n    \"listpicture\": 5,\r\n    \"listrestarthdn\": 3,\r\n    \"listsimple\": 3,\r\n    \"liststyleid\": 3,\r\n    \"liststylename\": 5,\r\n    \"listtable\": 5,\r\n    \"listtemplateid\": 3,\r\n    \"listtext\": 5,\r\n    \"lnbrkrule\": 4,\r\n    \"lndscpsxn\": 4,\r\n    \"lnongrid\": 4,\r\n    \"loch\": 4,\r\n    \"lquote\": 1,\r\n    \"ls\": 3,\r\n    \"lsdlocked\": 3,\r\n    \"lsdlockeddef\": 3,\r\n    \"lsdlockedexcept\": 5,\r\n    \"lsdpriority\": 3,\r\n    \"lsdprioritydef\": 3,\r\n    \"lsdqformat\": 3,\r\n    \"lsdqformatdef\": 3,\r\n    \"lsdsemihidden\": 3,\r\n    \"lsdsemihiddendef\": 3,\r\n    \"lsdstimax\": 3,\r\n    \"lsdunhideused\": 3,\r\n    \"lsdunhideuseddef\": 3,\r\n    \"ltrch\": 4,\r\n    \"ltrdoc\": 4,\r\n    \"ltrmark\": 1,\r\n    \"ltrpar\": 4,\r\n    \"ltrrow\": 4,\r\n    \"ltrsect\": 4,\r\n    \"lvltentative\": 4,\r\n    \"lytcalctblwd\": 4,\r\n    \"lytexcttp\": 4,\r\n    \"lytprtmet\": 4,\r\n    \"lyttblrtgr\": 4,\r\n    \"mac\": 4,\r\n    \"macc\": 5,\r\n    \"maccPr\": 5,\r\n    \"macpict\": 4,\r\n    \"mailmerge\": 5,\r\n    \"makebackup\": 4,\r\n    \"maln\": 5,\r\n    \"malnScr\": 5,\r\n    \"manager\": 5,\r\n    \"margb\": 3,\r\n    \"margbsxn\": 3,\r\n    \"margl\": 3,\r\n    \"marglsxn\": 3,\r\n    \"margmirror\": 4,\r\n    \"margmirsxn\": 4,\r\n    \"margPr\": 5,\r\n    \"margr\": 3,\r\n    \"margrsxn\": 3,\r\n    \"margSz\": 3,\r\n    \"margt\": 3,\r\n    \"margtsxn\": 3,\r\n    \"mbar\": 5,\r\n    \"mbarPr\": 5,\r\n    \"mbaseJc\": 5,\r\n    \"mbegChr\": 5,\r\n    \"mborderBox\": 5,\r\n    \"mborderBoxPr\": 5,\r\n    \"mbox\": 5,\r\n    \"mboxPr\": 5,\r\n    \"mbrk\": 3,\r\n    \"mbrkBin\": 3,\r\n    \"mbrkBinSub\": 3,\r\n    \"mcGp\": 3,\r\n    \"mcGpRule\": 3,\r\n    \"mchr\": 5,\r\n    \"mcount\": 5,\r\n    \"mcSp\": 3,\r\n    \"mctrlPr\": 5,\r\n    \"md\": 5,\r\n    \"mdefJc\": 3,\r\n    \"mdeg\": 5,\r\n    \"mdegHide\": 5,\r\n    \"mden\": 5,\r\n    \"mdiff\": 5,\r\n    \"mdiffSty\": 3,\r\n    \"mdispDef\": 3,\r\n    \"mdPr\": 5,\r\n    \"me\": 5,\r\n    \"mendChr\": 5,\r\n    \"meqArr\": 5,\r\n    \"meqArrPr\": 5,\r\n    \"mf\": 5,\r\n    \"mfName\": 5,\r\n    \"mfPr\": 5,\r\n    \"mfunc\": 5,\r\n    \"mfuncPr\": 5,\r\n    \"mgroupChr\": 5,\r\n    \"mgroupChrPr\": 5,\r\n    \"mgrow\": 5,\r\n    \"mhideBot\": 5,\r\n    \"mhideLeft\": 5,\r\n    \"mhideRight\": 5,\r\n    \"mhideTop\": 5,\r\n    \"mhtmltag\": 5,\r\n    \"min\": 3,\r\n    \"minterSp\": 3,\r\n    \"mintLim\": 3,\r\n    \"mintraSp\": 3,\r\n    \"mjc\": 3,\r\n    \"mlim\": 5,\r\n    \"mlimLoc\": 5,\r\n    \"mlimLow\": 5,\r\n    \"mlimLowPr\": 5,\r\n    \"mlimUpp\": 5,\r\n    \"mlimUppPr\": 5,\r\n    \"mlit\": 4,\r\n    \"mlMargin\": 3,\r\n    \"mm\": 5,\r\n    \"mmaddfieldname\": 5,\r\n    \"mmath\": 5,\r\n    \"mmathFont\": 3,\r\n    \"mmathPict\": 5,\r\n    \"mmathPr\": 5,\r\n    \"mmattach\": 4,\r\n    \"mmaxDist\": 5,\r\n    \"mmblanklines\": 4,\r\n    \"mmc\": 5,\r\n    \"mmcJc\": 5,\r\n    \"mmconnectstr\": 5,\r\n    \"mmconnectstrdata\": 5,\r\n    \"mmcPr\": 5,\r\n    \"mmcs\": 5,\r\n    \"mmdatasource\": 5,\r\n    \"mmdatatypeaccess\": 4,\r\n    \"mmdatatypeexcel\": 4,\r\n    \"mmdatatypefile\": 4,\r\n    \"mmdatatypeodbc\": 4,\r\n    \"mmdatatypeodso\": 4,\r\n    \"mmdatatypeqt\": 4,\r\n    \"mmdefaultsql\": 4,\r\n    \"mmdestemail\": 4,\r\n    \"mmdestfax\": 4,\r\n    \"mmdestnewdoc\": 4,\r\n    \"mmdestprinter\": 4,\r\n    \"mmerrors\": 3,\r\n    \"mmfttypeaddress\": 4,\r\n    \"mmfttypebarcode\": 4,\r\n    \"mmfttypedbcolumn\": 4,\r\n    \"mmfttypemapped\": 4,\r\n    \"mmfttypenull\": 4,\r\n    \"mmfttypesalutation\": 4,\r\n    \"mmheadersource\": 5,\r\n    \"mmjdsotype\": 3,\r\n    \"mmlinktoquery\": 4,\r\n    \"mmmailsubject\": 5,\r\n    \"mmmaintypecatalog\": 4,\r\n    \"mmmaintypeemail\": 4,\r\n    \"mmmaintypeenvelopes\": 4,\r\n    \"mmmaintypefax\": 4,\r\n    \"mmmaintypelabels\": 4,\r\n    \"mmmaintypeletters\": 4,\r\n    \"mmodso\": 5,\r\n    \"mmodsoactive\": 3,\r\n    \"mmodsocoldelim\": 3,\r\n    \"mmodsocolumn\": 3,\r\n    \"mmodsodynaddr\": 3,\r\n    \"mmodsofhdr\": 3,\r\n    \"mmodsofilter\": 5,\r\n    \"mmodsofldmpdata\": 5,\r\n    \"mmodsofmcolumn\": 3,\r\n    \"mmodsohash\": 3,\r\n    \"mmodsolid\": 3,\r\n    \"mmodsomappedname\": 5,\r\n    \"mmodsoname\": 5,\r\n    \"mmodsorecipdata\": 5,\r\n    \"mmodsosort\": 5,\r\n    \"mmodsosrc\": 5,\r\n    \"mmodsotable\": 5,\r\n    \"mmodsoudl\": 5,\r\n    \"mmodsoudldata\": 5,\r\n    \"mmodsouniquetag\": 5,\r\n    \"mmPr\": 5,\r\n    \"mmquery\": 5,\r\n    \"mmr\": 5,\r\n    \"mmreccur\": 3,\r\n    \"mmshowdata\": 4,\r\n    \"mnary\": 5,\r\n    \"mnaryLim\": 3,\r\n    \"mnaryPr\": 5,\r\n    \"mnoBreak\": 5,\r\n    \"mnor\": 4,\r\n    \"mnum\": 5,\r\n    \"mo\": 3,\r\n    \"mobjDist\": 5,\r\n    \"moMath\": 5,\r\n    \"moMathPara\": 5,\r\n    \"moMathParaPr\": 5,\r\n    \"mopEmu\": 5,\r\n    \"mphant\": 5,\r\n    \"mphantPr\": 5,\r\n    \"mplcHide\": 5,\r\n    \"mpos\": 5,\r\n    \"mpostSp\": 3,\r\n    \"mpreSp\": 3,\r\n    \"mr\": 5,\r\n    \"mrad\": 5,\r\n    \"mradPr\": 5,\r\n    \"mrMargin\": 3,\r\n    \"mrPr\": 5,\r\n    \"mrSp\": 3,\r\n    \"mrSpRule\": 3,\r\n    \"mscr\": 3,\r\n    \"msepChr\": 5,\r\n    \"mshow\": 5,\r\n    \"mshp\": 5,\r\n    \"msmallFrac\": 3,\r\n    \"msmcap\": 4,\r\n    \"msPre\": 5,\r\n    \"msPrePr\": 5,\r\n    \"msSub\": 5,\r\n    \"msSubPr\": 5,\r\n    \"msSubSup\": 5,\r\n    \"msSubSupPr\": 5,\r\n    \"msSup\": 5,\r\n    \"msSupPr\": 5,\r\n    \"mstrikeBLTR\": 5,\r\n    \"mstrikeH\": 5,\r\n    \"mstrikeTLBR\": 5,\r\n    \"mstrikeV\": 5,\r\n    \"msty\": 3,\r\n    \"msub\": 5,\r\n    \"msubHide\": 5,\r\n    \"msup\": 5,\r\n    \"msupHide\": 5,\r\n    \"mtransp\": 5,\r\n    \"mtype\": 5,\r\n    \"muser\": 4,\r\n    \"mvauth\": 3,\r\n    \"mvdate\": 3,\r\n    \"mvertJc\": 5,\r\n    \"mvf\": 4,\r\n    \"mvfmf\": 5,\r\n    \"mvfml\": 5,\r\n    \"mvt\": 4,\r\n    \"mvtof\": 5,\r\n    \"mvtol\": 5,\r\n    \"mwrapIndent\": 3,\r\n    \"mwrapRight\": 3,\r\n    \"mzeroAsc\": 5,\r\n    \"mzeroDesc\": 5,\r\n    \"mzeroWid\": 5,\r\n    \"nestcell\": 1,\r\n    \"nestrow\": 1,\r\n    \"nesttableprops\": 5,\r\n    \"newtblstyruls\": 4,\r\n    \"nextfile\": 5,\r\n    \"noafcnsttbl\": 4,\r\n    \"nobrkwrptbl\": 4,\r\n    \"nocolbal\": 4,\r\n    \"nocompatoptions\": 4,\r\n    \"nocwrap\": 4,\r\n    \"nocxsptable\": 4,\r\n    \"noextrasprl\": 4,\r\n    \"nofchars\": 3,\r\n    \"nofcharsws\": 3,\r\n    \"nofeaturethrottle\": 4,\r\n    \"nofpages\": 3,\r\n    \"nofwords\": 3,\r\n    \"nogrowautofit\": 4,\r\n    \"noindnmbrts\": 4,\r\n    \"nojkernpunct\": 4,\r\n    \"nolead\": 4,\r\n    \"noline\": 4,\r\n    \"nolnhtadjtbl\": 4,\r\n    \"nonesttables\": 5,\r\n    \"nonshppict\": 5,\r\n    \"nooverflow\": 4,\r\n    \"noproof\": 4,\r\n    \"noqfpromote\": 4,\r\n    \"nosectexpand\": 4,\r\n    \"nosnaplinegrid\": 4,\r\n    \"nospaceforul\": 4,\r\n    \"nosupersub\": 4,\r\n    \"notabind\": 4,\r\n    \"notbrkcnstfrctbl\": 4,\r\n    \"notcvasp\": 4,\r\n    \"notvatxbx\": 4,\r\n    \"nouicompat\": 4,\r\n    \"noultrlspc\": 4,\r\n    \"nowidctlpar\": 4,\r\n    \"nowrap\": 4,\r\n    \"nowwrap\": 4,\r\n    \"noxlattoyen\": 4,\r\n    \"objalias\": 5,\r\n    \"objalign\": 3,\r\n    \"objattph\": 4,\r\n    \"objautlink\": 4,\r\n    \"objclass\": 5,\r\n    \"objcropb\": 3,\r\n    \"objcropl\": 3,\r\n    \"objcropr\": 3,\r\n    \"objcropt\": 3,\r\n    \"objdata\": 5,\r\n    \"object\": 5,\r\n    \"objemb\": 4,\r\n    \"objh\": 3,\r\n    \"objhtml\": 4,\r\n    \"objicemb\": 4,\r\n    \"objlink\": 4,\r\n    \"objlock\": 4,\r\n    \"objname\": 5,\r\n    \"objocx\": 4,\r\n    \"objpub\": 4,\r\n    \"objscalex\": 3,\r\n    \"objscaley\": 3,\r\n    \"objsect\": 5,\r\n    \"objsetsize\": 4,\r\n    \"objsub\": 4,\r\n    \"objtime\": 5,\r\n    \"objtransy\": 3,\r\n    \"objupdate\": 4,\r\n    \"objw\": 3,\r\n    \"ogutter\": 3,\r\n    \"oldas\": 4,\r\n    \"oldcprops\": 5,\r\n    \"oldlinewrap\": 4,\r\n    \"oldpprops\": 5,\r\n    \"oldsprops\": 5,\r\n    \"oldtprops\": 5,\r\n    \"oleclsid\": 5,\r\n    \"operator\": 5,\r\n    \"otblrul\": 4,\r\n    \"outl\": 2,\r\n    \"outlinelevel\": 3,\r\n    \"overlay\": 4,\r\n    \"page\": 1,\r\n    \"pagebb\": 4,\r\n    \"panose\": 5,\r\n    \"paperh\": 3,\r\n    \"paperw\": 3,\r\n    \"par\": 1,\r\n    \"pararsid\": 3,\r\n    \"pard\": 4,\r\n    \"password\": 5,\r\n    \"passwordhash\": 5,\r\n    \"pc\": 4,\r\n    \"pca\": 4,\r\n    \"pgbrdrb\": 4,\r\n    \"pgbrdrfoot\": 4,\r\n    \"pgbrdrhead\": 4,\r\n    \"pgbrdrl\": 4,\r\n    \"pgbrdropt\": 3,\r\n    \"pgbrdrr\": 4,\r\n    \"pgbrdrsnap\": 4,\r\n    \"pgbrdrt\": 4,\r\n    \"pghsxn\": 3,\r\n    \"pgnbidia\": 4,\r\n    \"pgnbidib\": 4,\r\n    \"pgnchosung\": 4,\r\n    \"pgncnum\": 4,\r\n    \"pgncont\": 4,\r\n    \"pgndbnum\": 4,\r\n    \"pgndbnumd\": 4,\r\n    \"pgndbnumk\": 4,\r\n    \"pgndbnumt\": 4,\r\n    \"pgndec\": 4,\r\n    \"pgndecd\": 4,\r\n    \"pgnganada\": 4,\r\n    \"pgngbnum\": 4,\r\n    \"pgngbnumd\": 4,\r\n    \"pgngbnumk\": 4,\r\n    \"pgngbnuml\": 4,\r\n    \"pgnhindia\": 4,\r\n    \"pgnhindib\": 4,\r\n    \"pgnhindic\": 4,\r\n    \"pgnhindid\": 4,\r\n    \"pgnhn\": 3,\r\n    \"pgnhnsc\": 4,\r\n    \"pgnhnsh\": 4,\r\n    \"pgnhnsm\": 4,\r\n    \"pgnhnsn\": 4,\r\n    \"pgnhnsp\": 4,\r\n    \"pgnid\": 4,\r\n    \"pgnlcltr\": 4,\r\n    \"pgnlcrm\": 4,\r\n    \"pgnrestart\": 4,\r\n    \"pgnstart\": 3,\r\n    \"pgnstarts\": 3,\r\n    \"pgnthaia\": 4,\r\n    \"pgnthaib\": 4,\r\n    \"pgnthaic\": 4,\r\n    \"pgnucltr\": 4,\r\n    \"pgnucrm\": 4,\r\n    \"pgnvieta\": 4,\r\n    \"pgnx\": 3,\r\n    \"pgny\": 3,\r\n    \"pgnzodiac\": 4,\r\n    \"pgnzodiacd\": 4,\r\n    \"pgnzodiacl\": 4,\r\n    \"pgp\": 5,\r\n    \"pgptbl\": 5,\r\n    \"pgwsxn\": 3,\r\n    \"phcol\": 4,\r\n    \"phmrg\": 4,\r\n    \"phpg\": 4,\r\n    \"picbmp\": 4,\r\n    \"picbpp\": 3,\r\n    \"piccropb\": 3,\r\n    \"piccropl\": 3,\r\n    \"piccropr\": 3,\r\n    \"piccropt\": 3,\r\n    \"pich\": 3,\r\n    \"pichgoal\": 3,\r\n    \"picprop\": 5,\r\n    \"picscaled\": 4,\r\n    \"picscalex\": 3,\r\n    \"picscaley\": 3,\r\n    \"pict\": 5,\r\n    \"picw\": 3,\r\n    \"picwgoal\": 3,\r\n    \"pindtabqc\": 4,\r\n    \"pindtabql\": 4,\r\n    \"pindtabqr\": 4,\r\n    \"plain\": 4,\r\n    \"pmartabqc\": 4,\r\n    \"pmartabql\": 4,\r\n    \"pmartabqr\": 4,\r\n    \"pmmetafile\": 3,\r\n    \"pn\": 5,\r\n    \"pnacross\": 4,\r\n    \"pnaiu\": 4,\r\n    \"pnaiud\": 4,\r\n    \"pnaiueo\": 4,\r\n    \"pnaiueod\": 4,\r\n    \"pnb\": 2,\r\n    \"pnbidia\": 4,\r\n    \"pnbidib\": 4,\r\n    \"pncaps\": 2,\r\n    \"pncard\": 4,\r\n    \"pncf\": 3,\r\n    \"pnchosung\": 4,\r\n    \"pncnum\": 4,\r\n    \"pndbnum\": 4,\r\n    \"pndbnumd\": 4,\r\n    \"pndbnumk\": 4,\r\n    \"pndbnuml\": 4,\r\n    \"pndbnumt\": 4,\r\n    \"pndec\": 4,\r\n    \"pndecd\": 4,\r\n    \"pnf\": 3,\r\n    \"pnfs\": 3,\r\n    \"pnganada\": 4,\r\n    \"pngblip\": 4,\r\n    \"pngbnum\": 4,\r\n    \"pngbnumd\": 4,\r\n    \"pngbnumk\": 4,\r\n    \"pngbnuml\": 4,\r\n    \"pnhang\": 4,\r\n    \"pni\": 2,\r\n    \"pnindent\": 3,\r\n    \"pniroha\": 4,\r\n    \"pnirohad\": 4,\r\n    \"pnlcltr\": 4,\r\n    \"pnlcrm\": 4,\r\n    \"pnlvl\": 3,\r\n    \"pnlvlblt\": 4,\r\n    \"pnlvlbody\": 4,\r\n    \"pnlvlcont\": 4,\r\n    \"pnnumonce\": 4,\r\n    \"pnord\": 4,\r\n    \"pnordt\": 4,\r\n    \"pnprev\": 4,\r\n    \"pnqc\": 4,\r\n    \"pnql\": 4,\r\n    \"pnqr\": 4,\r\n    \"pnrauth\": 3,\r\n    \"pnrdate\": 3,\r\n    \"pnrestart\": 4,\r\n    \"pnrnfc\": 3,\r\n    \"pnrnot\": 4,\r\n    \"pnrpnbr\": 3,\r\n    \"pnrrgb\": 3,\r\n    \"pnrstart\": 3,\r\n    \"pnrstop\": 3,\r\n    \"pnrxst\": 3,\r\n    \"pnscaps\": 2,\r\n    \"pnseclvl\": 5,\r\n    \"pnsp\": 3,\r\n    \"pnstart\": 3,\r\n    \"pnstrike\": 2,\r\n    \"pntext\": 5,\r\n    \"pntxta\": 5,\r\n    \"pntxtb\": 5,\r\n    \"pnucltr\": 4,\r\n    \"pnucrm\": 4,\r\n    \"pnul\": 2,\r\n    \"pnuld\": 4,\r\n    \"pnuldash\": 4,\r\n    \"pnuldashd\": 4,\r\n    \"pnuldashdd\": 4,\r\n    \"pnuldb\": 4,\r\n    \"pnulhair\": 4,\r\n    \"pnulnone\": 4,\r\n    \"pnulth\": 4,\r\n    \"pnulw\": 4,\r\n    \"pnulwave\": 4,\r\n    \"pnzodiac\": 4,\r\n    \"pnzodiacd\": 4,\r\n    \"pnzodiacl\": 4,\r\n    \"posnegx\": 3,\r\n    \"posnegy\": 3,\r\n    \"posx\": 3,\r\n    \"posxc\": 4,\r\n    \"posxi\": 4,\r\n    \"posxl\": 4,\r\n    \"posxo\": 4,\r\n    \"posxr\": 4,\r\n    \"posy\": 3,\r\n    \"posyb\": 4,\r\n    \"posyc\": 4,\r\n    \"posyil\": 4,\r\n    \"posyin\": 4,\r\n    \"posyout\": 4,\r\n    \"posyt\": 4,\r\n    \"prauth\": 3,\r\n    \"prcolbl\": 4,\r\n    \"prdate\": 3,\r\n    \"printdata\": 4,\r\n    \"printim\": 5,\r\n    \"private\": 5,\r\n    \"propname\": 5,\r\n    \"proptype\": 3,\r\n    \"protect\": 2,\r\n    \"protend\": 5,\r\n    \"protlevel\": 3,\r\n    \"protstart\": 5,\r\n    \"protusertbl\": 5,\r\n    \"psover\": 4,\r\n    \"psz\": 3,\r\n    \"ptabldot\": 4,\r\n    \"ptablmdot\": 4,\r\n    \"ptablminus\": 4,\r\n    \"ptablnone\": 4,\r\n    \"ptabluscore\": 4,\r\n    \"pubauto\": 4,\r\n    \"pvmrg\": 4,\r\n    \"pvpara\": 4,\r\n    \"pvpg\": 4,\r\n    \"pwd\": 3,\r\n    \"pxe\": 5,\r\n    \"qc\": 4,\r\n    \"qd\": 4,\r\n    \"qj\": 4,\r\n    \"qk\": 3,\r\n    \"ql\": 4,\r\n    \"qmspace\": 1,\r\n    \"qr\": 4,\r\n    \"qt\": 4,\r\n    \"rawclbgdkbdiag\": 4,\r\n    \"rawclbgbdiag\": 4,\r\n    \"rawclbgcross\": 4,\r\n    \"rawclbgdcross\": 4,\r\n    \"rawclbgdkcross\": 4,\r\n    \"rawclbgdkdcross\": 4,\r\n    \"rawclbgdkfdiag\": 4,\r\n    \"rawclbgdkhor\": 4,\r\n    \"rawclbgdkvert\": 4,\r\n    \"rawclbgfdiag\": 4,\r\n    \"rawclbghoriz\": 4,\r\n    \"rawclbgvert\": 4,\r\n    \"rdblquote\": 1,\r\n    \"readonlyrecommended\": 4,\r\n    \"readprot\": 4,\r\n    \"red\": 3,\r\n    \"relyonvml\": 3,\r\n    \"remdttm\": 4,\r\n    \"rempersonalinfo\": 4,\r\n    \"result\": 5,\r\n    \"revauth\": 3,\r\n    \"revauthdel\": 3,\r\n    \"revbar\": 3,\r\n    \"revdttm\": 3,\r\n    \"revdttmdel\": 3,\r\n    \"revised\": 2,\r\n    \"revisions\": 4,\r\n    \"revprop\": 3,\r\n    \"revprot\": 4,\r\n    \"revtbl\": 5,\r\n    \"revtim\": 5,\r\n    \"ri\": 3,\r\n    \"rin\": 3,\r\n    \"row\": 1,\r\n    \"rquote\": 1,\r\n    \"rsid\": 3,\r\n    \"rsidroot\": 3,\r\n    \"rsidtbl\": 5,\r\n    \"rsltbmp\": 4,\r\n    \"rslthtml\": 4,\r\n    \"rsltmerge\": 4,\r\n    \"rsltpict\": 4,\r\n    \"rsltrtf\": 4,\r\n    \"rslttxt\": 4,\r\n    \"rtf\": 5,\r\n    \"rtlch\": 4,\r\n    \"rtldoc\": 4,\r\n    \"rtlgutter\": 4,\r\n    \"rtlmark\": 1,\r\n    \"rtlpar\": 4,\r\n    \"rtlrow\": 4,\r\n    \"rtlsect\": 4,\r\n    \"rxe\": 5,\r\n    \"s\": 3,\r\n    \"sa\": 3,\r\n    \"saauto\": 2,\r\n    \"saftnnalc\": 4,\r\n    \"saftnnar\": 4,\r\n    \"saftnnauc\": 4,\r\n    \"saftnnchi\": 4,\r\n    \"saftnnchosung\": 4,\r\n    \"saftnncnum\": 4,\r\n    \"saftnndbar\": 4,\r\n    \"saftnndbnum\": 4,\r\n    \"saftnndbnumd\": 4,\r\n    \"saftnndbnumk\": 4,\r\n    \"saftnndbnumt\": 4,\r\n    \"saftnnganada\": 4,\r\n    \"saftnngbnum\": 4,\r\n    \"saftnngbnumd\": 4,\r\n    \"saftnngbnumk\": 4,\r\n    \"saftnngbnuml\": 4,\r\n    \"saftnnrlc\": 4,\r\n    \"saftnnruc\": 4,\r\n    \"saftnnzodiac\": 4,\r\n    \"saftnnzodiacd\": 4,\r\n    \"saftnnzodiacl\": 4,\r\n    \"saftnrestart\": 4,\r\n    \"saftnrstcont\": 4,\r\n    \"saftnstart\": 3,\r\n    \"sautoupd\": 4,\r\n    \"saveinvalidxml\": 4,\r\n    \"saveprevpict\": 4,\r\n    \"sb\": 3,\r\n    \"sbasedon\": 3,\r\n    \"sbauto\": 2,\r\n    \"sbkcol\": 4,\r\n    \"sbkeven\": 4,\r\n    \"sbknone\": 4,\r\n    \"sbkodd\": 4,\r\n    \"sbkpage\": 4,\r\n    \"sbys\": 4,\r\n    \"scaps\": 2,\r\n    \"scompose\": 4,\r\n    \"sec\": 3,\r\n    \"sect\": 1,\r\n    \"sectd\": 4,\r\n    \"sectdefaultcl\": 4,\r\n    \"sectexpand\": 3,\r\n    \"sectlinegrid\": 3,\r\n    \"sectnum\": 1,\r\n    \"sectrsid\": 3,\r\n    \"sectspecifycl\": 4,\r\n    \"sectspecifygen\": 4,\r\n    \"sectspecifyl\": 4,\r\n    \"sectunlocked\": 4,\r\n    \"sftnbj\": 4,\r\n    \"sftnnalc\": 4,\r\n    \"sftnnar\": 4,\r\n    \"sftnnauc\": 4,\r\n    \"sftnnchi\": 4,\r\n    \"sftnnchosung\": 4,\r\n    \"sftnncnum\": 4,\r\n    \"sftnndbar\": 4,\r\n    \"sftnndbnum\": 4,\r\n    \"sftnndbnumd\": 4,\r\n    \"sftnndbnumk\": 4,\r\n    \"sftnndbnumt\": 4,\r\n    \"sftnnganada\": 4,\r\n    \"sftnngbnum\": 4,\r\n    \"sftnngbnumd\": 4,\r\n    \"sftnngbnumk\": 4,\r\n    \"sftnngbnuml\": 4,\r\n    \"sftnnrlc\": 4,\r\n    \"sftnnruc\": 4,\r\n    \"sftnnzodiac\": 4,\r\n    \"sftnnzodiacd\": 4,\r\n    \"sftnnzodiacl\": 4,\r\n    \"sftnrestart\": 4,\r\n    \"sftnrstcont\": 4,\r\n    \"sftnrstpg\": 4,\r\n    \"sftnstart\": 3,\r\n    \"sftntj\": 4,\r\n    \"shad\": 2,\r\n    \"shading\": 3,\r\n    \"shidden\": 4,\r\n    \"shift\": 4,\r\n    \"showplaceholdtext\": 3,\r\n    \"showxmlerrors\": 3,\r\n    \"shp\": 5,\r\n    \"shpbottom\": 3,\r\n    \"shpbxcolumn\": 4,\r\n    \"shpbxignore\": 4,\r\n    \"shpbxmargin\": 4,\r\n    \"shpbxpage\": 4,\r\n    \"shpbyignore\": 4,\r\n    \"shpbymargin\": 4,\r\n    \"shpbypage\": 4,\r\n    \"shpbypara\": 4,\r\n    \"shpfblwtxt\": 3,\r\n    \"shpfhdr\": 3,\r\n    \"shpgrp\": 5,\r\n    \"shpinst\": 5,\r\n    \"shpleft\": 3,\r\n    \"shplid\": 3,\r\n    \"shplockanchor\": 4,\r\n    \"shppict\": 5,\r\n    \"shpright\": 3,\r\n    \"shprslt\": 5,\r\n    \"shptop\": 3,\r\n    \"shptxt\": 5,\r\n    \"shpwrk\": 3,\r\n    \"shpwr\": 3,\r\n    \"shpz\": 3,\r\n    \"sl\": 3,\r\n    \"slink\": 3,\r\n    \"slmult\": 3,\r\n    \"slocked\": 4,\r\n    \"sn\": 5,\r\n    \"snaptogridincell\": 4,\r\n    \"snext\": 3,\r\n    \"softcol\": 4,\r\n    \"softlheight\": 3,\r\n    \"softline\": 4,\r\n    \"softpage\": 4,\r\n    \"sp\": 5,\r\n    \"spersonal\": 4,\r\n    \"spltpgpar\": 4,\r\n    \"splytwnine\": 4,\r\n    \"spriority\": 3,\r\n    \"sprsbsp\": 4,\r\n    \"sprslnsp\": 4,\r\n    \"sprsspbf\": 4,\r\n    \"sprstsm\": 4,\r\n    \"sprstsp\": 4,\r\n    \"spv\": 4,\r\n    \"sqformat\": 4,\r\n    \"srauth\": 3,\r\n    \"srdate\": 3,\r\n    \"sreply\": 4,\r\n    \"ssemihidden\": 3,\r\n    \"staticval\": 5,\r\n    \"stextflow\": 3,\r\n    \"strike\": 2,\r\n    \"striked\": 2,\r\n    \"stshfbi\": 3,\r\n    \"stshfdbch\": 3,\r\n    \"stshfhich\": 3,\r\n    \"stshfloch\": 3,\r\n    \"stylelock\": 4,\r\n    \"stylelockbackcomp\": 4,\r\n    \"stylelockenforced\": 4,\r\n    \"stylelockqfset\": 4,\r\n    \"stylelocktheme\": 4,\r\n    \"stylesheet\": 5,\r\n    \"stylesortmethod\": 3,\r\n    \"styrsid\": 3,\r\n    \"sub\": 4,\r\n    \"subdocument\": 3,\r\n    \"subfontbysize\": 4,\r\n    \"subject\": 5,\r\n    \"sunhideused\": 3,\r\n    \"super\": 4,\r\n    \"sv\": 5,\r\n    \"svb\": 5,\r\n    \"swpbdr\": 4,\r\n    \"tab\": 1,\r\n    \"tabsnoovrlp\": 4,\r\n    \"taprtl\": 4,\r\n    \"tb\": 3,\r\n    \"tblind\": 3,\r\n    \"tblindtype\": 3,\r\n    \"tbllkbestfit\": 4,\r\n    \"tbllkborder\": 4,\r\n    \"tbllkcolor\": 4,\r\n    \"tbllkfont\": 4,\r\n    \"tbllkhdrcols\": 4,\r\n    \"tbllkhdrrows\": 4,\r\n    \"tbllklastcol\": 4,\r\n    \"tbllklastrow\": 4,\r\n    \"tbllknocolband\": 4,\r\n    \"tbllknorowband\": 4,\r\n    \"tbllkshading\": 4,\r\n    \"tblrsid\": 3,\r\n    \"tc\": 5,\r\n    \"tcelld\": 4,\r\n    \"tcf\": 3,\r\n    \"tcl\": 3,\r\n    \"tcn\": 4,\r\n    \"tdfrmtxtBottom\": 3,\r\n    \"tdfrmtxtLeft\": 3,\r\n    \"tdfrmtxtRight\": 3,\r\n    \"tdfrmtxtTop\": 3,\r\n    \"template\": 5,\r\n    \"themedata\": 5,\r\n    \"themelang\": 3,\r\n    \"themelangcs\": 3,\r\n    \"themelangfe\": 3,\r\n    \"time\": 4,\r\n    \"title\": 5,\r\n    \"titlepg\": 4,\r\n    \"tldot\": 4,\r\n    \"tleq\": 4,\r\n    \"tlhyph\": 4,\r\n    \"tlmdot\": 4,\r\n    \"tlth\": 4,\r\n    \"tlul\": 4,\r\n    \"toplinepunct\": 4,\r\n    \"tphcol\": 4,\r\n    \"tphmrg\": 4,\r\n    \"tphpg\": 4,\r\n    \"tposnegx\": 3,\r\n    \"tposnegy\": 3,\r\n    \"tposxc\": 4,\r\n    \"tposxi\": 4,\r\n    \"tposxl\": 4,\r\n    \"tposx\": 3,\r\n    \"tposxo\": 4,\r\n    \"tposxr\": 4,\r\n    \"tposy\": 3,\r\n    \"tposyb\": 4,\r\n    \"tposyc\": 4,\r\n    \"tposyil\": 4,\r\n    \"tposyin\": 4,\r\n    \"tposyout\": 4,\r\n    \"tposyt\": 4,\r\n    \"tpvmrg\": 4,\r\n    \"tpvpara\": 4,\r\n    \"tpvpg\": 4,\r\n    \"tqc\": 4,\r\n    \"tqdec\": 4,\r\n    \"tqr\": 4,\r\n    \"trackformatting\": 3,\r\n    \"trackmoves\": 3,\r\n    \"transmf\": 4,\r\n    \"trauth\": 3,\r\n    \"trautofit\": 2,\r\n    \"trbgbdiag\": 4,\r\n    \"trbgcross\": 4,\r\n    \"trbgdcross\": 4,\r\n    \"trbgdkbdiag\": 4,\r\n    \"trbgdkcross\": 4,\r\n    \"trbgdkdcross\": 4,\r\n    \"trbgdkfdiag\": 4,\r\n    \"trbgdkhor\": 4,\r\n    \"trbgdkvert\": 4,\r\n    \"trbgfdiag\": 4,\r\n    \"trbghoriz\": 4,\r\n    \"trbgvert\": 4,\r\n    \"trbrdrb\": 4,\r\n    \"trbrdrh\": 4,\r\n    \"trbrdrl\": 4,\r\n    \"trbrdrr\": 4,\r\n    \"trbrdrt\": 4,\r\n    \"trbrdrv\": 4,\r\n    \"trcbpat\": 3,\r\n    \"trcfpat\": 3,\r\n    \"trdate\": 3,\r\n    \"trftsWidthA\": 3,\r\n    \"trftsWidthB\": 3,\r\n    \"trftsWidth\": 3,\r\n    \"trgaph\": 3,\r\n    \"trhdr\": 4,\r\n    \"trkeep\": 4,\r\n    \"trkeepfollow\": 4,\r\n    \"trleft\": 3,\r\n    \"trowd\": 4,\r\n    \"trpaddb\": 3,\r\n    \"trpaddfb\": 3,\r\n    \"trpaddfl\": 3,\r\n    \"trpaddfr\": 3,\r\n    \"trpaddft\": 3,\r\n    \"trpaddl\": 3,\r\n    \"trpaddr\": 3,\r\n    \"trpaddt\": 3,\r\n    \"trpadob\": 3,\r\n    \"trpadofb\": 3,\r\n    \"trpadofl\": 3,\r\n    \"trpadofr\": 3,\r\n    \"trpadoft\": 3,\r\n    \"trpadol\": 3,\r\n    \"trpador\": 3,\r\n    \"trpadot\": 3,\r\n    \"trpat\": 3,\r\n    \"trqc\": 4,\r\n    \"trql\": 4,\r\n    \"trqr\": 4,\r\n    \"trrh\": 3,\r\n    \"trshdng\": 3,\r\n    \"trspdb\": 3,\r\n    \"trspdfb\": 3,\r\n    \"trspdfl\": 3,\r\n    \"trspdfr\": 3,\r\n    \"trspdft\": 3,\r\n    \"trspdl\": 3,\r\n    \"trspdr\": 3,\r\n    \"trspdt\": 3,\r\n    \"trspob\": 3,\r\n    \"trspofb\": 3,\r\n    \"trspofl\": 3,\r\n    \"trspofr\": 3,\r\n    \"trspoft\": 3,\r\n    \"trspol\": 3,\r\n    \"trspor\": 3,\r\n    \"trspot\": 3,\r\n    \"truncatefontheight\": 4,\r\n    \"truncex\": 4,\r\n    \"trwWidthA\": 3,\r\n    \"trwWidthB\": 3,\r\n    \"trwWidth\": 3,\r\n    \"ts\": 3,\r\n    \"tsbgbdiag\": 4,\r\n    \"tsbgcross\": 4,\r\n    \"tsbgdcross\": 4,\r\n    \"tsbgdkbdiag\": 4,\r\n    \"tsbgdkcross\": 4,\r\n    \"tsbgdkdcross\": 4,\r\n    \"tsbgdkfdiag\": 4,\r\n    \"tsbgdkhor\": 4,\r\n    \"tsbgdkvert\": 4,\r\n    \"tsbgfdiag\": 4,\r\n    \"tsbghoriz\": 4,\r\n    \"tsbgvert\": 4,\r\n    \"tsbrdrb\": 4,\r\n    \"tsbrdrdgl\": 4,\r\n    \"tsbrdrdgr\": 4,\r\n    \"tsbrdrh\": 4,\r\n    \"tsbrdrl\": 4,\r\n    \"tsbrdrr\": 4,\r\n    \"tsbrdrt\": 4,\r\n    \"tsbrdrv\": 4,\r\n    \"tscbandhorzeven\": 4,\r\n    \"tscbandhorzodd\": 4,\r\n    \"tscbandsh\": 3,\r\n    \"tscbandsv\": 3,\r\n    \"tscbandverteven\": 4,\r\n    \"tscbandvertodd\": 4,\r\n    \"tscellcbpat\": 3,\r\n    \"tscellcfpat\": 3,\r\n    \"tscellpaddb\": 3,\r\n    \"tscellpaddfb\": 3,\r\n    \"tscellpaddfl\": 3,\r\n    \"tscellpaddfr\": 3,\r\n    \"tscellpaddft\": 3,\r\n    \"tscellpaddl\": 3,\r\n    \"tscellpaddr\": 3,\r\n    \"tscellpaddt\": 3,\r\n    \"tscellpct\": 3,\r\n    \"tscellwidth\": 3,\r\n    \"tscellwidthfts\": 3,\r\n    \"tscfirstcol\": 4,\r\n    \"tscfirstrow\": 4,\r\n    \"tsclastcol\": 4,\r\n    \"tsclastrow\": 4,\r\n    \"tscnecell\": 4,\r\n    \"tscnwcell\": 4,\r\n    \"tscsecell\": 4,\r\n    \"tscswcell\": 4,\r\n    \"tsd\": 4,\r\n    \"tsnowrap\": 4,\r\n    \"tsrowd\": 4,\r\n    \"tsvertalb\": 4,\r\n    \"tsvertalc\": 4,\r\n    \"tsvertalt\": 4,\r\n    \"twoinone\": 3,\r\n    \"twoonone\": 4,\r\n    \"tx\": 3,\r\n    \"txbxtwalways\": 4,\r\n    \"txbxtwfirst\": 4,\r\n    \"txbxtwfirstlast\": 4,\r\n    \"txbxtwlast\": 4,\r\n    \"txbxtwno\": 4,\r\n    \"txe\": 5,\r\n    \"u\": 3,\r\n    \"uc\": 3,\r\n    \"ud\": 5,\r\n    \"ul\": 2,\r\n    \"ulc\": 3,\r\n    \"uld\": 4,\r\n    \"uldash\": 2,\r\n    \"uldashd\": 2,\r\n    \"uldashdd\": 2,\r\n    \"uldb\": 2,\r\n    \"ulhair\": 2,\r\n    \"ulhwave\": 2,\r\n    \"ulldash\": 2,\r\n    \"ulnone\": 4,\r\n    \"ulth\": 2,\r\n    \"ulthd\": 2,\r\n    \"ulthdash\": 2,\r\n    \"ulthdashd\": 2,\r\n    \"ulthdashdd\": 2,\r\n    \"ulthldash\": 2,\r\n    \"ululdbwave\": 2,\r\n    \"ulw\": 4,\r\n    \"ulwave\": 2,\r\n    \"up\": 3,\r\n    \"upr\": 5,\r\n    \"urtf\": 3,\r\n    \"useltbaln\": 4,\r\n    \"usenormstyforlist\": 4,\r\n    \"userprops\": 5,\r\n    \"usexform\": 4,\r\n    \"utinl\": 4,\r\n    \"v\": 2,\r\n    \"validatexml\": 3,\r\n    \"vern\": 3,\r\n    \"version\": 3,\r\n    \"vertal\": 4,\r\n    \"vertalb\": 4,\r\n    \"vertalc\": 4,\r\n    \"vertalj\": 4,\r\n    \"vertalt\": 4,\r\n    \"vertdoc\": 4,\r\n    \"vertsect\": 4,\r\n    \"viewbksp\": 3,\r\n    \"viewkind\": 3,\r\n    \"viewnobound\": 4,\r\n    \"viewscale\": 3,\r\n    \"viewzk\": 3,\r\n    \"wbitmap\": 3,\r\n    \"wbmbitspixel\": 3,\r\n    \"wbmplanes\": 3,\r\n    \"wbmwidthbytes\": 3,\r\n    \"webhidden\": 4,\r\n    \"wgrffmtfilter\": 5,\r\n    \"widctlpar\": 4,\r\n    \"widowctrl\": 4,\r\n    \"windowcaption\": 5,\r\n    \"wmetafile\": 3,\r\n    \"wpeqn\": 4,\r\n    \"wpjst\": 4,\r\n    \"wpsp\": 4,\r\n    \"wraparound\": 4,\r\n    \"wrapdefault\": 4,\r\n    \"wrapthrough\": 4,\r\n    \"wraptight\": 4,\r\n    \"wraptrsp\": 4,\r\n    \"writereservation\": 5,\r\n    \"writereservhash\": 5,\r\n    \"wrppunct\": 4,\r\n    \"xe\": 5,\r\n    \"xef\": 3,\r\n    \"xform\": 5,\r\n    \"xmlattr\": 4,\r\n    \"xmlattrname\": 5,\r\n    \"xmlattrns\": 3,\r\n    \"xmlattrvalue\": 5,\r\n    \"xmlclose\": 5,\r\n    \"xmlname\": 5,\r\n    \"xmlns\": 3,\r\n    \"xmlnstbl\": 5,\r\n    \"xmlopen\": 5,\r\n    \"xmlsdttcell\": 4,\r\n    \"xmlsdttpara\": 4,\r\n    \"xmlsdttregular\": 4,\r\n    \"xmlsdttrow\": 4,\r\n    \"xmlsdttunknown\": 4,\r\n    \"yr\": 3,\r\n    \"yts\": 3,\r\n    \"yxe\": 4,\r\n    \"zwbo\": 1,\r\n    \"zwj\": 1,\r\n    \"zwnbo\": 1,\r\n    \"zwnj\": 1,\r\n};\r\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('./lib/_stream_duplex.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","module.exports = require('./readable').PassThrough\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_writable.js');\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n"],"sourceRoot":""}
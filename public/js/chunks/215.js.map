{"version":3,"sources":["webpack:///resources/js/src/views/pages/safety/components/IncidentNoteTab.vue","webpack:///./resources/js/src/views/pages/safety/components/IncidentNoteTab.vue","webpack:///./resources/js/src/views/pages/safety/components/IncidentNoteTab.vue?3892","webpack:///./resources/js/src/views/pages/safety/components/IncidentNoteTab.vue?2122","webpack:///./resources/js/src/views/pages/safety/components/IncidentNoteTab.vue?c113"],"names":["render","_vm","_c","_self","staticClass","attrs","color","type","size","icon","on","click","$event","stopPropagation","toggleNotePrompt","_v","key","defaultKey","value","notes","filterDisplay","loading","responsiveLayout","lazy","scopedSlots","_u","fn","proxy","header","headerStyle","width","data","preventDefault","deleteNote","noteId","editNote","field","minWidth","showFilterMenu","sortable","localDate","localTime","_s","getDateTime","contactType","getLabel","bodyStyle","note","isPromptActive","notePrompt","noteData","onClose","onAccept","addNote","updateNote","staticRenderFns","_withStripped"],"mappings":"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","file":"js/chunks/215.js","sourcesContent":["<template>\r\n  <div class=\"mt-4\">\r\n    <vx-card>\r\n      <div class=\"vx-row justify-end\">\r\n        <div class=\"vx-col\">\r\n          <vs-button\r\n            color=\"primary\"\r\n            type=\"border\"\r\n            size=\"small\"\r\n            icon=\"add\"\r\n            @click.stop=\"toggleNotePrompt()\"\r\n          >\r\n            ADD NOTE\r\n          </vs-button>\r\n        </div>\r\n      </div>\r\n      <vs-divider />\r\n      <div class=\"vx-row mx-auto\">\r\n        <DataTable\r\n          class=\"w-full\"\r\n          :value=\"notes\"\r\n          :key=\"defaultKey\"\r\n          filterDisplay=\"row\"\r\n          :loading=\"loading\"\r\n          responsiveLayout=\"scroll\"\r\n          :lazy=\"true\"\r\n        >\r\n          <Column header=\"\" :headerStyle=\"{ width: '0.5rem' }\">\r\n            <template #body=\"{ data }\">\r\n              <div class=\"flex items-center gap-1\">\r\n                <vs-icon\r\n                  class=\"cursor-pointer\"\r\n                  icon=\"delete\"\r\n                  size=\"small\"\r\n                  @click.prevent=\"deleteNote(data.noteId)\"\r\n                />\r\n                <vs-icon\r\n                  class=\"cursor-pointer\"\r\n                  icon=\"edit\"\r\n                  size=\"small\"\r\n                  @click.prevent=\"editNote(data.noteId)\"\r\n                />\r\n              </div>\r\n            </template>\r\n          </Column>\r\n          <Column\r\n            field=\"\"\r\n            header=\"Date\"\r\n            :headerStyle=\"{ minWidth: '140px' }\"\r\n            :showFilterMenu=\"false\"\r\n            :sortable=\"false\"\r\n          >\r\n            <template #body=\"{ data: { localDate, localTime } }\">\r\n              <div>\r\n                <span>\r\n                  {{ getDateTime(localDate, localTime) }}\r\n                </span>\r\n              </div>\r\n            </template>\r\n          </Column>\r\n          <Column\r\n            field=\"contactType\"\r\n            header=\"Contact Type\"\r\n            :headerStyle=\"{ minWidth: '140px' }\"\r\n            :showFilterMenu=\"false\"\r\n            :sortable=\"false\"\r\n          >\r\n            <template #body=\"{ data: { contactType } }\">\r\n              <div>\r\n                <span>\r\n                  {{ getLabel(contactType) }}\r\n                </span>\r\n              </div>\r\n            </template>\r\n          </Column>\r\n          <Column\r\n            field=\"name\"\r\n            header=\"Name\"\r\n            :headerStyle=\"{ minWidth: '140px' }\"\r\n            :showFilterMenu=\"false\"\r\n            :sortable=\"false\"\r\n          >\r\n          </Column>\r\n          <Column\r\n            field=\"phone\"\r\n            header=\"Phone\"\r\n            :headerStyle=\"{ minWidth: '140px' }\"\r\n            :showFilterMenu=\"false\"\r\n            :sortable=\"false\"\r\n          >\r\n          </Column>\r\n          <Column\r\n            field=\"email\"\r\n            header=\"Email\"\r\n            :headerStyle=\"{ minWidth: '140px' }\"\r\n            :showFilterMenu=\"false\"\r\n            :sortable=\"false\"\r\n          >\r\n          </Column>\r\n          <Column\r\n            field=\"note\"\r\n            header=\"Note\"\r\n            :showFilterMenu=\"false\"\r\n            :sortable=\"false\"\r\n            :bodyStyle=\"{}\"\r\n          >\r\n            <template #body=\"{ data: { note } }\">\r\n              <div>\r\n                <span>\r\n                  {{ note }}\r\n                </span>\r\n              </div>\r\n            </template>\r\n          </Column>\r\n          <template #empty><b>No records found</b></template>\r\n        </DataTable>\r\n      </div>\r\n    </vx-card>\r\n\r\n    <incident-note-prompt\r\n      :isPromptActive=\"notePrompt.isPromptActive\"\r\n      :noteData=\"notePrompt.data\"\r\n      @onClose=\"toggleNotePrompt\"\r\n      @onAccept=\"addNote\"\r\n      @onAccept:Update=\"updateNote\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getUniqueIdV4, getApiErrorMsg } from '@/helpers/helper';\r\nimport config from '@/config/constants.js';\r\n\r\nexport default {\r\n  name: 'IncidentNoteTab',\r\n  components: {\r\n    IncidentNotePrompt: () => import('./IncidentNotePrompt.vue'),\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({}),\r\n    },\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    notes() {\r\n      return this.value.notesArray || [];\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      notePrompt: {\r\n        isPromptActive: false,\r\n        data: null,\r\n      },\r\n      defaultKey: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    getDateTime(date, time) {\r\n      return `${date || ''} ${time || ''}`.trim();\r\n    },\r\n    getLabel(value) {\r\n      const contactTypeOptions = config.safetyModule.contactType;\r\n      const type = contactTypeOptions.find((item) => item.value === value);\r\n      return type ? type.label : '';\r\n    },\r\n    toggleNotePrompt(data = null) {\r\n      this.notePrompt = {\r\n        isPromptActive: !this.notePrompt.isPromptActive,\r\n        data,\r\n      };\r\n    },\r\n    async addNote(noteData) {\r\n      try {\r\n        if (this.isEdit) {\r\n          const payload = {\r\n            incidentId: this.value.incidentId || null,\r\n            localDate: noteData.localDate || null,\r\n            localTime: noteData.localTime || null,\r\n            note: noteData.note || null,\r\n            contactType: noteData.contactType || null,\r\n            name: noteData.name || null,\r\n            phone: noteData.phone || null,\r\n            email: noteData.email || null,\r\n          };\r\n\r\n          const { data } = await this.$store.dispatch(\r\n            'incidents/createNote',\r\n            payload\r\n          );\r\n\r\n          if (data.payload && data.payload.noteId) {\r\n            this.value.notesArray = [\r\n              ...this.value.notesArray,\r\n              {\r\n                noteId: data.payload.noteId,\r\n                localDate: noteData.localDate || null,\r\n                localTime: noteData.localTime || null,\r\n                contactType: noteData.contactType || null,\r\n                note: noteData.note || null,\r\n                name: noteData.name || null,\r\n                phone: noteData.phone || null,\r\n                email: noteData.email || null,\r\n              },\r\n            ];\r\n          }\r\n        } else {\r\n          this.value.notesArray = [\r\n            ...(this.value.notesArray || []),\r\n            {\r\n              noteId: getUniqueIdV4(),\r\n              localDate: noteData.localDate || null,\r\n              localTime: noteData.localTime || null,\r\n              note: noteData.note || null,\r\n              contactType: noteData.contactType || null,\r\n              name: noteData.name || null,\r\n              phone: noteData.phone || null,\r\n              email: noteData.email || null,\r\n            },\r\n          ];\r\n        }\r\n\r\n        this.toggleNotePrompt();\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: 'danger',\r\n          title: 'Error',\r\n          text: getApiErrorMsg(error),\r\n        });\r\n      } finally {\r\n      }\r\n    },\r\n    async editNote(noteId) {\r\n      const noteData = ((this.value || {}).notesArray || []).find(\r\n        (note) => note.noteId === noteId\r\n      );\r\n\r\n      if (noteData) {\r\n        this.toggleNotePrompt(noteData);\r\n      }\r\n    },\r\n    async updateNote(noteData) {\r\n      try {\r\n        if (this.isEdit) {\r\n          const payload = {\r\n            incidentId: this.value.incidentId || null,\r\n            noteId: noteData.noteId,\r\n            localDate: noteData.localDate,\r\n            localTime: noteData.localTime,\r\n            note: noteData.note,\r\n            contactType: noteData.contactType || null,\r\n            name: noteData.name,\r\n            phone: noteData.phone,\r\n            email: noteData.email,\r\n          };\r\n\r\n          await this.$store.dispatch('incidents/updateNote', payload);\r\n\r\n          this.value.notesArray = this.value.notesArray.map((note) => {\r\n            if (note.noteId === noteData.noteId) {\r\n              return {\r\n                ...note,\r\n                localDate: noteData.localDate,\r\n                localTime: noteData.localTime,\r\n                note: noteData.note,\r\n                contactType: noteData.contactType || null,\r\n                name: noteData.name,\r\n                phone: noteData.phone,\r\n                email: noteData.email,\r\n              };\r\n            }\r\n\r\n            return note;\r\n          });\r\n        } else {\r\n          this.value.notesArray = this.value.notesArray.map((note) => {\r\n            if (note.noteId === noteData.noteId) {\r\n              return {\r\n                ...note,\r\n                localDate: noteData.localDate,\r\n                localTime: noteData.localTime,\r\n                note: noteData.note,\r\n                contactType: noteData.contactType || null,\r\n                name: noteData.name,\r\n                phone: noteData.phone,\r\n                email: noteData.email,\r\n              };\r\n            }\r\n\r\n            return note;\r\n          });\r\n        }\r\n\r\n        this.toggleNotePrompt();\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: 'danger',\r\n          title: 'Error',\r\n          text: getApiErrorMsg(error),\r\n        });\r\n      } finally {\r\n      }\r\n    },\r\n    deleteNote(noteId) {\r\n      this.$vs.dialog({\r\n        color: 'danger',\r\n        title: 'Delete Note',\r\n        text: 'Are you sure you want to delete this note?',\r\n        accept: this.deleteNoteFromIncident.bind(this, noteId),\r\n      });\r\n    },\r\n    async deleteNoteFromIncident(noteId) {\r\n      try {\r\n        if (this.isEdit) {\r\n          const payload = {\r\n            incidentId: this.value.incidentId || null,\r\n            noteId,\r\n          };\r\n\r\n          await this.$store.dispatch('incidents/deleteNote', payload);\r\n\r\n          this.value.notesArray = this.value.notesArray.filter(\r\n            (note) => note.noteId !== noteId\r\n          );\r\n        } else {\r\n          this.value.notesArray = this.value.notesArray.filter(\r\n            (note) => note.noteId !== noteId\r\n          );\r\n        }\r\n      } catch (error) {\r\n        this.$vs.notify({\r\n          time: 8000,\r\n          color: 'danger',\r\n          title: 'Error',\r\n          text: getApiErrorMsg(error),\r\n        });\r\n      } finally {\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    { staticClass: \"mt-4\" },\n    [\n      _c(\n        \"vx-card\",\n        [\n          _c(\"div\", { staticClass: \"vx-row justify-end\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"vx-col\" },\n              [\n                _c(\n                  \"vs-button\",\n                  {\n                    attrs: {\n                      color: \"primary\",\n                      type: \"border\",\n                      size: \"small\",\n                      icon: \"add\",\n                    },\n                    on: {\n                      click: function ($event) {\n                        $event.stopPropagation()\n                        return _vm.toggleNotePrompt()\n                      },\n                    },\n                  },\n                  [_vm._v(\"\\n          ADD NOTE\\n        \")]\n                ),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"vs-divider\"),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"vx-row mx-auto\" },\n            [\n              _c(\n                \"DataTable\",\n                {\n                  key: _vm.defaultKey,\n                  staticClass: \"w-full\",\n                  attrs: {\n                    value: _vm.notes,\n                    filterDisplay: \"row\",\n                    loading: _vm.loading,\n                    responsiveLayout: \"scroll\",\n                    lazy: true,\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"empty\",\n                      fn: function () {\n                        return [_c(\"b\", [_vm._v(\"No records found\")])]\n                      },\n                      proxy: true,\n                    },\n                  ]),\n                },\n                [\n                  _c(\"Column\", {\n                    attrs: { header: \"\", headerStyle: { width: \"0.5rem\" } },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"body\",\n                        fn: function ({ data }) {\n                          return [\n                            _c(\n                              \"div\",\n                              { staticClass: \"flex items-center gap-1\" },\n                              [\n                                _c(\"vs-icon\", {\n                                  staticClass: \"cursor-pointer\",\n                                  attrs: { icon: \"delete\", size: \"small\" },\n                                  on: {\n                                    click: function ($event) {\n                                      $event.preventDefault()\n                                      return _vm.deleteNote(data.noteId)\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"vs-icon\", {\n                                  staticClass: \"cursor-pointer\",\n                                  attrs: { icon: \"edit\", size: \"small\" },\n                                  on: {\n                                    click: function ($event) {\n                                      $event.preventDefault()\n                                      return _vm.editNote(data.noteId)\n                                    },\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"Column\", {\n                    attrs: {\n                      field: \"\",\n                      header: \"Date\",\n                      headerStyle: { minWidth: \"140px\" },\n                      showFilterMenu: false,\n                      sortable: false,\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"body\",\n                        fn: function ({ data: { localDate, localTime } }) {\n                          return [\n                            _c(\"div\", [\n                              _c(\"span\", [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(\n                                      _vm.getDateTime(localDate, localTime)\n                                    ) +\n                                    \"\\n              \"\n                                ),\n                              ]),\n                            ]),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"Column\", {\n                    attrs: {\n                      field: \"contactType\",\n                      header: \"Contact Type\",\n                      headerStyle: { minWidth: \"140px\" },\n                      showFilterMenu: false,\n                      sortable: false,\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"body\",\n                        fn: function ({ data: { contactType } }) {\n                          return [\n                            _c(\"div\", [\n                              _c(\"span\", [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.getLabel(contactType)) +\n                                    \"\\n              \"\n                                ),\n                              ]),\n                            ]),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"Column\", {\n                    attrs: {\n                      field: \"name\",\n                      header: \"Name\",\n                      headerStyle: { minWidth: \"140px\" },\n                      showFilterMenu: false,\n                      sortable: false,\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"Column\", {\n                    attrs: {\n                      field: \"phone\",\n                      header: \"Phone\",\n                      headerStyle: { minWidth: \"140px\" },\n                      showFilterMenu: false,\n                      sortable: false,\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"Column\", {\n                    attrs: {\n                      field: \"email\",\n                      header: \"Email\",\n                      headerStyle: { minWidth: \"140px\" },\n                      showFilterMenu: false,\n                      sortable: false,\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"Column\", {\n                    attrs: {\n                      field: \"note\",\n                      header: \"Note\",\n                      showFilterMenu: false,\n                      sortable: false,\n                      bodyStyle: {},\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"body\",\n                        fn: function ({ data: { note } }) {\n                          return [\n                            _c(\"div\", [\n                              _c(\"span\", [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(note) +\n                                    \"\\n              \"\n                                ),\n                              ]),\n                            ]),\n                          ]\n                        },\n                      },\n                    ]),\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"incident-note-prompt\", {\n        attrs: {\n          isPromptActive: _vm.notePrompt.isPromptActive,\n          noteData: _vm.notePrompt.data,\n        },\n        on: {\n          onClose: _vm.toggleNotePrompt,\n          onAccept: _vm.addNote,\n          \"onAccept:Update\": _vm.updateNote,\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./IncidentNoteTab.vue?vue&type=template&id=1cd006a0&scoped=true&\"\nimport script from \"./IncidentNoteTab.vue?vue&type=script&lang=js&\"\nexport * from \"./IncidentNoteTab.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1cd006a0\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"D:\\\\laragon\\\\www\\\\ezpapel\\\\panel\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1cd006a0')) {\n      api.createRecord('1cd006a0', component.options)\n    } else {\n      api.reload('1cd006a0', component.options)\n    }\n    module.hot.accept(\"./IncidentNoteTab.vue?vue&type=template&id=1cd006a0&scoped=true&\", function () {\n      api.rerender('1cd006a0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/views/pages/safety/components/IncidentNoteTab.vue\"\nexport default component.exports","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IncidentNoteTab.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IncidentNoteTab.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IncidentNoteTab.vue?vue&type=template&id=1cd006a0&scoped=true&\""],"sourceRoot":""}
{"version":3,"sources":["webpack:///resources/js/src/views/pages/menu/components/ListView.vue","webpack:///./resources/js/src/views/pages/menu/components/ListView.vue","webpack:///./resources/js/src/views/pages/menu/components/ListView.vue?45f2","webpack:///./resources/js/src/views/pages/menu/components/ListView.vue?6a6a","webpack:///./resources/js/src/config/helpers.js","webpack:///./resources/js/src/views/pages/menu/components/ListView.vue?445f","webpack:///./resources/js/src/views/pages/menu/components/ListView.vue?8d6d","webpack:///./resources/js/src/views/pages/menu/components/ListView.vue?1f5f","webpack:///./resources/js/src/views/pages/menu/components/ListView.vue?3b19"],"names":["render","_vm","_c","_self","staticClass","attrs","viewName","selectedGroupBy","groupByOptions","viewMetaData","customFields","on","updateView","toggleDetailsView","_v","hasColumnToRender","_l","viewData","item","index","id","records","length","key","size","icon","isCollapsed","click","color","domProps","textContent","_s","label","transparent","list","customFieldsToRender","tag","change","$event","updateRecordOrder","customField","name","recordList","i","stopPropagation","customFieldsData","filter","x","isRender","record","ix","userData","user","directives","rawName","value","fullName","expression","modifiers","top","class","filesValue","getFileExtensions","extension","fileExtensionLimit","singleSelectValue","style","generateTextColor","textValue","multiSelectValues","slice","option","optionId","optionName","_e","isNaN","numberValue","staticRenderFns","_withStripped","bgColor","hexToRgb","hex","result","exec","r","parseInt","g","b","rgb","hsp","Math","sqrt"],"mappings":"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","file":"js/chunks/132.js","sourcesContent":["<template>\r\n  <div class=\"pt-0 menu-list-view\">\r\n    <ControlBar\r\n      :viewName=\"'list'\"\r\n      :selectedGroupBy=\"selectedGroupBy\"\r\n      :groupByOptions=\"groupByOptions\"\r\n      :viewMetaData=\"viewMetaData\"\r\n      :customFields=\"customFields\"\r\n      @updateView=\"updateView\"\r\n      @toggleDetailsView=\"toggleDetailsView\"\r\n    />\r\n    <section v-if=\"hasColumnToRender\">\r\n      <template v-for=\"(item, index) in viewData\">\r\n        <vx-card\r\n          class=\"mt-2\"\r\n          :key=\"index\"\r\n          v-if=\"item.id == 0 ? ((item || {}).records || []).length : true\"\r\n        >\r\n          <div class=\"flex items-center\">\r\n            <vs-icon\r\n              class=\"mr-1 cursor-pointer\"\r\n              size=\"18px\"\r\n              :icon=\"isCollapsed[index] ? 'expand_more' : 'expand_less'\"\r\n              @click=\"() => (isCollapsed[index] = !isCollapsed[index])\"\r\n            />\r\n            <strong\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              @click=\"() => (isCollapsed[index] = !isCollapsed[index])\"\r\n            >\r\n              <label class=\"text-md font-semibold\" v-text=\"item.label\" />\r\n            </strong>\r\n            <small transparent color=\"primary\" class=\"ml-2\">\r\n              <span> {{ ((item || {}).records || []).length }} items </span>\r\n            </small>\r\n          </div>\r\n          <div v-if=\"!isCollapsed[index]\" class=\"overflow-auto\">\r\n            <table class=\"list-table\">\r\n              <thead>\r\n                <draggable\r\n                  :list=\"customFieldsToRender\"\r\n                  @change=\"updateRecordOrder($event)\"\r\n                  tag=\"tr\"\r\n                >\r\n                  <th\r\n                    v-for=\"(customField, index) in customFieldsToRender\"\r\n                    :key=\"index\"\r\n                    class=\"cursor-move\"\r\n                  >\r\n                    {{ customField.name }}\r\n                  </th>\r\n                </draggable>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  v-for=\"(recordList, i) in item.records\"\r\n                  :key=\"i\"\r\n                  @click.stop=\"toggleDetailsView(recordList.id)\"\r\n                >\r\n                  <template\r\n                    v-for=\"(record, ix) in recordList.customFieldsData.filter(\r\n                      (x) => x.isRender\r\n                    )\"\r\n                  >\r\n                    <td v-if=\"record.isRender\" :key=\"ix\">\r\n                      <template v-if=\"record.userData\">\r\n                        <vs-chip\r\n                          v-for=\"(user, index) in record.userData\"\r\n                          :key=\"index\"\r\n                          :class=\"[{ 'ml-1': index > 0 }]\"\r\n                          transparent\r\n                          color=\"primary\"\r\n                          v-primeVueTooltip.top=\"user.fullName\"\r\n                        >\r\n                          {{ user.tag }}\r\n                        </vs-chip>\r\n                      </template>\r\n                      <template v-else-if=\"record.filesValue\">\r\n                        <div class=\"flex p-1\">\r\n                          <div\r\n                            v-for=\"(extension, index) in getFileExtensions(\r\n                              record.filesValue\r\n                            )\"\r\n                            :key=\"index\"\r\n                          >\r\n                            <label class=\"text-md\">\r\n                              {{\r\n                                index < record.filesValue.length - 1 &&\r\n                                index < fileExtensionLimit\r\n                                  ? `${extension},&nbsp;`\r\n                                  : extension\r\n                              }}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </template>\r\n                      <template v-else-if=\"record.singleSelectValue\">\r\n                        <vs-chip \r\n                          :color=\"record.color\"\r\n                          :style=\"generateTextColor(record.color)\"\r\n                        >\r\n                          {{ record.textValue }}\r\n                        </vs-chip>\r\n                      </template>\r\n                      <template v-else-if=\"record.multiSelectValues\">\r\n                        <div class=\"flex\">\r\n                          <div\r\n                            v-for=\"option in record.multiSelectValues.slice(0, 3)\"\r\n                            :key=\"option.optionId\"\r\n                          >\r\n                            <vs-chip \r\n                              class=\"w-max\"\r\n                              :color=\"option.color\"\r\n                              :style=\"generateTextColor(option.color)\"\r\n                            >\r\n                              {{ option.optionName }}\r\n                            </vs-chip>\r\n                          </div>\r\n                          <div\r\n                            v-if=\"record.multiSelectValues.length > 3\"\r\n                            class=\"flex items-center\"\r\n                          >\r\n                            <vs-chip class=\"w-max custom-icon-size\">\r\n                              <vs-avatar icon=\"add\" />\r\n                              {{ record.multiSelectValues.length - 3 }} more\r\n                            </vs-chip>\r\n                          </div>\r\n                        </div>\r\n                      </template>\r\n                      <template v-else-if=\"!isNaN(record.numberValue)\">\r\n                        <span>\r\n                        {{ record.numberValue }}\r\n                      </span>\r\n                      </template>\r\n                      <span v-else>\r\n                        {{ record.textValue }}\r\n                      </span>\r\n                    </td>\r\n                  </template>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </vx-card>\r\n      </template>\r\n    </section>\r\n    <!-- <section v-else-if=\"mountComplete\">\r\n      <Transition>\r\n        <vx-card v-if=\"mountComplete\">\r\n          <div id=\"no-record-holder\">\r\n            <span style=\"color: red;\">No columns to render.</span>\r\n            <br>\r\n            <span>\r\n              Chose columns to render from <span v-tooltip=\"'[Show] button at top left'\">show</span>\r\n            </span>\r\n          </div>\r\n        </vx-card>\r\n      </Transition>\r\n    </section> -->\r\n  </div>\r\n</template>\r\n\r\n<!-- eslint-disable multiline-ternary nonblock-statement-body-position -->\r\n<script>\r\nimport GroupBy from \"../mixins/GroupBy\";\r\nimport { isEmpty } from 'lodash'\r\nimport { generateTextColor } from \"@/config/helpers.js\";\r\n\r\nexport default {\r\n  name: \"ListView\",\r\n  mixins: [GroupBy],\r\n  components: {\r\n    ControlBar: () => import(\"./ControlBar\"),\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    customFields: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    recordData: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    viewMetaData: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    fetchingData: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n  },\r\n  computed: {\r\n    sortedCustomFields () {\r\n      if (!isEmpty(this.viewMetaData)) {\r\n        const fields = this.customFields.map((item) => {\r\n          if (\r\n            this.viewMetaData &&\r\n            this.viewMetaData.show &&\r\n            this.viewMetaData.show.columns\r\n          )\r\n            this.viewMetaData.show.columns.forEach((column) => {\r\n              if (column.customFieldId === item.id) {\r\n                item.order = column.order\r\n              }\r\n            })\r\n\r\n          return item\r\n        })\r\n\r\n        return fields.sort((a, b) => a.order - b.order)\r\n      }\r\n\r\n      return this.customFields\r\n    },\r\n    hasColumnToRender() {\r\n      const { show } = this.viewMetaData|| {};\r\n      const { columns } = show || {};\r\n      return (columns || []).length > 0;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.confirmDataFetch();\r\n  },\r\n  data() {\r\n    return {\r\n      isCollapsed: {},\r\n      fileExtensionLimit: 2,\r\n      mountComplete: false,\r\n    };\r\n  },\r\n  watch: {\r\n    viewData: {\r\n      handler(val) {\r\n        Object.keys(val).map((key) => {\r\n          const res = this.isCollapsed[key] || false;\r\n          this.$set(this.isCollapsed, key, res);\r\n        }, {});\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    toggleDetailsView(recordId) {\r\n      this.$emit(\"toggleDetailsView\", recordId);\r\n    },\r\n    updateView(data) {\r\n      const payload = {\r\n        listMetaData: {\r\n          ...data,\r\n        },\r\n      };\r\n      this.$emit(\"updateView\", payload);\r\n    },\r\n    updateRecordOrder (record) {\r\n      if (!isEmpty(record)) {\r\n        const {\r\n          moved: {\r\n            element: { id },\r\n            newIndex,\r\n            oldIndex\r\n          }\r\n        } = record\r\n\r\n        const sortedList = this.viewMetaData.show.columns.sort(\r\n          (a, b) => a.order - b.order\r\n        )\r\n\r\n        const movedItem = sortedList.splice(oldIndex, 1)[0]\r\n        sortedList.splice(newIndex, 0, movedItem)\r\n\r\n        sortedList.map((item, index) => {\r\n          item.order = index + 1\r\n        })\r\n\r\n        const payload = {\r\n          listMetaData: {\r\n            ...this.viewMetaData,\r\n            show: {\r\n              columns: sortedList\r\n            }\r\n          }\r\n        }\r\n\r\n        this.$emit('updateView', payload)\r\n      }\r\n    },\r\n    generateTextColor(color) {\r\n      return generateTextColor(color);\r\n    },\r\n    confirmDataFetch() {\r\n      if (!this.fetchingData) {\r\n        this.mountComplete = true;\r\n      } else {\r\n        // this.confirmDataFetch();\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// Utility classes\r\n.w-97 {\r\n  width: 97%;\r\n}\r\n\r\n.text-gray {\r\n  color: #9e9e9e;\r\n}\r\n\r\n.list-table {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  border-collapse: separate;\r\n  border-spacing: 0 0.2em;\r\n  th {\r\n    padding: 10px 5px;\r\n    color: #87909e;\r\n    font-weight: 500;\r\n    width: 150px;\r\n    min-width: 150px;\r\n  }\r\n  tr {\r\n    width: 150px;\r\n    min-width: 150px;\r\n    box-shadow: 0px 2px 2px 0px #f0f1f8;\r\n    cursor: pointer;\r\n    td {\r\n      padding: 10px 5px;\r\n    }\r\n    background-color: #ffffff;\r\n    border: 1px solid #f0f1f8;\r\n  }\r\n}\r\n\r\n::v-deep {\r\n  .custom-icon-size {\r\n    .material-icons {\r\n      font-size: 1.8rem;\r\n    }\r\n  }\r\n}\r\n\r\n.w-max {\r\n  width: max-content;\r\n}\r\n</style>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    { staticClass: \"pt-0 menu-list-view\" },\n    [\n      _c(\"ControlBar\", {\n        attrs: {\n          viewName: \"list\",\n          selectedGroupBy: _vm.selectedGroupBy,\n          groupByOptions: _vm.groupByOptions,\n          viewMetaData: _vm.viewMetaData,\n          customFields: _vm.customFields,\n        },\n        on: {\n          updateView: _vm.updateView,\n          toggleDetailsView: _vm.toggleDetailsView,\n        },\n      }),\n      _vm._v(\" \"),\n      _vm.hasColumnToRender\n        ? _c(\n            \"section\",\n            [\n              _vm._l(_vm.viewData, function (item, index) {\n                return [\n                  (item.id == 0 ? ((item || {}).records || []).length : true)\n                    ? _c(\"vx-card\", { key: index, staticClass: \"mt-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"flex items-center\" },\n                          [\n                            _c(\"vs-icon\", {\n                              staticClass: \"mr-1 cursor-pointer\",\n                              attrs: {\n                                size: \"18px\",\n                                icon: _vm.isCollapsed[index]\n                                  ? \"expand_more\"\n                                  : \"expand_less\",\n                              },\n                              on: {\n                                click: () =>\n                                  (_vm.isCollapsed[index] =\n                                    !_vm.isCollapsed[index]),\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"strong\",\n                              {\n                                attrs: { color: \"primary\", size: \"small\" },\n                                on: {\n                                  click: () =>\n                                    (_vm.isCollapsed[index] =\n                                      !_vm.isCollapsed[index]),\n                                },\n                              },\n                              [\n                                _c(\"label\", {\n                                  staticClass: \"text-md font-semibold\",\n                                  domProps: { textContent: _vm._s(item.label) },\n                                }),\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"small\",\n                              {\n                                staticClass: \"ml-2\",\n                                attrs: { transparent: \"\", color: \"primary\" },\n                              },\n                              [\n                                _c(\"span\", [\n                                  _vm._v(\n                                    \" \" +\n                                      _vm._s(\n                                        ((item || {}).records || []).length\n                                      ) +\n                                      \" items \"\n                                  ),\n                                ]),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        !_vm.isCollapsed[index]\n                          ? _c(\"div\", { staticClass: \"overflow-auto\" }, [\n                              _c(\"table\", { staticClass: \"list-table\" }, [\n                                _c(\n                                  \"thead\",\n                                  [\n                                    _c(\n                                      \"draggable\",\n                                      {\n                                        attrs: {\n                                          list: _vm.customFieldsToRender,\n                                          tag: \"tr\",\n                                        },\n                                        on: {\n                                          change: function ($event) {\n                                            return _vm.updateRecordOrder($event)\n                                          },\n                                        },\n                                      },\n                                      _vm._l(\n                                        _vm.customFieldsToRender,\n                                        function (customField, index) {\n                                          return _c(\n                                            \"th\",\n                                            {\n                                              key: index,\n                                              staticClass: \"cursor-move\",\n                                            },\n                                            [\n                                              _vm._v(\n                                                \"\\n                  \" +\n                                                  _vm._s(customField.name) +\n                                                  \"\\n                \"\n                                              ),\n                                            ]\n                                          )\n                                        }\n                                      ),\n                                      0\n                                    ),\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"tbody\",\n                                  _vm._l(\n                                    item.records,\n                                    function (recordList, i) {\n                                      return _c(\n                                        \"tr\",\n                                        {\n                                          key: i,\n                                          on: {\n                                            click: function ($event) {\n                                              $event.stopPropagation()\n                                              return _vm.toggleDetailsView(\n                                                recordList.id\n                                              )\n                                            },\n                                          },\n                                        },\n                                        [\n                                          _vm._l(\n                                            recordList.customFieldsData.filter(\n                                              (x) => x.isRender\n                                            ),\n                                            function (record, ix) {\n                                              return [\n                                                record.isRender\n                                                  ? _c(\n                                                      \"td\",\n                                                      { key: ix },\n                                                      [\n                                                        record.userData\n                                                          ? _vm._l(\n                                                              record.userData,\n                                                              function (\n                                                                user,\n                                                                index\n                                                              ) {\n                                                                return _c(\n                                                                  \"vs-chip\",\n                                                                  {\n                                                                    directives:\n                                                                      [\n                                                                        {\n                                                                          name: \"primeVueTooltip\",\n                                                                          rawName:\n                                                                            \"v-primeVueTooltip.top\",\n                                                                          value:\n                                                                            user.fullName,\n                                                                          expression:\n                                                                            \"user.fullName\",\n                                                                          modifiers:\n                                                                            {\n                                                                              top: true,\n                                                                            },\n                                                                        },\n                                                                      ],\n                                                                    key: index,\n                                                                    class: [\n                                                                      {\n                                                                        \"ml-1\":\n                                                                          index >\n                                                                          0,\n                                                                      },\n                                                                    ],\n                                                                    attrs: {\n                                                                      transparent:\n                                                                        \"\",\n                                                                      color:\n                                                                        \"primary\",\n                                                                    },\n                                                                  },\n                                                                  [\n                                                                    _vm._v(\n                                                                      \"\\n                        \" +\n                                                                        _vm._s(\n                                                                          user.tag\n                                                                        ) +\n                                                                        \"\\n                      \"\n                                                                    ),\n                                                                  ]\n                                                                )\n                                                              }\n                                                            )\n                                                          : record.filesValue\n                                                          ? [\n                                                              _c(\n                                                                \"div\",\n                                                                {\n                                                                  staticClass:\n                                                                    \"flex p-1\",\n                                                                },\n                                                                _vm._l(\n                                                                  _vm.getFileExtensions(\n                                                                    record.filesValue\n                                                                  ),\n                                                                  function (\n                                                                    extension,\n                                                                    index\n                                                                  ) {\n                                                                    return _c(\n                                                                      \"div\",\n                                                                      {\n                                                                        key: index,\n                                                                      },\n                                                                      [\n                                                                        _c(\n                                                                          \"label\",\n                                                                          {\n                                                                            staticClass:\n                                                                              \"text-md\",\n                                                                          },\n                                                                          [\n                                                                            _vm._v(\n                                                                              \"\\n                            \" +\n                                                                                _vm._s(\n                                                                                  index <\n                                                                                    record\n                                                                                      .filesValue\n                                                                                      .length -\n                                                                                      1 &&\n                                                                                    index <\n                                                                                      _vm.fileExtensionLimit\n                                                                                    ? `${extension}, `\n                                                                                    : extension\n                                                                                ) +\n                                                                                \"\\n                          \"\n                                                                            ),\n                                                                          ]\n                                                                        ),\n                                                                      ]\n                                                                    )\n                                                                  }\n                                                                ),\n                                                                0\n                                                              ),\n                                                            ]\n                                                          : record.singleSelectValue\n                                                          ? [\n                                                              _c(\n                                                                \"vs-chip\",\n                                                                {\n                                                                  style:\n                                                                    _vm.generateTextColor(\n                                                                      record.color\n                                                                    ),\n                                                                  attrs: {\n                                                                    color:\n                                                                      record.color,\n                                                                  },\n                                                                },\n                                                                [\n                                                                  _vm._v(\n                                                                    \"\\n                        \" +\n                                                                      _vm._s(\n                                                                        record.textValue\n                                                                      ) +\n                                                                      \"\\n                      \"\n                                                                  ),\n                                                                ]\n                                                              ),\n                                                            ]\n                                                          : record.multiSelectValues\n                                                          ? [\n                                                              _c(\n                                                                \"div\",\n                                                                {\n                                                                  staticClass:\n                                                                    \"flex\",\n                                                                },\n                                                                [\n                                                                  _vm._l(\n                                                                    record.multiSelectValues.slice(\n                                                                      0,\n                                                                      3\n                                                                    ),\n                                                                    function (\n                                                                      option\n                                                                    ) {\n                                                                      return _c(\n                                                                        \"div\",\n                                                                        {\n                                                                          key: option.optionId,\n                                                                        },\n                                                                        [\n                                                                          _c(\n                                                                            \"vs-chip\",\n                                                                            {\n                                                                              staticClass:\n                                                                                \"w-max\",\n                                                                              style:\n                                                                                _vm.generateTextColor(\n                                                                                  option.color\n                                                                                ),\n                                                                              attrs:\n                                                                                {\n                                                                                  color:\n                                                                                    option.color,\n                                                                                },\n                                                                            },\n                                                                            [\n                                                                              _vm._v(\n                                                                                \"\\n                            \" +\n                                                                                  _vm._s(\n                                                                                    option.optionName\n                                                                                  ) +\n                                                                                  \"\\n                          \"\n                                                                              ),\n                                                                            ]\n                                                                          ),\n                                                                        ],\n                                                                        1\n                                                                      )\n                                                                    }\n                                                                  ),\n                                                                  _vm._v(\" \"),\n                                                                  record\n                                                                    .multiSelectValues\n                                                                    .length > 3\n                                                                    ? _c(\n                                                                        \"div\",\n                                                                        {\n                                                                          staticClass:\n                                                                            \"flex items-center\",\n                                                                        },\n                                                                        [\n                                                                          _c(\n                                                                            \"vs-chip\",\n                                                                            {\n                                                                              staticClass:\n                                                                                \"w-max custom-icon-size\",\n                                                                            },\n                                                                            [\n                                                                              _c(\n                                                                                \"vs-avatar\",\n                                                                                {\n                                                                                  attrs:\n                                                                                    {\n                                                                                      icon: \"add\",\n                                                                                    },\n                                                                                }\n                                                                              ),\n                                                                              _vm._v(\n                                                                                \"\\n                            \" +\n                                                                                  _vm._s(\n                                                                                    record\n                                                                                      .multiSelectValues\n                                                                                      .length -\n                                                                                      3\n                                                                                  ) +\n                                                                                  \" more\\n                          \"\n                                                                              ),\n                                                                            ],\n                                                                            1\n                                                                          ),\n                                                                        ],\n                                                                        1\n                                                                      )\n                                                                    : _vm._e(),\n                                                                ],\n                                                                2\n                                                              ),\n                                                            ]\n                                                          : !isNaN(\n                                                              record.numberValue\n                                                            )\n                                                          ? [\n                                                              _c(\"span\", [\n                                                                _vm._v(\n                                                                  \"\\n                      \" +\n                                                                    _vm._s(\n                                                                      record.numberValue\n                                                                    ) +\n                                                                    \"\\n                    \"\n                                                                ),\n                                                              ]),\n                                                            ]\n                                                          : _c(\"span\", [\n                                                              _vm._v(\n                                                                \"\\n                      \" +\n                                                                  _vm._s(\n                                                                    record.textValue\n                                                                  ) +\n                                                                  \"\\n                    \"\n                                                              ),\n                                                            ]),\n                                                      ],\n                                                      2\n                                                    )\n                                                  : _vm._e(),\n                                              ]\n                                            }\n                                          ),\n                                        ],\n                                        2\n                                      )\n                                    }\n                                  ),\n                                  0\n                                ),\n                              ]),\n                            ])\n                          : _vm._e(),\n                      ])\n                    : _vm._e(),\n                ]\n              }),\n            ],\n            2\n          )\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".w-97[data-v-4244a8a1] {\\n  width: 97%;\\n}\\n.text-gray[data-v-4244a8a1] {\\n  color: #9e9e9e;\\n}\\n.list-table[data-v-4244a8a1] {\\n  width: 100%;\\n  border-collapse: separate;\\n  border-spacing: 0 0.2em;\\n}\\n[dir] .list-table[data-v-4244a8a1] {\\n  margin-top: 20px;\\n}\\n.list-table th[data-v-4244a8a1] {\\n  color: #87909e;\\n  font-weight: 500;\\n  width: 150px;\\n  min-width: 150px;\\n}\\n[dir] .list-table th[data-v-4244a8a1] {\\n  padding: 10px 5px;\\n}\\n.list-table tr[data-v-4244a8a1] {\\n  width: 150px;\\n  min-width: 150px;\\n}\\n[dir] .list-table tr[data-v-4244a8a1] {\\n  box-shadow: 0px 2px 2px 0px #f0f1f8;\\n  cursor: pointer;\\n  background-color: #ffffff;\\n  border: 1px solid #f0f1f8;\\n}\\n[dir] .list-table tr td[data-v-4244a8a1] {\\n  padding: 10px 5px;\\n}\\n[data-v-4244a8a1] .custom-icon-size .material-icons {\\n  font-size: 1.8rem;\\n}\\n.w-max[data-v-4244a8a1] {\\n  width: -moz-max-content;\\n  width: max-content;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/lib/index.js??ref--8-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-3!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListView.vue?vue&type=style&index=0&id=4244a8a1&lang=scss&scoped=true&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/lib/index.js??ref--8-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-3!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListView.vue?vue&type=style&index=0&id=4244a8a1&lang=scss&scoped=true&\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/lib/index.js??ref--8-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-3!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListView.vue?vue&type=style&index=0&id=4244a8a1&lang=scss&scoped=true&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","export const generateTextColor = (bgColor) => {\r\n  if (!bgColor) return \"color: #000000;\";\r\n\r\n  function hexToRgb(hex) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result\r\n      ? {\r\n          r: parseInt(result[1], 16),\r\n          g: parseInt(result[2], 16),\r\n          b: parseInt(result[3], 16),\r\n        }\r\n      : null;\r\n  }\r\n\r\n  const rgb = hexToRgb(bgColor) || {};\r\n  const r = rgb.r;\r\n  const g = rgb.g;\r\n  const b = rgb.b;\r\n  // HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html\r\n  const hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b));\r\n\r\n  // Using the HSP value, determine whether the bgColor is light or dark\r\n  if (hsp > 127.5) {\r\n    // light - Need dark Text\r\n    return \"color: #000000;\";\r\n  } else {\r\n    // dark - Need light Text\r\n    return \"color: #FFFFFF;\";\r\n  }\r\n};\r\n","import { render, staticRenderFns } from \"./ListView.vue?vue&type=template&id=4244a8a1&scoped=true&\"\nimport script from \"./ListView.vue?vue&type=script&lang=js&\"\nexport * from \"./ListView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ListView.vue?vue&type=style&index=0&id=4244a8a1&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4244a8a1\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"D:\\\\laragon\\\\www\\\\ezpapel\\\\panel\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4244a8a1')) {\n      api.createRecord('4244a8a1', component.options)\n    } else {\n      api.reload('4244a8a1', component.options)\n    }\n    module.hot.accept(\"./ListView.vue?vue&type=template&id=4244a8a1&scoped=true&\", function () {\n      api.rerender('4244a8a1', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/src/views/pages/menu/components/ListView.vue\"\nexport default component.exports","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListView.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../../node_modules/style-loader/index.js!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/lib/index.js??ref--8-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-3!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListView.vue?vue&type=style&index=0&id=4244a8a1&lang=scss&scoped=true&\"","export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListView.vue?vue&type=template&id=4244a8a1&scoped=true&\""],"sourceRoot":""}